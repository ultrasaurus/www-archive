<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: Notes on how LZX becomes a SWF	</title>
	<atom:link href="/2003/06/notes-on-how-lzx-becomes-a-swf/feed/" rel="self" type="application/rss+xml" />
	<link>/2003/06/notes-on-how-lzx-becomes-a-swf/</link>
	<description>Sarah Allen&#039;s reflections on internet software and other topics</description>
	<lastBuildDate>Mon, 16 Jan 2006 18:41:21 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.1</generator>
	<item>
		<title>
		By: Jason Luka		</title>
		<link>/2003/06/notes-on-how-lzx-becomes-a-swf/#comment-42</link>

		<dc:creator><![CDATA[Jason Luka]]></dc:creator>
		<pubDate>Mon, 16 Jan 2006 18:41:21 +0000</pubDate>
		<guid isPermaLink="false">/wordpress/?p=29#comment-42</guid>

					<description><![CDATA[Okay, to get a straight SWF file:

Open the editor and pick an edit window.  I usually go &#039;Laszlo in 10 Minutes&#039; to &#039;Introduction&#039; to &#039;Hello World,&#039; just because it&#039;s at the top of the list.

Put your code in and update.

If necessary, stretch the frame that has your applet so you can see an empty space on it.

I&#039;m not sure what the protocol for this is in IE, since I only use Firefox.  On the frame with the applet, right-click the empty space and choose &#039;This Frame&#039; to &#039;Open Frame in New Window.&#039;

In the new window, scan the url and erase anything after .lzx.  Also, there&#039;ll be a double-slash somewhere in the URL.  Make it a single, then load the new URL.

You can fiddle with the options a bit, but they&#039;re not really worth messing with.  Just click SOLO.

On the next screen, just click CONTINUE.  There&#039;s nothing you need here.

After that, you have a link to the SWF at the top.  You can save it from there with a real name instead of the garbage IT comes up with.  When you press Continue, it&#039;ll give you the HTML code to implement it on your webpage.  Tada.
]]></description>
			<content:encoded><![CDATA[<p>Okay, to get a straight SWF file:</p>
<p>Open the editor and pick an edit window.  I usually go &#8216;Laszlo in 10 Minutes&#8217; to &#8216;Introduction&#8217; to &#8216;Hello World,&#8217; just because it&#8217;s at the top of the list.</p>
<p>Put your code in and update.</p>
<p>If necessary, stretch the frame that has your applet so you can see an empty space on it.</p>
<p>I&#8217;m not sure what the protocol for this is in IE, since I only use Firefox.  On the frame with the applet, right-click the empty space and choose &#8216;This Frame&#8217; to &#8216;Open Frame in New Window.&#8217;</p>
<p>In the new window, scan the url and erase anything after .lzx.  Also, there&#8217;ll be a double-slash somewhere in the URL.  Make it a single, then load the new URL.</p>
<p>You can fiddle with the options a bit, but they&#8217;re not really worth messing with.  Just click SOLO.</p>
<p>On the next screen, just click CONTINUE.  There&#8217;s nothing you need here.</p>
<p>After that, you have a link to the SWF at the top.  You can save it from there with a real name instead of the garbage IT comes up with.  When you press Continue, it&#8217;ll give you the HTML code to implement it on your webpage.  Tada.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: esz		</title>
		<link>/2003/06/notes-on-how-lzx-becomes-a-swf/#comment-41</link>

		<dc:creator><![CDATA[esz]]></dc:creator>
		<pubDate>Sat, 19 Feb 2005 08:08:58 +0000</pubDate>
		<guid isPermaLink="false">/wordpress/?p=29#comment-41</guid>

					<description><![CDATA[How to produce a swf with laszlo...

but non in fly but in solid, i have no my private WWW server, i need a swf to embed in site
[php]


sorry for chaotical and bad english..
]]></description>
			<content:encoded><![CDATA[<p>How to produce a swf with laszlo&#8230;</p>
<p>but non in fly but in solid, i have no my private WWW server, i need a swf to embed in site<br />
[php]</p>
<p>sorry for chaotical and bad english..</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Josh		</title>
		<link>/2003/06/notes-on-how-lzx-becomes-a-swf/#comment-40</link>

		<dc:creator><![CDATA[Josh]]></dc:creator>
		<pubDate>Tue, 14 Dec 2004 15:42:42 +0000</pubDate>
		<guid isPermaLink="false">/wordpress/?p=29#comment-40</guid>

					<description><![CDATA[Sarah, thanks for the tips. Unfortunately I don&#039;t have an internet connection in my new apartment right now, but I will try to dowload that to my usb drive and check it out later. I was able to get the gallery application to run by instantiating my classes with javascript statements, though I would prefer to be able build the app with embedded XML, or, even better, apply a one-time pass through the XML to generate a static UI that will never change.

For the version that is connected to the server, I load the data for each gallery item dynamically, but I want to put this swf on a CD or web site that will not have a Laszlo installation available.

I sent you an email with the swf, but made some good improvements last night after sending it. If you are interested in seeing how I am using Laszlo, I made a 10 minute video about the project  available here:

&lt;a href=&quot;http://www.getafile.com/cgi-bin/merlot/get/UVc/Laszlo/Laszlo.wmv&quot; rel=&quot;nofollow&quot;&gt;http://www.getafile.com/cgi-bin/merlot/get/UVc/Laszlo/Laszlo.wmv&lt;/a&gt;

It shows the gallery application running with the Laszlo backend server, so its fully functional.

Take care,
Josh
]]></description>
			<content:encoded><![CDATA[<p>Sarah, thanks for the tips. Unfortunately I don&#8217;t have an internet connection in my new apartment right now, but I will try to dowload that to my usb drive and check it out later. I was able to get the gallery application to run by instantiating my classes with javascript statements, though I would prefer to be able build the app with embedded XML, or, even better, apply a one-time pass through the XML to generate a static UI that will never change.</p>
<p>For the version that is connected to the server, I load the data for each gallery item dynamically, but I want to put this swf on a CD or web site that will not have a Laszlo installation available.</p>
<p>I sent you an email with the swf, but made some good improvements last night after sending it. If you are interested in seeing how I am using Laszlo, I made a 10 minute video about the project  available here:</p>
<p><a href="http://www.getafile.com/cgi-bin/merlot/get/UVc/Laszlo/Laszlo.wmv" rel="nofollow">http://www.getafile.com/cgi-bin/merlot/get/UVc/Laszlo/Laszlo.wmv</a></p>
<p>It shows the gallery application running with the Laszlo backend server, so its fully functional.</p>
<p>Take care,<br />
Josh</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Josh		</title>
		<link>/2003/06/notes-on-how-lzx-becomes-a-swf/#comment-39</link>

		<dc:creator><![CDATA[Josh]]></dc:creator>
		<pubDate>Thu, 09 Dec 2004 22:10:39 +0000</pubDate>
		<guid isPermaLink="false">/wordpress/?p=29#comment-39</guid>

					<description><![CDATA[Can we save the generated SWF file for deployment without the server if it has no interprocess communication involved?
]]></description>
			<content:encoded><![CDATA[<p>Can we save the generated SWF file for deployment without the server if it has no interprocess communication involved?</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Don Park		</title>
		<link>/2003/06/notes-on-how-lzx-becomes-a-swf/#comment-38</link>

		<dc:creator><![CDATA[Don Park]]></dc:creator>
		<pubDate>Wed, 18 Jun 2003 22:34:02 +0000</pubDate>
		<guid isPermaLink="false">/wordpress/?p=29#comment-38</guid>

					<description><![CDATA[tag definitely helps, but I was thinking of finer-grained caching on the server side and  level caching on the client side.
]]></description>
			<content:encoded><![CDATA[<p>tag definitely helps, but I was thinking of finer-grained caching on the server side and  level caching on the client side.</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>

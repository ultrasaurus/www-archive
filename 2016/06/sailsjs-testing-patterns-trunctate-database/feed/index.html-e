<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: sailsjs testing: how to truncate the database	</title>
	<atom:link href="/2016/06/sailsjs-testing-patterns-trunctate-database/feed/" rel="self" type="application/rss+xml" />
	<link>/2016/06/sailsjs-testing-patterns-trunctate-database/</link>
	<description>Sarah Allen&#039;s reflections on internet software and other topics</description>
	<lastBuildDate>Sun, 24 Jun 2018 14:16:13 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.1</generator>
	<item>
		<title>
		By: Bernardo Gomes		</title>
		<link>/2016/06/sailsjs-testing-patterns-trunctate-database/#comment-8058</link>

		<dc:creator><![CDATA[Bernardo Gomes]]></dc:creator>
		<pubDate>Sun, 24 Jun 2018 14:16:13 +0000</pubDate>
		<guid isPermaLink="false">/?p=5990#comment-8058</guid>

					<description><![CDATA[afterEach(function(done) {

function createDestroyCallbackFunction(element, index, array) {

return function(callback) {

sails.models[element].destroy({})

.exec(function(err) {

callback(null, err)

});

};

}

var destroyFuncs = Object.keys(sails.models).map(createDestroyCallbackFunction);

async.parallel(destroyFuncs, function(err, results) {

done(err);

});

});
]]></description>
			<content:encoded><![CDATA[<p>afterEach(function(done) {</p>
<p>function createDestroyCallbackFunction(element, index, array) {</p>
<p>return function(callback) {</p>
<p>sails.models[element].destroy({})</p>
<p>.exec(function(err) {</p>
<p>callback(null, err)</p>
<p>});</p>
<p>};</p>
<p>}</p>
<p>var destroyFuncs = Object.keys(sails.models).map(createDestroyCallbackFunction);</p>
<p>async.parallel(destroyFuncs, function(err, results) {</p>
<p>done(err);</p>
<p>});</p>
<p>});</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Bernardo Gomes		</title>
		<link>/2016/06/sailsjs-testing-patterns-trunctate-database/#comment-8057</link>

		<dc:creator><![CDATA[Bernardo Gomes]]></dc:creator>
		<pubDate>Sun, 24 Jun 2018 14:15:20 +0000</pubDate>
		<guid isPermaLink="false">/?p=5990#comment-8057</guid>

					<description><![CDATA[Hi,

I found some erro in second code:

this -&#062; for (modelName in sails.models).

When the function is executed the last model is used for all models.

(each loop override the value of variable.)

For fix this I change the function for this: FOR TO MAP.

afterEach(function(done) {

function createDestroyCallbackFunction(element, index, array) {

return function(callback) {

sails.models[element].destroy({})

.exec(function(err) {

callback(null, err)

});

};

}

var destroyFuncs = Object.keys(sails.models).map(createDestroyCallbackFunction);

async.parallel(destroyFuncs, function(err, results) {

done(err);

});

});
]]></description>
			<content:encoded><![CDATA[<p>Hi,</p>
<p>I found some erro in second code:</p>
<p>this -&gt; for (modelName in sails.models).</p>
<p>When the function is executed the last model is used for all models.</p>
<p>(each loop override the value of variable.)</p>
<p>For fix this I change the function for this: FOR TO MAP.</p>
<p>afterEach(function(done) {</p>
<p>function createDestroyCallbackFunction(element, index, array) {</p>
<p>return function(callback) {</p>
<p>sails.models[element].destroy({})</p>
<p>.exec(function(err) {</p>
<p>callback(null, err)</p>
<p>});</p>
<p>};</p>
<p>}</p>
<p>var destroyFuncs = Object.keys(sails.models).map(createDestroyCallbackFunction);</p>
<p>async.parallel(destroyFuncs, function(err, results) {</p>
<p>done(err);</p>
<p>});</p>
<p>});</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: khangdinh		</title>
		<link>/2016/06/sailsjs-testing-patterns-trunctate-database/#comment-5483</link>

		<dc:creator><![CDATA[khangdinh]]></dc:creator>
		<pubDate>Thu, 05 Jan 2017 12:48:39 +0000</pubDate>
		<guid isPermaLink="false">/?p=5990#comment-5483</guid>

					<description><![CDATA[this helped me :) Thanks for sharing!
]]></description>
			<content:encoded><![CDATA[<p>this helped me :) Thanks for sharing!</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>

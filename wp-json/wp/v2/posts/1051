{"id":1051,"date":"2009-04-17T14:11:00","date_gmt":"2009-04-17T22:11:00","guid":{"rendered":"https:\/\/www.ultrasaurus.com\/?p=1051"},"modified":"2009-04-17T14:11:00","modified_gmt":"2009-04-17T22:11:00","slug":"ruby-proxies","status":"publish","type":"post","link":"https:\/\/www.ultrasaurus.com\/2009\/04\/ruby-proxies\/","title":{"rendered":"ruby proxies"},"content":{"rendered":"<p><a href=\"http:\/\/www.igvita.com\/\">Ilya Grigorik<\/a>, gave a very informative talk &#8220;Ruby Proxies for Scale, Performance, and Monitoring&#8221;<\/p>\n<p>Ilya describes a proxy server as his new favorite hammer.  I can think of lots of cases where having an easy way to write a proxy server would come in handy.  Mostly what we think of when we think of proxy servers is a &#8220;transparent, cut-through proxy,&#8221; but proxies can be useful for other purposes.<\/p>\n<p>The problem that led Ilya to write a proxy server was benchmarking and performance testing.  He started with HTTPPerf is good tool for simulating load, but it is only good for a single run. <a href=\"http:\/\/github.com\/igrigorik\/autoperf\/\">autoperf<\/a> will make multiple runs and simulate more users.  <\/p>\n<p><a href=\"http:\/\/github.com\/igrigorik\/em-proxy\/\">em-proxy<\/a> Very simple syntax to send traffic to both the production server and benchmark server (and only the response is returned from production).  Real-time benchmarking against production traffic and user sees no performance hit. Only about 300 lines of code, shows the pattern for how to build a proxy server. <\/p>\n<p>Ilya walked us through using <a href=\"http:\/\/rubyeventmachine.com\/\">EventMachine<\/a> which has very concise, easy-to-read syntax for implementing proxy servers.  This does not need to be restricted to http, but can work with any protocol.<\/p>\n<p>Ilya described an interesting use case in detail. They created a proxy server which works with Beanstalkd, a distributed in-member work queue, where jobs are stored in MySql when they don&#8217;t need to be in memory.  <\/p>\n<p>Slides from the talk:<\/p>\n<div style=\"width:425px;text-align:left\" id=\"__ss_1307248\"><a style=\"font:14px Helvetica,Arial,Sans-serif;margin:12px 0 3px 0;text-decoration:underline\" href=\"http:\/\/www.slideshare.net\/igrigorik\/ruby-proxies-for-scale-performance-and-monitoring-gogaruco-igvitacom?type=presentation\" title=\"Ruby Proxies for Scale, Performance, and Monitoring - GoGaRuCo - igvita.com\">Ruby Proxies for Scale, Performance, and Monitoring &#8211; GoGaRuCo &#8211; igvita.com<\/a><\/p>\n<div style=\"font-size:11px;font-family:tahoma,arial;height:26px;padding-top:2px\">View more <a style=\"text-decoration:underline\" href=\"http:\/\/www.slideshare.net\/\">presentations<\/a> from <a style=\"text-decoration:underline\" href=\"http:\/\/www.slideshare.net\/igrigorik\">Ilya Grigorik<\/a>.<\/div>\n<\/div>\n","protected":false},"excerpt":{"rendered":"<p>Ilya Grigorik, gave a very informative talk &#8220;Ruby Proxies for Scale, Performance, and Monitoring&#8221; Ilya describes a proxy server as his new favorite hammer. I can think of lots of cases where having an easy way to write a proxy server would come in handy. Mostly what we think of when we think of proxy&hellip; <a href=\"https:\/\/www.ultrasaurus.com\/2009\/04\/ruby-proxies\/\">Continue reading <span class=\"meta-nav\">&rarr;<\/span><\/a><\/p>\n","protected":false},"author":84,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[3],"tags":[10,18],"_links":{"self":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/1051"}],"collection":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/users\/84"}],"replies":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/comments?post=1051"}],"version-history":[{"count":0,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/1051\/revisions"}],"wp:attachment":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/media?parent=1051"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/categories?post=1051"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/tags?post=1051"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":1083,"date":"2009-04-17T16:22:57","date_gmt":"2009-04-18T00:22:57","guid":{"rendered":"https:\/\/www.ultrasaurus.com\/?p=1083"},"modified":"2009-04-17T16:22:57","modified_gmt":"2009-04-18T00:22:57","slug":"how-to-write-fast-ruby-code","status":"publish","type":"post","link":"https:\/\/www.ultrasaurus.com\/2009\/04\/how-to-write-fast-ruby-code\/","title":{"rendered":"how to write fast ruby code"},"content":{"rendered":"<p>Carl Lerche talks about how to write fast ruby code. Yes, ruby is scalable.  Scaling != speed.  Focus of this talk is on speed. Ruby is fast enough for the vast majority of use cases.<\/p>\n<blockquote><p>&#8220;Slow code is your fault.&#8221;<\/p><\/blockquote>\n<p>How can I write fast code?<br \/>\n1. <strong>Write slow code<\/strong>: well-structured code that is easy to read.  Don&#8217;t worry about performance the first time around.  You can&#8217;t tell from the beginning what matters.<br \/>\n2. <strong>Use the scientific method<\/strong>.<\/p>\n<ol>\n<li>Define the question<\/li>\n<li>Gather information: where is time\/memory being spent?<\/li>\n<li>Form Hypothesis: why is this chunk of code slow\/memory hog<\/li>\n<li>Perform an experiment and collect data<\/li>\n<li>Publish results (restart if needed)<\/li>\n<\/ol>\n<p>Need questions like: &#8220;why is action X taking 600ms? &#8221; why is 60% of a Merb dispatch cycle in content negotiation?&#8221;\u00a0 Why are my mongrel instances growing to 300MB of memory&#8221;<\/p>\n<p>Some useful tools:<\/p>\n<ul>\n<li><a href=\"http:\/\/github.com\/somebee\/rbench\/tree\/master\">RBench<\/a><\/li>\n<li><a href=\"http:\/\/ruby-prof.rubyforge.org\/\">ruby-prof<\/a> to generate profile data \/ <a href=\"http:\/\/kcachegrind.sourceforge.net\">kcachegrind<\/a>:\u00a0 for reading profile data<\/li>\n<li>explain analyze log files<\/li>\n<li>New Relix \/ five runs<\/li>\n<li>memory_usage_logger<\/li>\n<li>Bleak_house (memory leaks)<\/li>\n<\/ul>\n<p>Garbage collector is a conservative mark and sweep garbage collector.\u00a0 When it runs all your code stops. Each run can take 50-150ms.\u00a0 Triggers befre grabbing more system memory (every 8MB).<\/p>\n<p>Avoid creating unecessary objects.\u00a0 Understand the difference between Ruby methods (e.g. the difference between reverse! and reverse).<\/p>\n<p>DataMapper&#8217;s identity map is pretty awesome.<\/p>\n<p>Beware of modifying large strings.<\/p>\n<p>Don&#8217;t concat strings just to pretty print them across lines.\u00a0 Do this instead:<\/p>\n<pre>     s = \"Here is my long string\" \n           \" that continues\"<\/pre>\n<p>Beware of closures.<\/p>\n<p>No code is the fastest code.\u00a0 Be lazy.\u00a0 Don&#8217;t run code till you have to.<\/p>\n<p>&#8220;Compiling your code.&#8221; Iterating is slow.\u00a0 Ruby&#8217;s AST is fast. (This is a little crazy, but sometimes you need it.)<\/p>\n<p>Make sure you have great tests, then when you optimize you can make sure you didn&#8217;t break anything.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Carl Lerche talks about how to write fast ruby code. Yes, ruby is scalable. Scaling != speed. Focus of this talk is on speed. Ruby is fast enough for the vast majority of use cases. &#8220;Slow code is your fault.&#8221; How can I write fast code? 1. Write slow code: well-structured code that is easy&hellip; <a href=\"https:\/\/www.ultrasaurus.com\/2009\/04\/how-to-write-fast-ruby-code\/\">Continue reading <span class=\"meta-nav\">&rarr;<\/span><\/a><\/p>\n","protected":false},"author":84,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[3],"tags":[9,18],"_links":{"self":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/1083"}],"collection":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/users\/84"}],"replies":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/comments?post=1083"}],"version-history":[{"count":0,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/1083\/revisions"}],"wp:attachment":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/media?parent=1083"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/categories?post=1083"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/tags?post=1083"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
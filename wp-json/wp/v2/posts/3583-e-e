{"id":3583,"date":"2012-03-30T03:46:27","date_gmt":"2012-03-30T11:46:27","guid":{"rendered":"https:\/\/www.ultrasaurus.com\/?p=3583"},"modified":"2012-03-30T03:46:27","modified_gmt":"2012-03-30T11:46:27","slug":"fixing-brew-install-opencv","status":"publish","type":"post","link":"https:\/\/www.ultrasaurus.com\/2012\/03\/fixing-brew-install-opencv\/","title":{"rendered":"fixing brew install opencv on osx"},"content":{"rendered":"<p>This is more about fixing my brew install, than about opencv.  As with many install issues the root cause was actually pretty simple, but finding it was challenging.  Along the way, I fixed a number of issues which took a bit of digging to find, so I&#8217;m leaving a little trail on the web in case other people run into the same things &#8212; or in case some inspired open source citizen has time to add better solution messages to brew.  The first step of any solution, is, of course, understanding the problem.<\/p>\n<p>$ brew install opencv<br \/>\n==&gt; Installing opencv dependency: cmake<br \/>\n==&gt; Downloading https:\/\/downloads.sf.net\/project\/machomebrew\/Bottles\/cmake-2.8.7-bottle.tar.gz<br \/>\n######################################################################## 100.0%<br \/>\nError: SHA1 mismatch<br \/>\nExpected: f218ed64ce6e7a5d3670acdd6a18e5ed95421d1f<br \/>\nGot: 3a57f6f44186e0dba34ef8b8fb4a9047e9e5d8a3<\/p>\n<p>solution:<br \/>\n$ brew update<br \/>\n\t:<br \/>\n\t:<br \/>\nError: Failed executing: make install (libtiff.rb:18)<br \/>\nIf `brew doctor&#8217; does not help diagnose the issue, please report the bug:<br \/>\n    https:\/\/github.com\/mxcl\/homebrew\/wiki\/reporting-bugs<\/p>\n<h2>tl;dr;<br \/>install command-line tools from developer.apple.com<\/h2>\n<p>before I figured that out I fixed all of the issues found with &#8216;brew doctor&#8217;<\/p>\n<p>$ brew doctor<\/p>\n<p>Warning: Some directories in \/usr\/local\/share\/man aren&#8217;t writable.<br \/>\nThis can happen if you &#8220;sudo make install&#8221; software that isn&#8217;t managed<br \/>\nby Homebrew. If a brew tries to add locale information to one of these<br \/>\ndirectories, then the install will fail during the link step.<br \/>\nYou should probably `chown` them:<\/p>\n<p>    \/usr\/local\/share\/man\/de<br \/>\n    \/usr\/local\/share\/man\/de\/man1<\/p>\n<p>solution:<br \/>\n$ sudo chown sarah \/usr\/local\/share\/man\/de\/*<br \/>\n$ sudo chown sarah \/usr\/local\/share\/man\/*<\/p>\n<p>Warning: &#8220;config&#8221; scripts exist outside your system or Homebrew directories.<br \/>\n`.\/configure` scripts often look for *-config scripts to determine if<br \/>\nsoftware packages are installed, and what additional flags to use when<br \/>\ncompiling and linking.<\/p>\n<p>Having additional scripts in your path can confuse software installed via<br \/>\nHomebrew if the config script overrides a system or Homebrew provided<br \/>\nscript of the same name. We found the following &#8220;config&#8221; scripts:<\/p>\n<p>    \/Library\/Frameworks\/Python.framework\/Versions\/2.7\/bin\/python-config<br \/>\n    \/Library\/Frameworks\/Python.framework\/Versions\/2.7\/bin\/python2.7-config<\/p>\n<p>solution:<br \/>\nUninstalled python, which I don&#8217;t use much &#8212; I figure I can install later with brew<br \/>\n$ sudo rm -rf \/Library\/Frameworks\/Python.framework\/Versions\/2.7<br \/>\n$ sudo rm -rf \/Library\/Frameworks\/Python.framework\/Versions\/2.7<br \/>\n$ sudo rm -rf &#8220;\/Applications\/Python 2.7&#8221;<br \/>\n$ sudo rm \/usr\/local\/bin\/py*<\/p>\n<p>Warning: You have unlinked kegs in your Cellar<br \/>\nLeaving kegs unlinked can lead to build-trouble and cause brews that depend on<br \/>\nthose kegs to fail to run properly once built.<\/p>\n<p>    coreutils<br \/>\n    geoip<\/p>\n<p>solution:<br \/>\n$ brew link coreutils<br \/>\nLinking \/usr\/local\/Cellar\/coreutils\/8.12&#8230; 0 symlinks created<br \/>\n$ brew link geoip<br \/>\nLinking \/usr\/local\/Cellar\/geoip\/1.4.6&#8230; 2 symlinks created<\/p>\n<p>Warning: You have uncommitted modifications to Homebrew&#8217;s core.<br \/>\nUnless you know what you are doing, you should run:<br \/>\n  cd \/usr\/local &amp;&amp; git reset &#8211;hard<\/p>\n<p>tried this:<br \/>\n$ cd \/usr\/local &amp;&amp; git reset &#8211;hard<br \/>\nHEAD is now at ffb9aa5 Remove &#8220;__brew_ps1&#8221; function from completion<br \/>\n&#8211;&gt; didn&#8217;t work<\/p>\n<p>solution:<br \/>\n$ pushd \/usr\/local<br \/>\n$ git status<br \/>\n&#8211;&gt; lots of untracked files, no idea how I got into that state<br \/>\n$ git add .<br \/>\n$ git reset HEAD &#8211;hard<br \/>\n$ popd<\/p>\n<p>Warning: Your Xcode is configured with an invalid path.<br \/>\nYou should change it to the correct path. Please note that there is no correct<br \/>\npath at this time if you have *only* installed the Command Line Tools for Xcode.<br \/>\nIf your Xcode is pre-4.3 or you installed the whole of Xcode 4.3 then one of<br \/>\nthese is (probably) what you want:<\/p>\n<p>    sudo xcode-select -switch \/Developer<br \/>\n    sudo xcode-select -switch \/Applications\/Xcode.app\/Contents\/Developer<\/p>\n<p>DO NOT SET \/ OR EVERYTHING BREAKS!<\/p>\n<p>I don&#8217;t have anything at \/Developer, so I did this:<br \/>\n$  sudo xcode-select -switch \/Applications\/Xcode.app\/Contents\/Developer<\/p>\n<p>$ brew doctor<br \/>\nYour system is raring to brew.<\/p>\n<p>Of course, it wasn&#8217;t, the key clue for me was finding this in the long stream of installation output:<br \/>\ntiffgt.c:35:11: fatal error: &#8216;OpenGL\/gl.h&#8217; file not found<\/p>\n<p>which convinced me that I was missing some fundamentals.  Searching on the text of the error led me to:<br \/>\n<a href=\"https:\/\/github.com\/mxcl\/homebrew\/issues\/11088\">https:\/\/github.com\/mxcl\/homebrew\/issues\/11088<\/a><\/p>\n<p>Ideally &#8216;brew doctor&#8217; would have caught that I was missing the command-line tools that don&#8217;t get installed automatically with XCode 4.3.  I installed those and all was well.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>This is more about fixing my brew install, than about opencv. As with many install issues the root cause was actually pretty simple, but finding it was challenging. Along the way, I fixed a number of issues which took a bit of digging to find, so I&#8217;m leaving a little trail on the web in&hellip; <a href=\"https:\/\/www.ultrasaurus.com\/2012\/03\/fixing-brew-install-opencv\/\">Continue reading <span class=\"meta-nav\">&rarr;<\/span><\/a><\/p>\n","protected":false},"author":84,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[2],"tags":[],"_links":{"self":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/3583"}],"collection":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/users\/84"}],"replies":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/comments?post=3583"}],"version-history":[{"count":0,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/3583\/revisions"}],"wp:attachment":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/media?parent=3583"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/categories?post=3583"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/tags?post=3583"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
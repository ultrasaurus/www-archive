{"id":6848,"date":"2019-08-17T16:36:04","date_gmt":"2019-08-17T23:36:04","guid":{"rendered":"https:\/\/www.ultrasaurus.com\/?p=6848"},"modified":"2019-08-17T16:40:35","modified_gmt":"2019-08-17T23:40:35","slug":"graph-in-rust-using-petgraph","status":"publish","type":"post","link":"https:\/\/www.ultrasaurus.com\/2019\/08\/graph-in-rust-using-petgraph\/","title":{"rendered":"graph in rust using petgraph"},"content":{"rendered":"<p>Getting started with Rust and the <a href=\"https:\/\/docs.rs\/petgraph\/0.4.13\/petgraph\/\">petgraph crate<\/a>, I made a little program to write a graph in &#8220;dot&#8221; file format.  Below is the rust and some command-line code to turn it into a png.<\/p>\n<p><img loading=\"lazy\" src=\"https:\/\/www.ultrasaurus.com\/wp-content\/uploads\/2019\/08\/example.dot_.png\" alt=\"visual graph representation with circles and arrows\" width=\"163\" height=\"347\" class=\"thumbnail alignright size-full wp-image-6850\" srcset=\"https:\/\/www.ultrasaurus.com\/wp-content\/uploads\/2019\/08\/example.dot_.png 163w, https:\/\/www.ultrasaurus.com\/wp-content\/uploads\/2019\/08\/example.dot_-141x300.png 141w\" sizes=\"(max-width: 163px) 100vw, 163px\" \/><\/p>\n<pre><code>use petgraph::Graph;\nuse petgraph::dot::{Dot, Config};\nuse std::fs::File;\nuse std::io::Write;\n\nfn main() {\n    println!(\"hello graph!\");\n    let mut graph = Graph::&lt;_, i32&gt;::new();\n    graph.add_node(\"A\");\n    graph.add_node(\"B\");\n    graph.add_node(\"C\");\n    graph.add_node(\"D\");\n    graph.extend_with_edges(&amp;[\n        (0, 1), (0, 2), (0, 3),\n        (1, 2), (1, 3),\n        (2, 3),\n    ]);\n\n    println!(\"{:?}\", Dot::with_config(&amp;graph, &amp;[Config::EdgeNoLabel]));\n    let mut f = File::create(\"example.dot\").unwrap();\n    let output = format!(\"{}\", Dot::with_config(&amp;graph, &amp;[Config::EdgeNoLabel]));\n    f.write_all(&amp;output.as_bytes()).expect(\"could not write file\");\n}\n<\/code><\/pre>\n<p>output of <code>cargo run<\/code>:<\/p>\n<pre><code>hello graph!\ndigraph {\n    0 [label=\"\\\"A\\\"\"]\n    1 [label=\"\\\"B\\\"\"]\n    2 [label=\"\\\"C\\\"\"]\n    3 [label=\"\\\"D\\\"\"]\n    0 -&gt; 1\n    0 -&gt; 2\n    0 -&gt; 3\n    1 -&gt; 2\n    1 -&gt; 3\n    2 -&gt; 3\n}\n<\/code><\/pre>\n<h2>Generate PNG from DOT file<\/h2>\n<p>The <code>dot<\/code> command is part of <a href=\"https:\/\/www.graphviz.org\/\">graphviz<\/a>, which I installed with <code>brew install graphviz<\/code>.<\/p>\n<p>The following command creates a PNG file from the .dot file generated by Rust code above<\/p>\n<pre><code>dot -T png -O example.dot\n<\/code><\/pre>\n<p>The resulting PNG is displayed at the top-right of this post (next to the Rust code).<\/p>\n<hr \/>\n<p>Special thanks to:<br \/>\n* <a href=\"https:\/\/stackoverflow.com\/questions\/57540335\/writing-petgraph-dot-to-a-file\">mcarton&#8217;s help on stackoverflow<\/a> for enlightening me on a bit of Rust nuance as I experimented with petgraph.<br \/>\n* <a href=\"https:\/\/rudifa.wordpress.com\/2010\/01\/10\/how-to-run-graphviz-on-the-mac\/\">rudifa&#8217;s post graphviz-on-the-mac<\/a><\/p>\n","protected":false},"excerpt":{"rendered":"<p>Getting started with Rust and the petgraph crate, I made a little program to write a graph in &#8220;dot&#8221; file format. Below is the rust and some command-line code to turn it into a png. use petgraph::Graph; use petgraph::dot::{Dot, Config}; use std::fs::File; use std::io::Write; fn main() { println!(&#8220;hello graph!&#8221;); let mut graph = Graph::&lt;_, i32&gt;::new();&hellip; <a href=\"https:\/\/www.ultrasaurus.com\/2019\/08\/graph-in-rust-using-petgraph\/\">Continue reading <span class=\"meta-nav\">&rarr;<\/span><\/a><\/p>\n","protected":false},"author":84,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[2],"tags":[],"_links":{"self":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/6848"}],"collection":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/users\/84"}],"replies":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/comments?post=6848"}],"version-history":[{"count":8,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/6848\/revisions"}],"predecessor-version":[{"id":6857,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/6848\/revisions\/6857"}],"wp:attachment":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/media?parent=6848"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/categories?post=6848"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/tags?post=6848"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":5990,"date":"2016-06-11T19:10:00","date_gmt":"2016-06-12T02:10:00","guid":{"rendered":"https:\/\/www.ultrasaurus.com\/?p=5990"},"modified":"2016-06-11T19:11:51","modified_gmt":"2016-06-12T02:11:51","slug":"sailsjs-testing-patterns-trunctate-database","status":"publish","type":"post","link":"https:\/\/www.ultrasaurus.com\/2016\/06\/sailsjs-testing-patterns-trunctate-database\/","title":{"rendered":"sailsjs testing: how to truncate the database"},"content":{"rendered":"<p>SailsJS is a NodeJS MVC framework that we use for the <a href=\"https:\/\/github.com\/openopps\/openopps-platform\">OpenOpps Platform<\/a>.  Sails has some basic <a href=\"http:\/\/sailsjs.org\/documentation\/concepts\/testing\">testing docs<\/a>, but it doesn&#8217;t explain how to set up the framework nicely where the database is dropped in between tests.  I find myself always re-figuring out these patterns when I write experimental apps.<\/p>\n<p>With an in-memory database, this bootstrap.test.js will drop the database between tests:<\/p>\n<pre>\nvar sails = require('sails');\n\nbefore(function(done) {\n  sails.lift({\n    \/\/ test config\n    environment: 'test',\n    port: 9999,   \/\/ so we can run the app and tests at the same time\n    hostName: 'localhost:9999',\n    connections: {\n      testDB: {\n        adapter: 'sails-memory'\n      }\n    },\n    models: {\n      connection: 'testDB'\n    },\n  }, function(err, server) {\n    if (err) return done(err);\n    done(err, sails);\n  });\n});\n\nafter(function(done) {\n  sails.lower(done);\n});\n\nbeforeEach(function(done) {\n  \/\/ Drops database between each test.  This works because we use\n  \/\/ the memory database\n  sails.once('hook:orm:reloaded', done);\n  sails.emit('hook:orm:reload');\n});\n<\/pre>\n<p>When I need to use postgres, Waterline doesn&#8217;t expose SQL truncate which would be much faster, instead this bootstrap.test.js will destroy all the models:<\/p>\n<pre>\nvar async = require('async');\nvar sails = require('sails');\n\nbefore(function(done) {\n  sails.lift({\n    \/\/ test config\n    environment: 'test',\n    port: 9999,   \/\/ so we can run the app and tests at the same time\n    hostName: 'localhost:9999',\n    models: {\n      connection: 'postgresql'\n    },\n  }, function(err, server) {\n    if (err) return done(err);\n    done(err, sails);\n  });\n});\n\nafterEach(function(done) {\n  destroyFuncs = [];\n  for (modelName in sails.models) {\n    destroyFuncs.push(function(callback) {\n      sails.models[modelName].destroy({})\n      .exec(function(err) {\n        callback(null, err)\n      });\n    })\n  }\n  async.parallel(destroyFuncs, function(err, results) {\n    done(err);\n  })\n});\n\nafter(function(done) {\n  sails.lower(done);\n})\n\n<\/pre>\n","protected":false},"excerpt":{"rendered":"<p>SailsJS is a NodeJS MVC framework that we use for the OpenOpps Platform. Sails has some basic testing docs, but it doesn&#8217;t explain how to set up the framework nicely where the database is dropped in between tests. I find myself always re-figuring out these patterns when I write experimental apps. With an in-memory database,&hellip; <a href=\"https:\/\/www.ultrasaurus.com\/2016\/06\/sailsjs-testing-patterns-trunctate-database\/\">Continue reading <span class=\"meta-nav\">&rarr;<\/span><\/a><\/p>\n","protected":false},"author":84,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[2],"tags":[],"_links":{"self":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/5990"}],"collection":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/users\/84"}],"replies":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/comments?post=5990"}],"version-history":[{"count":0,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/5990\/revisions"}],"wp:attachment":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/media?parent=5990"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/categories?post=5990"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/tags?post=5990"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
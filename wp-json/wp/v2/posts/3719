{"id":3719,"date":"2015-04-07T18:30:22","date_gmt":"2015-04-08T01:30:22","guid":{"rendered":"https:\/\/www.ultrasaurus.com\/?p=3719"},"modified":"2015-04-07T18:30:22","modified_gmt":"2015-04-08T01:30:22","slug":"r-functions-and-avoiding-loops","status":"publish","type":"post","link":"https:\/\/www.ultrasaurus.com\/2015\/04\/r-functions-and-avoiding-loops\/","title":{"rendered":"r: functions and avoiding loops"},"content":{"rendered":"<p>After <a href=\"https:\/\/www.ultrasaurus.com\/2012\/10\/getting-started-with-r\/\">getting started<\/a> with the basic syntax and some frequently used functions, I needed to learn to write some code.<\/p>\n<p>I enjoyed this nice <a href=\"http:\/\/www.statmethods.net\/management\/userfunctions.html\">intro to functions<\/a>.  <\/p>\n<pre>\r\nmyfunction &lt;- function(arg1, arg2, ... ) {\r\n   statements\r\n   return(object)\r\n}\r\n<\/pre>\n<p>We can put functions (or any code) in a text file and load it from the R command line:<\/p>\n<pre>\r\nsource(\"mycode.R\")\r\n<\/pre>\n<p>where mycode.R is in the same directory as where I&#8217;m running R or a full path to the script.<\/p>\n<p>But then I got stuck in how to transform my data table.  As much as I wanted to iterate using loops, I felt that was a very un-R-like solution.  I found some good patterns in <a href=\"https:\/\/twitter.com\/xieyihui\">@xieyihui<\/a>&#8216;s <a href=\"http:\/\/yihui.name\/en\/2010\/10\/on-the-gory-loops-in-r\/\">gory loops<\/a> post.<\/p>\n<p>If you need to make a string, you can use <code>paste<\/code> like Ruby&#8217;s join method:<\/p>\n<pre>\r\n&gt; words  words\r\n[1] \"one\"   \"two\"   \"three\"\r\n\r\n&gt; paste(words)\r\n[1] \"one\"   \"two\"   \"three\"\r\n\r\n&gt; paste(words, collapse=\"\")\r\n[1] \"onetwothree\"\r\n\r\n&gt; paste(words, collapse=\",\")\r\n[1] \"one,two,three\"\r\n\r\n&gt; paste(words, collapse=\", \")\r\n[1] \"one, two, three\"\r\n<\/pre>\n","protected":false},"excerpt":{"rendered":"<p>After getting started with the basic syntax and some frequently used functions, I needed to learn to write some code. I enjoyed this nice intro to functions. myfunction &lt;- function(arg1, arg2, &#8230; ) { statements return(object) } We can put functions (or any code) in a text file and load it from the R command&hellip; <a href=\"https:\/\/www.ultrasaurus.com\/2015\/04\/r-functions-and-avoiding-loops\/\">Continue reading <span class=\"meta-nav\">&rarr;<\/span><\/a><\/p>\n","protected":false},"author":84,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[2],"tags":[],"_links":{"self":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/3719"}],"collection":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/users\/84"}],"replies":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/comments?post=3719"}],"version-history":[{"count":0,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/3719\/revisions"}],"wp:attachment":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/media?parent=3719"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/categories?post=3719"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/tags?post=3719"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
{"id":2839,"date":"2010-10-31T06:13:11","date_gmt":"2010-10-31T14:13:11","guid":{"rendered":"https:\/\/www.ultrasaurus.com\/?p=2839"},"modified":"2010-10-31T06:13:11","modified_gmt":"2010-10-31T14:13:11","slug":"the-future-of-mobile-software-engineering","status":"publish","type":"post","link":"https:\/\/www.ultrasaurus.com\/2010\/10\/the-future-of-mobile-software-engineering\/","title":{"rendered":"the future of mobile software engineering"},"content":{"rendered":"<p>Last week I participated in a <a href=\"http:\/\/www.cmu.edu\/silicon-valley\/wmse\/\">Workshop on Mobile Software Engineering<\/a> as part of the <a href=\"http:\/\/mobicase.org\/\">MobiCASE<\/a> conference.\u00a0 I had agreed to be an organizer last summer upon the request <a href=\"http:\/\/www.cmu.edu\/silicon-valley\/faculty-staff\/griss-martin.html\">Martin Griss<\/a>.\u00a0 I was intrigued by the topic, but didn&#8217;t have a clear vision of what might come of the workshop.\u00a0 I applaud Martin&#8217;s facilitating an engaging discussion.<\/p>\n<p>What is different about mobile? and what does it mean for software engineering in general and education specifically?<\/p>\n<p>I appreciated Tony Wasserman proposing his list of what was unique to mobile.  After a lively discussion, there seemed agreement that mobile had just a few unique aspects, but the rest were significant due to the degree of constraint or opportunity offered by mobile platforms.\u00a0 Aspects below are quoted from the <a href=\"http:\/\/www.cmu.edu\/silicon-valley\/wmse\/wasserman-foser2010.pdf\">Wasserman paper<\/a> which summarizes results from his survey of mobile developers, with additional comments from me and the addition of privacy, personal and &#8220;always on&#8221; which were raised at the workshop.<\/p>\n<p>Unique aspects:<\/p>\n<ul>\n<li><strong>Real World Interaction.<\/strong> &#8220;Sensor handling \u2013 most modern mobile devices, e.g., \u201csmartphones\u201d, include an accelerometer that responds to device movement, a touch screen that responds to numerous gestures, along with real and\/or virtual keyboards, a global positioning system, a microphone usable by applications other than voice calls, one or more cameras, and multiple networking protocols.&#8221;<\/li>\n<li><strong>Always On.<\/strong> One participant remarked &#8220;I&#8217;m interacting with my phone right now&#8221; &#8212; with the device out of sight, tucked away in his pocket, he noted that the vibrate option and connectedness of the phone were a key part of the interface which provide phones with unique capabilities.<\/li>\n<li><strong>Personal.<\/strong> Mobile devices are true personal computers.\u00a0 People rarely, if ever, share mobile phones.\u00a0 Unlike so-called personal computers which may sit in a living room, lab or caf\u00e9 to be used by various individuals, the cell phone is typically tied to an individual who has a phone number, contacts and other very personal, private information stored on their device. The device can also act as an agent, taking messages or notifying the individual upon significant events, such as a phone call or that crops are ready to be harvested in an online game.<\/li>\n<\/ul>\n<p>Significant Aspects:<\/p>\n<ul>\n<li><strong>User interface<\/strong>.\u00a0 Tony contrasts &#8220;that with a custom-built embedded application, the  developer can control all aspects of the user experience, but a mobile  application must share common elements of the user interface with other  applications and must adhere to externally developed user interface  guidelines.&#8221; However, this is is a similar constraint to desktop applications.\u00a0 I believe that the small form factor combined with very high resolution screens that we see in today&#8217;s devices actually presents opportunity for innovation around visualization and task-oriented user experiences.<\/li>\n<li><strong>Privacy.<\/strong> The constraints and abilities differ a little between mobile platforms in terms of access to information; however, the models are starkly different from the allow-everything model of the desktop and rigidly sandboxed web applications.\u00a0 Mobile applications, like web applications, have free access to the network but can contact any host and exchange any information with no requirement for user notification.\u00a0 Access to certain sensors like geolocation and private data like contacts do typically require approval, but once given we have no additional control and must simply trust the application to do the right thing.\u00a0 There are not yet clear guidelines around what is and is not appropriate in terms of data collection and tracking.\u00a0 There is also room for user interface innovation of how we might let people know what information is shared and what is private.<\/li>\n<li><strong>Complexity of testing.<\/strong> &#8220;while native applications can be tested in a  traditional manner or via a PC-based emulator, mobile web applications  are particularly challenging to test. Not only do they have many of the  same issues found in testing web applications, but they have the added  issues associated with transmission through gateways and the telephone  network.&#8221;<\/li>\n<li><strong>Power consumption<\/strong>. &#8220;many aspects of an application  affect its use of the device\u2019s power and thus the battery life of the  device. Dedicated devices can be optimized for maximum battery life, but  mobile applications may inadvertently make extensive use of  battery-draining resources.&#8221;\u00a0 A workshop participant noted that with the popularity of laptops, some desktop applications and certainly desktop operating systems have started to take into this into account in software design; however, this is clearly a more significant factor influencing mobile application design.<\/li>\n<li><strong>Interaction with other applications<\/strong> &#8220;most embedded devices only have factory-installed software, but mobile devices may have numerous applications from varied sources, with the possibility of interactions among them;&#8221; however, desktop and web applications more routinely interact.<\/li>\n<li> <strong>Native and hybrid (mobile web) applications<\/strong> &#8220;most embedded devices use only software installed directly on the device, but mobile devices often include applications that invoke services over the telephone network or the Internet via a web browser and affect data and displays on the device.&#8221;\u00a0 We saw this in hybrid CD-ROMs and many desktop applications today; however, the prevalence of connectedness and web integration in mobile applications is unrivaled.<\/li>\n<li><strong>Families of hardware and software platforms.<\/strong> &#8220;most embedded devices execute code that is custom-built for the properties of that device, but mobile devices may have to support applications that were written for all of the varied devices supporting the operating system, and also for different versions of the operating system. An Android developer, for example, must decide whether to build a single application or multiple versions to run on the broad range of Android devices and operating system releases.&#8221;\u00a0 While analogous to variety of desktop hardware and software platforms, the diversity of mobile devices and operating systems is much more significant.<\/li>\n<li><strong>Security.<\/strong> &#8220;most embedded devices are &#8216;closed,&#8217; in the sense that there is no straightforward way to attack the embedded software and affect its operation, but mobile platforms are open, allowing the installation of new &#8216;malware&#8217; applications that can affect the overall operation of the device, including the surreptitious transmission of local data by such an application.&#8221;<\/li>\n<\/ul>\n<p>So, mobile is different, but what does that mean for software engineering?<\/p>\n<p>I enjoyed Martin&#8217;s analogy to the advent of object-oriented software development which was necessitated by the complexities of applications with a graphic user interface.\u00a0 The preceding work in command line programs just did not need that level of abstraction; however, once invented, object-oriented programming patterns are effectively used for every type of programming challenge. Perhaps the constraints of mobile development will offer similar innovation.\u00a0 I think we are seeing a glimpse of that with web development patterns being applied to mobile user interface development with native mobile apps using HTML, CSS and the web pattern of model-view-controllers with screens addressed by internal URLs.\u00a0 I wonder if there are other emerging patterns as well.<\/p>\n<p>At the end of the workshop, I voiced the opinion that while the conversation was interesting, there was no urgent question raised.\u00a0 Upon reflection, I have changed my mind.\u00a0 There is an urgent need for research into how to take advantage of emergent capabilities which will not be mainstream for many years.\u00a0 While industry implements obvious ideas taking advantage of now prevalent infrastructure and popular devices, many challenges and opportunities are ignored.\u00a0 Just as Doug Engelbart&#8217;s <a href=\"http:\/\/en.wikipedia.org\/wiki\/NLS_(computer_system)\/\">Augment<\/a> system and Ivan Sutherland&#8217;s <a href=\"http:\/\/en.wikipedia.org\/wiki\/Sketchpad\">Sketchpad<\/a> leveraged what was then enormous compute power to lay the foundation for what became ubiquitous patterns in modern desktop GUI, there is an opportunity for universities and research labs to create applications and patterns of user experience and software component design that could revolutionize how people use mobile devices in ten or twenty years.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Last week I participated in a Workshop on Mobile Software Engineering as part of the MobiCASE conference.\u00a0 I had agreed to be an organizer last summer upon the request Martin Griss.\u00a0 I was intrigued by the topic, but didn&#8217;t have a clear vision of what might come of the workshop.\u00a0 I applaud Martin&#8217;s facilitating an&hellip; <a href=\"https:\/\/www.ultrasaurus.com\/2010\/10\/the-future-of-mobile-software-engineering\/\">Continue reading <span class=\"meta-nav\">&rarr;<\/span><\/a><\/p>\n","protected":false},"author":84,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[3],"tags":[],"_links":{"self":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/2839"}],"collection":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/users\/84"}],"replies":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/comments?post=2839"}],"version-history":[{"count":0,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/2839\/revisions"}],"wp:attachment":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/media?parent=2839"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/categories?post=2839"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/tags?post=2839"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
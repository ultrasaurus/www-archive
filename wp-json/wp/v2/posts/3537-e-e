{"id":3537,"date":"2012-01-07T21:40:37","date_gmt":"2012-01-08T05:40:37","guid":{"rendered":"https:\/\/www.ultrasaurus.com\/?p=3537"},"modified":"2012-01-07T21:40:37","modified_gmt":"2012-01-08T05:40:37","slug":"ffmpeg-on-osx-lion","status":"publish","type":"post","link":"https:\/\/www.ultrasaurus.com\/2012\/01\/ffmpeg-on-osx-lion\/","title":{"rendered":"ffmpeg on osx lion"},"content":{"rendered":"<p>Update: <a href=\"https:\/\/www.ultrasaurus.com\/sarahblog\/2013\/06\/ffmpeg-for-ogg-and-webm\/\">more links and ogg and webm details<\/a><\/p>\n<p>I found that I needed to convert an m4a audio file (which is what QuickTime saves when I record audio) to a wav file, so I decided to use my favorite &#8220;can opener.&#8221; The versatile open source <a href=\"http:\/\/ffmpeg.org\">ffmpeg<\/a> tool has always seemed to be able to convert anything to anything in audio-video formats.<\/p>\n<p>I decided to pull the source from git:<br \/>\n<code><br \/>\n$ git clone git:\/\/source.ffmpeg.org\/ffmpeg.git<br \/>\n$ cd ffmpeg\/<br \/>\n<\/code><\/p>\n<p>Stable versions are tagged (which I could see with &#8220;git tag -l&#8221;).  I don&#8217;t need to live on the edge right now, so I switched to the tag &#8220;n0.9.1&#8221; which I assume is for the latest stable build &#8220;harmony&#8221; 0.9.1 and made a local branch based on that.<br \/>\n<code><br \/>\n$ git co n0.9.1<br \/>\n$ git checkout -b n0.9.1<br \/>\n<\/code><\/p>\n<p>Instructions for building ffmpeg are in the &#8220;INSTALL&#8221; file.  I discovered I needed yasm, which I could install with brew.  Here&#8217;s what I did:<br \/>\n<code><br \/>\n$  brew install yasm<br \/>\n$  .\/configure<br \/>\n$ make<br \/>\nCC\tlibavdevice\/alldevices.o<br \/>\nCC\tlibavdevice\/avdevice.o<br \/>\nCC\tlibavdevice\/lavfi.o<br \/>\nAR\tlibavdevice\/libavdevice.a<br \/>\nCC\tlibavfilter\/af_aconvert.o<br \/>\nlibavfilter\/af_aconvert.c:53: warning: function declaration isn\u2019t a prototype<br \/>\nlibavfilter\/af_aconvert.c:105: warning: function declaration isn\u2019t a prototype<br \/>\nCC\tlibavfilter\/af_aformat.o<br \/>\nCC\tlibavfilter\/af_anull.o<br \/>\nCC\tlibavfilter\/af_aresample.o<br \/>\n    :<br \/>\n   :<br \/>\nffserver.c: In function \u2018parse_ffconfig\u2019:<br \/>\nffserver.c:4236: warning: \u2018avcodec_get_context_defaults2\u2019 is deprecated (declared at .\/libavcodec\/avcodec.h:3948)<br \/>\nffserver.c:4237: warning: \u2018avcodec_get_context_defaults2\u2019 is deprecated (declared at .\/libavcodec\/avcodec.h:3948)<br \/>\nLD\tffserver_g<br \/>\nCP\tffserver<br \/>\nSTRIP\tffserver<br \/>\n<\/code><br \/>\nI saw a lot of warnings, but they didn&#8217;t seem to negatively affect what I was trying to do.  I found a <a href=\"http:\/\/www.catswhocode.com\/blog\/19-ffmpeg-commands-for-all-needs\">nice blog post from catswhocode<\/a> to remind me of the usage, and was able to use this simple command:<\/p>\n<p><code><br \/>\n$ .\/ffmpeg -i frog.m4a frog.wav<br \/>\nffmpeg version 0.9.1, Copyright (c) 2000-2012 the FFmpeg developers<br \/>\n  built on Jan  7 2012 21:19:08 with llvm_gcc 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.15.00)<br \/>\n  configuration:<br \/>\n  libavutil    51. 32. 0 \/ 51. 32. 0<br \/>\n  libavcodec   53. 42. 4 \/ 53. 42. 4<br \/>\n  libavformat  53. 24. 2 \/ 53. 24. 2<br \/>\n  libavdevice  53.  4. 0 \/ 53.  4. 0<br \/>\n  libavfilter   2. 53. 0 \/  2. 53. 0<br \/>\n  libswscale    2.  1. 0 \/  2.  1. 0<br \/>\nInput #0, mov,mp4,m4a,3gp,3g2,mj2, from 'frog.m4a':<br \/>\n  Metadata:<br \/>\n    major_brand     : M4A<br \/>\n    minor_version   : 0<br \/>\n    compatible_brands: M4V M4A mp42isom<br \/>\n    creation_time   : 2012-01-08 05:09:05<br \/>\n  Duration: 00:00:07.22, start: 0.000000, bitrate: 206 kb\/s<br \/>\n    Stream #0:0(und): Audio: aac (mp4a \/ 0x6134706D), 44100 Hz, stereo, s16, 201 kb\/s<br \/>\n    Metadata:<br \/>\n      creation_time   : 2012-01-08 05:09:05<br \/>\n      handler_name    :<br \/>\nOutput #0, wav, to 'frog.wav':<br \/>\n  Metadata:<br \/>\n    major_brand     : M4A<br \/>\n    minor_version   : 0<br \/>\n    compatible_brands: M4V M4A mp42isom<br \/>\n    creation_time   : 2012-01-08 05:09:05<br \/>\n    encoder         : Lavf53.24.2<br \/>\n    Stream #0:0(und): Audio: pcm_s16le ([1][0][0][0] \/ 0x0001), 44100 Hz, stereo, s16, 1411 kb\/s<br \/>\n    Metadata:<br \/>\n      creation_time   : 2012-01-08 05:09:05<br \/>\n      handler_name    :<br \/>\nStream mapping:<br \/>\n  Stream #0:0 -&gt; #0:0 (aac -&gt; pcm_s16le)<br \/>\nPress [q] to stop, [?] for help<br \/>\nsize=    1244kB time=00:00:07.22 bitrate=1411.3kbits\/s<br \/>\nvideo:0kB audio:1244kB global headers:0kB muxing overhead 0.003611%<\/p>\n<p>$ ls<br \/>\nfrog.m4a  frog.wav<br \/>\n<\/code><\/p>\n<p>Success!!<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Update: more links and ogg and webm details I found that I needed to convert an m4a audio file (which is what QuickTime saves when I record audio) to a wav file, so I decided to use my favorite &#8220;can opener.&#8221; The versatile open source ffmpeg tool has always seemed to be able to convert&hellip; <a href=\"https:\/\/www.ultrasaurus.com\/2012\/01\/ffmpeg-on-osx-lion\/\">Continue reading <span class=\"meta-nav\">&rarr;<\/span><\/a><\/p>\n","protected":false},"author":84,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[2],"tags":[],"_links":{"self":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/3537"}],"collection":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/users\/84"}],"replies":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/comments?post=3537"}],"version-history":[{"count":0,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/3537\/revisions"}],"wp:attachment":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/media?parent=3537"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/categories?post=3537"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/tags?post=3537"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
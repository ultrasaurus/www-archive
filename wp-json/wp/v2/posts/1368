{"id":1368,"date":"2009-05-25T07:57:05","date_gmt":"2009-05-25T15:57:05","guid":{"rendered":"https:\/\/www.ultrasaurus.com\/?p=1368"},"modified":"2009-05-25T07:57:05","modified_gmt":"2009-05-25T15:57:05","slug":"rails-plugin-view-helpers-and-rspec","status":"publish","type":"post","link":"https:\/\/www.ultrasaurus.com\/2009\/05\/rails-plugin-view-helpers-and-rspec\/","title":{"rendered":"rails plugin view helpers and rspec"},"content":{"rendered":"<h1>RSpec for View Helpers<\/h1>\n<ul>\n<li> To test a view helper, you need to test the plugin in the context of a rails app<\/li>\n<li>To verify that you can put the following code into your spec_helper.rb (or just use <a href=\"http:\/\/wiki.github.com\/pat-maddox\/rspec-plugin-generator\/installation-and-basic-use\">rspec-plugin-generator<\/a> by <a href=\"http:\/\/www.patmaddox.com\/blog\/\">Pat Maddox<\/a> which will generate this code for you)\n<pre>begin\n  require File.dirname(__FILE__) + '\/..\/..\/..\/..\/spec\/spec_helper'\nrescue LoadError\n  puts \"You need to install rspec in your base app\"\n  exit\nend<\/pre>\n<\/li>\n<li>By convention, helper examples live in spec\/helpers\/ then their dependencies will get magically included.\u00a0\u00a0<a href=\"http:\/\/www.ruby-forum.com\/topic\/187635#819442\"><span class=\"name\"> David Chelimsky notes<\/span><\/a><br \/>\n<blockquote><p>All directories under spec\/ are potentially magic &#8211; rspec will always<br \/>\nlook at spec\/:directory\/:filename and see if it has an example group<br \/>\ntype registered for whatever directory is. So if there *is* a foo<br \/>\nexample group type, it will be used for any spec file in spec\/foos<\/p><\/blockquote>\n<\/li>\n<li>If you put helpers elsewhere, then you need to declare their type (or manually include dependencies)\n<pre>describe AppletHelper, :type =&gt; :helper do<\/pre>\n<\/li>\n<li>To send params in your test, you can just define them before calling your view helper.\u00a0 For example:\n<pre>describe DogHelper do\n  it \"should bark\" do\n    params[:debug] = \"foo\"\n    html = helper.bark\n    html.should have_tag(\"script\")\n  end\nend<\/pre>\n<\/li>\n<\/ul>\n<h1>What do you do when some behavior depends on RAILS_ENV?<\/h1>\n<ul>\n<li>It&#8217;s not a good practice to switch around RAILS_ENV in the test framework<\/li>\n<li>Better idea is use a method to check it and then stub that out<\/li>\n<li>Here&#8217;s an outline:\u00a0 <a href=\"https:\/\/gist.github.com\/71a30f8d26928dfe9663\">gist from Zach<\/a><\/li>\n<li>Here&#8217;s what I did: <a href=\"http:\/\/github.com\/ultrasaurus\/openlaszlo_plugin\/blob\/112c83bd4bc2b9f877e1326862fdc74594970f04\/lib\/env_checker.rb\">EnvChecker<\/a>, <a href=\"http:\/\/github.com\/ultrasaurus\/openlaszlo_plugin\/blob\/112c83bd4bc2b9f877e1326862fdc74594970f04\/lib\/applet_view_helper.rb#L44\">code<\/a> and <a href=\"http:\/\/github.com\/ultrasaurus\/openlaszlo_plugin\/blob\/67cce59b77dc8352d032ae122e318bebf8879f04\/spec\/applet_view_helper_spec.rb\">example<\/a><\/li>\n<\/ul>\n<h1>Stub tip<\/h1>\n<p>If you stub something and it appears not to be working, check when your module, class or method is loaded or created.\u00a0 Dynamic languages can be challenging.\u00a0 (<a href=\"http:\/\/www.ruby-forum.com\/topic\/187734#new\">thanks David<\/a>)<\/p>\n<h1>References<\/h1>\n<p>For more information, see<\/p>\n<ul>\n<li><a href=\"http:\/\/www.pragprog.com\/titles\/achbd\/the-rspec-book\">The RSpec Book<\/a><\/li>\n<li><a href=\"http:\/\/rspec.rubyforge.org\/rspec\/1.2.6\/\">rspec doc<\/a><\/li>\n<li><a href=\"http:\/\/rspec.rubyforge.org\/rspec-rails\/1.2.6\/\">rspec-rails doc<\/a><\/li>\n<li><a href=\"http:\/\/wiki.railsbridge.org\/projects\/railsbridge\/wiki\/CodeReviewStudents\">Zach&#8217;s code review recap<\/a><\/li>\n<\/ul>\n<p>These lessons learned while developing RSpec examples for a bug fix in <a href=\"http:\/\/github.com\/ultrasaurus\/openlaszlo_plugin\/tree\/master\">openlaszlo_plugin<\/a> with help from <a href=\"http:\/\/simplechatter.com\/\">Zach Moazeni<\/a>, <a href=\"http:\/\/railsbridge.org\/\">RailsBridge<\/a> mentor, and <a href=\"http:\/\/blog.davidchelimsky.net\/\">David Chelmsky<\/a>, on the <a href=\"http:\/\/www.ruby-forum.com\/forum\/32\">RSpec forum<\/a>.<\/p>\n","protected":false},"excerpt":{"rendered":"<p>RSpec for View Helpers To test a view helper, you need to test the plugin in the context of a rails app To verify that you can put the following code into your spec_helper.rb (or just use rspec-plugin-generator by Pat Maddox which will generate this code for you) begin require File.dirname(__FILE__) + &#8216;\/..\/..\/..\/..\/spec\/spec_helper&#8217; rescue LoadError&hellip; <a href=\"https:\/\/www.ultrasaurus.com\/2009\/05\/rails-plugin-view-helpers-and-rspec\/\">Continue reading <span class=\"meta-nav\">&rarr;<\/span><\/a><\/p>\n","protected":false},"author":84,"featured_media":0,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[2],"tags":[],"_links":{"self":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/1368"}],"collection":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/users\/84"}],"replies":[{"embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/comments?post=1368"}],"version-history":[{"count":0,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/posts\/1368\/revisions"}],"wp:attachment":[{"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/media?parent=1368"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/categories?post=1368"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/www.ultrasaurus.com\/wp-json\/wp\/v2\/tags?post=1368"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}
<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: kent beck on finding the itchy spot	</title>
	<atom:link href="https://www.ultrasaurus.com/2010/04/kent-beck-on-finding-the-itchy-spot/feed/" rel="self" type="application/rss+xml" />
	<link>https://www.ultrasaurus.com/2010/04/kent-beck-on-finding-the-itchy-spot/</link>
	<description>Sarah Allen&#039;s reflections on internet software and other topics</description>
	<lastBuildDate>Tue, 27 Apr 2010 11:48:17 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.1</generator>
	<item>
		<title>
		By: April 27, 2010, Now Writing About Cucumbers &#171; Rails Test Prescriptions Blog		</title>
		<link>https://www.ultrasaurus.com/2010/04/kent-beck-on-finding-the-itchy-spot/#comment-683</link>

		<dc:creator><![CDATA[April 27, 2010, Now Writing About Cucumbers &#171; Rails Test Prescriptions Blog]]></dc:creator>
		<pubDate>Tue, 27 Apr 2010 11:48:17 +0000</pubDate>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=2582#comment-683</guid>

					<description><![CDATA[[...] Beck would like to analogize goat farming and software development. I&#8217;ve heard [...] ]]></description>
			<content:encoded><![CDATA[<p>[&#8230;] Beck would like to analogize goat farming and software development. I&#8217;ve heard [&#8230;] </p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: SKMurphy &#187; Startup Lessons Learned Conference Coverage Roundup		</title>
		<link>https://www.ultrasaurus.com/2010/04/kent-beck-on-finding-the-itchy-spot/#comment-682</link>

		<dc:creator><![CDATA[SKMurphy &#187; Startup Lessons Learned Conference Coverage Roundup]]></dc:creator>
		<pubDate>Mon, 26 Apr 2010 06:43:06 +0000</pubDate>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=2582#comment-682</guid>

					<description><![CDATA[[...] Sarah Allen &#8220;Beyond Agile Development&#8221; and &#8220;Finding the Itchy Spot&#8220; [...] ]]></description>
			<content:encoded><![CDATA[<p>[&#8230;] Sarah Allen &#8220;Beyond Agile Development&#8221; and &#8220;Finding the Itchy Spot&#8220; [&#8230;] </p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: John Sundman		</title>
		<link>https://www.ultrasaurus.com/2010/04/kent-beck-on-finding-the-itchy-spot/#comment-681</link>

		<dc:creator><![CDATA[John Sundman]]></dc:creator>
		<pubDate>Sun, 25 Apr 2010 13:27:29 +0000</pubDate>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=2582#comment-681</guid>

					<description><![CDATA[I&#039;m thinking about this post not in the context of creating code, but in the context of the overhaul of my website (a redesign &#038; port to a new blogging platform; recruiting new writers), nearly complete-- a process which took months. 

I write &#038; sell novels that generally appeal to hardcore geeks &#038; hackers. I&#039;m trying to sell more of them. My website is my main vehicle for making these books known to the world. But right now, the book-promotion parts of the site are not even implemented yet. There was too much other work to do first.

But let&#039;s assume that I&#039;ll have some kind landing pages and shopping cart done soon, within the next few days.

What then? What itch am I trying to scratch? What problem am I trying to solve for Wetmachine&#039;s readers? And what connection is there, if any, between the value readers get from interacting with my site and the value they would get from buying one of my books?

And now that I have a nifty site with 8 quality writers and a big backlog of articles, many of them still relevant, and more new ones coming virtually every day, what other opportunities lie before me, beyond just selling books?

I&#039;m thinking. . . where&#039;s the itchy spot? I dunno. I&#039;m going to keep looking for it. . .]]></description>
			<content:encoded><![CDATA[<p>I&#8217;m thinking about this post not in the context of creating code, but in the context of the overhaul of my website (a redesign &amp; port to a new blogging platform; recruiting new writers), nearly complete&#8211; a process which took months. </p>
<p>I write &amp; sell novels that generally appeal to hardcore geeks &amp; hackers. I&#8217;m trying to sell more of them. My website is my main vehicle for making these books known to the world. But right now, the book-promotion parts of the site are not even implemented yet. There was too much other work to do first.</p>
<p>But let&#8217;s assume that I&#8217;ll have some kind landing pages and shopping cart done soon, within the next few days.</p>
<p>What then? What itch am I trying to scratch? What problem am I trying to solve for Wetmachine&#8217;s readers? And what connection is there, if any, between the value readers get from interacting with my site and the value they would get from buying one of my books?</p>
<p>And now that I have a nifty site with 8 quality writers and a big backlog of articles, many of them still relevant, and more new ones coming virtually every day, what other opportunities lie before me, beyond just selling books?</p>
<p>I&#8217;m thinking. . . where&#8217;s the itchy spot? I dunno. I&#8217;m going to keep looking for it. . .</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Sarah		</title>
		<link>https://www.ultrasaurus.com/2010/04/kent-beck-on-finding-the-itchy-spot/#comment-680</link>

		<dc:creator><![CDATA[Sarah]]></dc:creator>
		<pubDate>Sun, 25 Apr 2010 04:09:04 +0000</pubDate>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=2582#comment-680</guid>

					<description><![CDATA[The point is to have a hypothesis that you are trying to prove with your code.  Anyone who does TDD without a vision of what the software should do is missing the point.  There was a lot of talk at the conference about having a big idea and how to find the right expression of it.  If a feature needs to be fast, you need to do the engineering to make it so, but I&#039;ve often seen (or been) an engineer who adds detailed options because someone might need them when something else (like performance or a different feature entirely) is actually what is needed.

The key thing is to keep asking the high level question -- *sometimes* the answer is a hack or a paper mockup or simply a phone call to a customer to understand what is really needed before creating a complete, robust, performant implementation.]]></description>
			<content:encoded><![CDATA[<p>The point is to have a hypothesis that you are trying to prove with your code.  Anyone who does TDD without a vision of what the software should do is missing the point.  There was a lot of talk at the conference about having a big idea and how to find the right expression of it.  If a feature needs to be fast, you need to do the engineering to make it so, but I&#8217;ve often seen (or been) an engineer who adds detailed options because someone might need them when something else (like performance or a different feature entirely) is actually what is needed.</p>
<p>The key thing is to keep asking the high level question &#8212; *sometimes* the answer is a hack or a paper mockup or simply a phone call to a customer to understand what is really needed before creating a complete, robust, performant implementation.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Adam Wolff		</title>
		<link>https://www.ultrasaurus.com/2010/04/kent-beck-on-finding-the-itchy-spot/#comment-679</link>

		<dc:creator><![CDATA[Adam Wolff]]></dc:creator>
		<pubDate>Sun, 25 Apr 2010 03:58:39 +0000</pubDate>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=2582#comment-679</guid>

					<description><![CDATA[Gosh, I don&#039;t know about this Sarah. This attitude is similar to the hardcore TDD stance, which I also struggle with. I guess I agree that sometimes rapid, hacky iteration is the best thing, but I think there are certain problems that are worth solving correctly, even if it takes more time.

I think TDD often produces verbose, paradoxically bug laden software, precisely because the process encourages myopia. Similarly, I think that there a lot of questions that can&#039;t really be answered until you&#039;ve developed a proper solution for them. People say they don&#039;t like the new feature, but is that because it&#039;s buggy and slow?]]></description>
			<content:encoded><![CDATA[<p>Gosh, I don&#8217;t know about this Sarah. This attitude is similar to the hardcore TDD stance, which I also struggle with. I guess I agree that sometimes rapid, hacky iteration is the best thing, but I think there are certain problems that are worth solving correctly, even if it takes more time.</p>
<p>I think TDD often produces verbose, paradoxically bug laden software, precisely because the process encourages myopia. Similarly, I think that there a lot of questions that can&#8217;t really be answered until you&#8217;ve developed a proper solution for them. People say they don&#8217;t like the new feature, but is that because it&#8217;s buggy and slow?</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>

<!DOCTYPE html>
<html class="no-js" lang="en-US">
	<head>
				<link rel="profile" href="http://gmpg.org/xfn/11" />
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		
		<title>pair programming velocity &laquo; the evolving ultrasaurus</title>
		
				<meta name='robots' content='max-image-preview:large' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="the evolving ultrasaurus &raquo; Feed" href="/feed/" />
<link rel="alternate" type="application/rss+xml" title="the evolving ultrasaurus &raquo; Comments Feed" href="/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="the evolving ultrasaurus &raquo; pair programming velocity Comments Feed" href="/2009/07/pair-programming-velocity/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.0.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.0.1\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.ultrasaurus.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.7.1"}};
			!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([55357,56424,8205,55356,57212],[55357,56424,8203,55356,57212])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='mailchimpSF_main_css-css'  href='/?mcsf_action=main_css&#038;ver=5.7.1' type='text/css' media='all' />
<!--[if IE]>
<link rel='stylesheet' id='mailchimpSF_ie_css-css'  href='/wp-content/plugins/mailchimp/css/ie.css?ver=5.7.1' type='text/css' media='all' />
<![endif]-->
<link rel='stylesheet' id='wp-block-library-css'  href='/wp-includes/css/dist/block-library/style.min.css?ver=5.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='tw-bootstrap-css'  href='/wp-content/themes/the-bootstrap/css/bootstrap.min.css?ver=2.0.3' type='text/css' media='all' />
<link rel='stylesheet' id='the-bootstrap-css'  href='/wp-content/themes/the-bootstrap/style.min.css?ver=2.0.1' type='text/css' media='all' />
<style id='the-bootstrap-inline-css' type='text/css'>
body > .container{margin-top:68px;}@media(min-width: 980px){body > .container{margin-top:58px;}}
</style>
<script type='text/javascript' src='/wp-includes/js/jquery/jquery.min.js?ver=3.5.1' id='jquery-core-js'></script>
<script type='text/javascript' src='/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>
<script type='text/javascript' src='/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.5.4' id='ga-external-tracking-js'></script>
<link rel="https://api.w.org/" href="/wp-json/" /><link rel="alternate" type="application/json" href="/wp-json/wp/v2/posts/1817" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 5.7.1" />
<link rel="canonical" href="/2009/07/pair-programming-velocity/" />
<link rel='shortlink' href='/?p=1817' />
<link rel="alternate" type="application/json+oembed" href="/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.ultrasaurus.com%2F2009%2F07%2Fpair-programming-velocity%2F" />
<link rel="alternate" type="text/xml+oembed" href="/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.ultrasaurus.com%2F2009%2F07%2Fpair-programming-velocity%2F&#038;format=xml" />
<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>	<style type="text/css">
				#branding hgroup {
			position: absolute !important;
			clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
			clip: rect(1px, 1px, 1px, 1px);
		}
			</style>
		<!--[if lt IE 9]>
		<script src="/wp-content/themes/the-bootstrap/js/html5shiv.min.js" type="text/javascript"></script>
		<script src="/wp-content/themes/the-bootstrap/js/respond.min.js" type="text/javascript"></script>
	<![endif]-->
	<!-- Google Analytics Tracking by Google Analyticator 6.5.4: http://www.videousermanuals.com/google-analyticator/ -->
<script type="text/javascript">
    var analyticsFileTypes = [''];
    var analyticsSnippet = 'enabled';
    var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
  
	_gaq.push(['_setAccount', 'UA-4313619-1']);
    _gaq.push(['_addDevId', 'i9k95']); // Google Analyticator App ID with Google
    _gaq.push(['_gat._anonymizeIp']);
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
		<style type="text/css" id="wp-custom-css">
			code {
	color: #70a
}

p {
	color: #333
}

blockquote p {
	font-size: 14px;
	font-weight: normal;
	padding-top: 6px;
	padding-bottom: 6px;
	padding-left: 10px;
	padding-right: 60px;
	line-height: 1.2;
}		</style>
			</head>
	
	<body class="post-template-default single single-post postid-1817 single-format-standard content-sidebar">
		<div class="container">
			<div id="page" class="hfeed row">
								<header id="branding" role="banner" class="span12">
										<hgroup>
						<h1 id="site-title">
							<a href="/" title="the evolving ultrasaurus" rel="home">
								<span>the evolving ultrasaurus</span>
							</a>
						</h1>
						<h2 id="site-description">Sarah Allen&#039;s reflections on internet software and other topics</h2>
					</hgroup>
					
					
					<nav id="access" role="navigation">
						<h3 class="assistive-text">Main menu</h3>
						<div class="skip-link"><a class="assistive-text" href="#content" title="Skip to primary content">Skip to primary content</a></div>
						<div class="skip-link"><a class="assistive-text" href="#secondary" title="Skip to secondary content">Skip to secondary content</a></div>
												<div class="navbar navbar-fixed-top navbar-inverse">
							<div class="navbar-inner">
								<div class="container">
									<!-- .btn-navbar is used as the toggle for collapsed navbar content -->
									<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
									</a>
																		<span class="brand">the evolving ultrasaurus</span>
																		<div class="nav-collapse">
										<div class="menu-primary-container"><ul id="menu-primary" class="nav"><li id="menu-item-4272" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4272"><a href="/about/">About</a></li>
<li id="menu-item-6605" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6605"><a href="/speaking/">Speaking</a></li>
<li id="menu-item-6366" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-6366"><a href="/code/">Code</a></li>
<li id="menu-item-4269" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4269"><a href="/archives/">Archives</a></li>
<li id="menu-item-4759" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4759"><a href="/contact/">Contact</a></li>
<li id="menu-item-4697" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4697"><a href="/ultrasaurus/">What is an ultrasaurus?</a></li>
</ul></div>	<form id="searchform" class="navbar-search pull-right" method="get" action="/">
						<label for="s" class="assistive-text hidden">Search</label>
						<input type="search" class="search-query" name="s" id="s" placeholder="Search" />
					</form>								    </div>
								</div>
							</div>
						</div>
											</nav><!-- #access -->
									</header><!-- #branding -->
<section id="primary" class="span8">
	
		<div id="content" role="main">
		<article id="post-1817" class="post-1817 post type-post status-publish format-standard hentry category-general">
		
	<header class="page-header">
		<h1 class="entry-title">pair programming velocity</h1>		<div class="entry-meta"><span class="sep">Posted on </span><a href="/2009/07/pair-programming-velocity/" title="12:44 pm" rel="bookmark"><time class="entry-date" datetime="2009-07-25T12:44:30-07:00" pubdate>July 25, 2009</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="/author/sarah/" title="View all posts by sarah" rel="author">sarah</a></span></span>		<span class="sep"> | </span>
		<span class="comments-link">
			<a href="/2009/07/pair-programming-velocity/#comments"><strong>7</strong> Replies</a>		</span>
		</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

	<div class="entry-content clearfix">
		<p>I used to pair program now and then, but only for specific challenges. When I needed to implement a new feature in an unfamiliar area of the code, I might pair with the original author.  I might collaborate on a particularly tricky algorithm or when we&#8217;re up against a tight deadline and it must absolutely be correct.  And, of course, you put a team of engineers on it, when there&#8217;s that critical bug that happening to real people in production right now.  A few months ago, I took a different approach. I started to pair program routinely.  The experience changed my perspective entirely.</p>
<h2>Background</h2>
<p>I was working on a project where I wore two hats:  product manager and engineer. In the engineering role, I had a small task to develop a Flash video client app and a Rails API that it would call.  The other job was to write down requirements and work with the business owners to come up with a well-defined scope and project plan for the next iteration of the software.  At the outset of the project, they gave me a demo.  The site looked good and seemed to work well, it was just missing a few features and the application needed to be brought up to production readiness.  After digging in a bit, I realized that the project needed more than one engineer to reach the desired launch date and ended up hiring <a href="http://www.rubyfocus.biz/">Wolfram Arnold</a> to work with me in building the Ruby on Rails web application and web services APIs.  He asked me how I felt about pair programming and proposed that we pair about 2/3 of the time.  Since I was relatively new to Rails and he was expert, plus he was new to the project and I knew the requirements inside and out, I felt this would strike a good balance.  The business owners were unsure, but I argued that the easiest bug to fix is one that you don&#8217;t write. It was a relatively short 6 week contract, so we decided to give it a try.  But first, we had to make sure that we had the right candidate for the job.</p>
<h2>The Interview</h2>
<p>I&#8217;m used to having a team of engineers at my disposal to vet a candidate, but in this case there was just me and a remote engineer to do a phone interview.  I&#8217;ve always relied on seeing a candidate write code on the whiteboard to get a feel for how they think about code.  However, I have always felt the whiteboard coding exercise to be a bit awkward, so we asked Wolf if he had any ideas about what we could do to affirm that he was the sharp engineer he seemed to be in conversation.   Wolf suggested that we just pair on a real coding problem to complete the interview process.  So we got together one afternoon and I picked a specific bug that I thought we could fix in about an hour.  I was then introduced to a common pair programming setup that was nonetheless new to me: one computer, two keyboards, two mice.  While unexpected at first, this was a very effective way to work.  I found the switching to be naturally mediated by social convention.  We discussed the problem, then dove in, taking turns, with me navigating to the right area of the code and us taking turns typing.  We ended up spending a few hours together and fixed the bug (and wrote some tests and refactored code along the way), happily confirming that Wolf was as good as he seemed on paper and that we could easily work together.</p>
<h2>Getting Started</h2>
<p>The task at hand was a fairly tricky one.  We were migrating a codebase from Rails 2.0.2, that relied heavily on the Globalize plugin for translation, to Rails 2.3 which includes built-in localization support.  Additionally the plugin had been modified and the database had quite a bit of data which needed to be migrated forward.  I immediately felt the speed of pair programming: I understood the database schema, product requirements and current feature set; Wolf could readily explain common Rails patterns (and the occasional anti-pattern) in the code and recommended good solutions.  Together we were easily twice as fast as each of us individually.  We found that there were a number of requirements that were unclear when we dug in and we spent about three weeks documenting these detailed requirements by writing tests for them.  This was a critical step since we didn&#8217;t want to lose or break functionality when upgrading the code.  My favorite time savings in this phase was that we never had to call a meeting, whenever we would need to meet, there we were.</p>
<p><img src="http://img.skitch.com/20090727-r7mwy986dnd2qm9na53yc7qbj6.jpg" /></p>
<h2>Escape Velocity</h2>
<p>When we felt we understood the detailed requirements and has a core set of the features working well with tests to prove it, we dove into the upgrade preparation which involved removing the modified Globalize plugin, a few huge database migrations and some other important details.  I had never coded anything so risky, so fast.  If anyone were to code such a change solo, it would require careful focus and iteration ensuring that every detail were taken care of.  You would naturally go slowly as your mind searches for each dependency and where you miss aspects and see test failures, you go back and fix your code and run again.  As a pair of programmers, who were now familiar with the codebase, schema, and requirements, we flew.  We each had our own checklists in our heads, as one of us typed, one kept a list on paper.  When making any change, before we even ran the tests once, the one not coding would remember dependencies, notice typos or test cases not written that needed to be handled.  The iterations were fewer.  Each of us had time to think when the other typed.  While waiting for tests to run, we discussed what else could go wrong or what we might do to double-check that it had all gone right.  We were now coding at three or four times the pace that either would have going solo.  And more importantly, we caught bugs in our brainstorming that would otherwise have been caught in a longer deploy-test-report-fix-deploy-verify cycle that is several order of magnitudes slower than when a developer notices an issue in the middle of a coding session.</p>
<p><img src="http://img.skitch.com/20090727-q9t9kd9juu2frkit1keea9983r.jpg" /></p>
<h2>Routine Speed</h2>
<p>After we got through the most challenging and risky parts of the project, we continued to pair.  Beyond my initial expectations that pairing would only accelerate the learning process, I found that even routine coding tasks and feature development were executed with breathtaking speed when we paired.  While there were logistical reasons that we occasionally worked separately, the project moved forward most efficiently when we coded together.  If anyone is starting a Ruby on Rails project, wants to adopt TDD or simply accelerate their development, I would recommend hiring <a href="http://www.rubyfocus.biz/">Wolf</a>.  When we took the site live and moved on to work on separate projects, I found that I had grown used to the routine speed of pairing and missed the camaraderie as well.  I wanted to achieve a similar acceleration on all of my projects, so I hired an intern, <a href="http://www.macboypro.com/">Lee Lundrigan</a>, to pair with me.   Lee didn&#8217;t have as much domain expertise, but he&#8217;s a very sharp engineer and does have some experience that complements mine.  It&#8217;s not as fast as when I pair with Wolf &#8212; a dozen years or so of experience makes a difference.  I&#8217;m guessing that it only doubles my speed.  I find the collaboration sharpens my attention and focus, in addition to bringing his perspective to the problem at hand.  The extra pair of eyes catch bugs before the first test run reducing debugging time.</p>
<h2>Conclusion</h2>
<p>If you haven&#8217;t tried pairing and you work in a team, just do it.  Give yourself a project for a couple of months to get a feel for it before you decide what you think.  If you work solo, consider hiring someone who is experienced with pairing and agile development to work with you to give it a try.  Take an opportunity when you are learning something new or have a big project you are taking on.  I&#8217;d be interested in hearing other people&#8217;s pairing experiences.</p>
	</div><!-- .entry-content -->

	<footer class="entry-footer">
		<span class="cat-links block">Posted in <a href="/category/general/" rel="category tag">general</a>.</span>	</footer><!-- .entry-footer -->
	
	</article><!-- #post-1817 -->
		<div id="comments">
			<h2 id="comments-title">
				7 thoughts on &ldquo;<span>pair programming velocity</span>&rdquo;			</h2>
		
					
			<ol class="commentlist unstyled">
						
		<li  id="li-comment-571" class="comment even thread-even depth-1">
			<article id="comment-571" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/5a60d6c66b7737ba71cecc4c46fc6fd5?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/5a60d6c66b7737ba71cecc4c46fc6fd5?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='http://www.rubyfocus.biz' rel='external nofollow ugc' class='url'>Wolfram Arnold</a></span> <span class="says">said</span> on <a href="/2009/07/pair-programming-velocity/#comment-571"><time pubdate datetime="2009-07-25T19:13:27-07:00">July 25, 2009 at 7:13 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Wow, Sarah!  Thanks for the compliments.  The pleasure was all mine.  I&#8217;ve found pairing most fun and effective with another curious sharp mind on my side.  I&#8217;ve been lucky in that regard, in several projects, including my first consulting experience with Scott Johnson at EduFire.com and now most recently with you for Mightyverse.com. What matters is the willingness to make a better product, to improve the quality of the code, the pragmatism of a business person and the sense of aesthetics of the artist.  And one to keep me in check on all those aspects.</p>
<p>In many ways I&#8217;m just passing on what I learned from others before, like the folks at Pivotal Labs that really showed me the ropes in pair programming, Agile development, leveraging Rails to the fullest.  Some practical considerations that I find key are:</p>
<p>Equal access to the machine by either pairing partner&#8211;that includes the physical seating position in front of the monitor and of course dual keyboards and mice&#8211;but also things like common tools so that either partner feels more or less at home.  This might just be the time to look at IDE&#8217;s such as RubyMine and leave Emacs and vi for editing config files on remote servers.  I also like the Mac/Linux environment we&#8217;ve had.  Adapting to the Mac keyboard when coming from Linux is easy enough, but dealing with backslashes and other quirks of Windows might cut into your ROI more than switching to a Mac/Linux environment would be.</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-571 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-572" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="comment-572" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/62c5d5ead0c0c5d6a399f64f98468d83?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/62c5d5ead0c0c5d6a399f64f98468d83?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='http://sharegrove.com' rel='external nofollow ugc' class='url'>Adam Wolff</a></span> <span class="says">said</span> on <a href="/2009/07/pair-programming-velocity/#comment-572"><time pubdate datetime="2009-07-27T15:52:06-07:00">July 27, 2009 at 3:52 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Looks like fun, sarah! So you just hook up two sets of input devices, and the computer knows what to do? or you use blackbox switcher?</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-572 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-573" class="comment even thread-even depth-1">
			<article id="comment-573" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='' rel='external nofollow ugc' class='url'>Sarah</a></span> <span class="says">said</span> on <a href="/2009/07/pair-programming-velocity/#comment-573"><time pubdate datetime="2009-07-28T04:26:47-07:00">July 28, 2009 at 4:26 am</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Indeed.  We just hooked everything up via USB and it all just works!</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-573 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-574" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="comment-574" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/b264dc82b5b1b714d6e93e84c2a3e5b5?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/b264dc82b5b1b714d6e93e84c2a3e5b5?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='http://www.coreygrusden.com' rel='external nofollow ugc' class='url'>Corey Grusden</a></span> <span class="says">said</span> on <a href="/2009/07/pair-programming-velocity/#comment-574"><time pubdate datetime="2009-08-14T10:32:46-07:00">August 14, 2009 at 10:32 am</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Awesome post Sarah! At Hashrocket we pair 100% of the time! Our setup is 2 developers are hooked in via USB to a 30&#8243; display. Makes it easy to see! </p>
<p>I&#8217;m interested to hear what Wolf was using when he came in and if you had to adapt to learn a new tool as well? A slight speed bump when pairing is when developers have character maps (dvorak vs. qwerty) or might use different tools in their local user&#8217;s profile..</p>
<p>Once Tim Pope (maker of Rails.vim) joined us, we started migrating towards Vi since he wanted to use Vi. Pairing has helped all of us become MUCH better at it. So there are some definite fringe benefits to pairing other than bouncing ideas off each other, cranking through features, or writing great code.</p>
<p>Also, check out some of the stuff Corey Haines has been doing.  He&#8217;s been traveling A LOT to pair with a lot of people and documenting the most of it!</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-574 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-575" class="comment even thread-even depth-1">
			<article id="comment-575" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='' rel='external nofollow ugc' class='url'>Sarah</a></span> <span class="says">said</span> on <a href="/2009/07/pair-programming-velocity/#comment-575"><time pubdate datetime="2009-08-14T18:11:52-07:00">August 14, 2009 at 6:11 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Before we started pairing, Wolf was using Aptana and I was using Vim.  Wolf was not eager to sharpen his vi skills, and I was interested in learning about interative debugging techniques offered by an IDE.  We had both heard of RubyMine which was in beta at the time and decided to try it out together.  RubyMine worked well for us, and we learned the IDE together.  </p>
<p>We also worked on two operating systems with him on Linux and me on the Mac.  This was awkward at times, but most of the tools (RubyMine and the command line) were identical.  I did end up buying a spare Mac keyboard which helped since the keys are in different places.</p>
<p>By the way, Wolf will be visiting Hashrocket the week after next and you can ask him about it yourself!  </p>
<p>Thanks for stopping by and continuing the conversation.  </p>
<p>Sarah</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-575 .comment -->
			
	</li><!-- #comment-## -->
	
		<li id="li-comment-576" class="pingback odd alt thread-odd thread-alt depth-1">
			<p class="row">
				<strong class="ping-label span1">Pingback:</strong>
				<span class="span7"><a href='/sarahblog/2009/08/test-driven-teaching/' rel='external nofollow ugc' class='url'>test-driven teaching | the evolving ultrasaurus</a></span>
			</p>
	
	</li><!-- #comment-## -->
		
		<li  id="li-comment-577" class="comment even thread-even depth-1">
			<article id="comment-577" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/500466438a19184c54107076786686a6?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/500466438a19184c54107076786686a6?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn">Rob Levin</span> <span class="says">said</span> on <a href="/2009/07/pair-programming-velocity/#comment-577"><time pubdate datetime="2009-09-28T13:31:57-07:00">September 28, 2009 at 1:31 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p> OMG you lucky bastard J/K; I use rails.vim and have had to figure it out on my own and I&#8217;m probably not nearly utilizing it as I could. I ended up using more traditional command line to do some of the stuff that RGenerate, RServer, etc., do but would love to hear Tim Pope speak about using his awesome plugin. If you guys ever have something with him giving a presentation I would be &#8220;so there&#8221;. I also use NERDTree and some other choice plugins to do RoR. I&#8217;d also be curious to hear how has your Vim adoption come along at your shop?</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-577 .comment -->
			
	</li><!-- #comment-## -->
			</ol><!-- .commentlist .unstyled -->
		
					
		</div><!-- #comments -->
		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title"><legend>Leave a reply</legend> <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2009/07/pair-programming-velocity/#respond" style="display:none;">Cancel reply</a></small></h3><form action="/wp-comments-post.php" method="post" id="commentform" class="comment-form"><div class="form-horizontal"><div class="comment-form-comment control-group"><label class="control-label" for="comment">Comment</label><div class="controls"><textarea autocomplete="new-password"  class="span7" id="b72b1d6034"  name="b72b1d6034"   rows="8" aria-required="true"></textarea><textarea id="comment" aria-hidden="true" name="comment" autocomplete="new-password" style="padding:0 !important;clip:rect(1px, 1px, 1px, 1px) !important;position:absolute !important;white-space:nowrap !important;height:1px !important;width:1px !important;overflow:hidden !important;" tabindex="-1"></textarea><script data-noptimize type="text/javascript">document.getElementById("comment").setAttribute( "id", "a578a6d264090acae906ec5da3ebff2d" );document.getElementById("b72b1d6034").setAttribute( "id", "comment" );</script></div></div><div class="form-allowed-tags control-group"><label class="control-label">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes: </label><div class="controls"><pre>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;s&gt; &lt;strike&gt; &lt;strong&gt; </pre></div></div>
									 <div class="form-actions"><div class="comment-form-author control-group">
				<label for="author" class="control-label">Name</label>
				<div class="controls">
					<input id="author" name="author" type="text" value="" size="30" aria-required='true' />
					<p class="help-inline"><span class="required">required</span></p>
				</div>
			</div>
<div class="comment-form-email control-group">
				<label for="email" class="control-label">Email</label>
				<div class="controls">
					<input id="email" name="email" type="email" value="" size="30" aria-required='true' />
					<p class="help-inline"><span class="required">required</span>, will not be published</p>
				</div>
			</div>
<div class="comment-form-url control-group">
				<label for="url" class="control-label">Website</label>
				<div class="controls">
					<input id="url" name="url" type="url" value="" size="30" />
				</div>
			</div>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='1817' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p></div></div></form>	</div><!-- #respond -->
			
		<nav id="nav-single" class="pager">
			<h3 class="assistive-text">Post navigation</h3>
			<span class="next"><a href="/2009/07/planning-xp/" rel="next">Next Post <span class="meta-nav">&rarr;</span></a></span>
			<span class="previous"><a href="/2009/07/streamlined-geek-talk/" rel="prev"><span class="meta-nav">&larr;</span> Previous Post</a></span>
		</nav><!-- #nav-single -->
		
			</div><!-- #content -->
	</section><!-- #primary -->

<section id="secondary" class="widget-area span4" role="complementary">
	<aside id="recent-comments-2" class="widget well widget_recent_comments"><h2 class="widget-title">Recent Comments</h2><ul id="recentcomments"><li class="recentcomments"><span class="comment-author-link"><a href='https://da.biomarmicrobialtechnologies.com/' rel='external nofollow ugc' class='url'>Silje Randrup</a></span> on <a href="/2003/08/the-history-of-the-letter-c/#comment-22370">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link"><a href='http://x--x.us' rel='external nofollow ugc' class='url'>Paula</a></span> on <a href="/2003/08/the-history-of-the-letter-c/#comment-19549">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link"><a href='http://x--x.us' rel='external nofollow ugc' class='url'>Michelle</a></span> on <a href="/2003/08/the-history-of-the-letter-c/#comment-19399">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link">Craig</span> on <a href="/2019/10/http-3-starter-notes-rust-quiche/#comment-18963">http/3 starter notes, rust quiche</a></li><li class="recentcomments"><span class="comment-author-link">Kornel</span> on <a href="/2019/10/rust-whats-a-tuple-variant/#comment-18539">[rust] what&#8217;s a tuple variant?</a></li><li class="recentcomments"><span class="comment-author-link"><a href='https://apromixately.github.io' rel='external nofollow ugc' class='url'>Simon</a></span> on <a href="/2019/06/essential-rust-tools/#comment-13007">essential rust tools</a></li><li class="recentcomments"><span class="comment-author-link"><a href='https://balsamiq.com/company/' rel='external nofollow ugc' class='url'>balsamiqVal</a></span> on <a href="/2018/10/the-path-is-made-by-walking/#comment-9108">the path is made by walking</a></li><li class="recentcomments"><span class="comment-author-link">Jennifer</span> on <a href="/2018/07/optimize-for-results-not-optics/#comment-8193">optimize for results, not optics</a></li><li class="recentcomments"><span class="comment-author-link">Bernardo Gomes</span> on <a href="/2016/06/sailsjs-testing-patterns-trunctate-database/#comment-8058">sailsjs testing: how to truncate the database</a></li><li class="recentcomments"><span class="comment-author-link">Bernardo Gomes</span> on <a href="/2016/06/sailsjs-testing-patterns-trunctate-database/#comment-8057">sailsjs testing: how to truncate the database</a></li></ul></aside>
		<aside id="recent-posts-2" class="widget well widget_recent_entries">
		<h2 class="widget-title">Recent Posts</h2>
		<ul>
											<li>
					<a href="/2020/07/hope-is-not-a-strategy/">hope is not a strategy</a>
									</li>
											<li>
					<a href="/2020/01/duck-typing-in-rust-trait-vs-type/">duck typing in rust: trait vs type</a>
									</li>
											<li>
					<a href="/2020/01/writing-c-library-in-rust/">writing c library in rust</a>
									</li>
											<li>
					<a href="/2020/01/rust-on-heroku-with-hyper-http/">rust on heroku with hyper http</a>
									</li>
											<li>
					<a href="/2020/01/rust-on-heroku-with-async-await-and-tokio/">rust on heroku with async/await and tokio</a>
									</li>
											<li>
					<a href="/2019/12/patterns-of-actions-are-a-making/">patterns of actions are a making</a>
									</li>
											<li>
					<a href="/2019/12/memory-safety-necessary-not-sufficient/">memory safety: necessary, not sufficient</a>
									</li>
											<li>
					<a href="/2019/12/brief-history-of-rtmp-future-thoughts/">brief history of rtmp + future thoughts</a>
									</li>
											<li>
					<a href="/2019/12/rust-2020/">rust 2020: fulfill the promise</a>
									</li>
											<li>
					<a href="/2019/11/nut-loaf-with-red-pepper-sauce/">nut loaf with red pepper sauce</a>
									</li>
											<li>
					<a href="/2019/10/http-3-starter-notes-rust-quiche/">http/3 starter notes, rust quiche</a>
									</li>
											<li>
					<a href="/2019/10/rust-whats-a-tuple-variant/">[rust] what&#8217;s a tuple variant?</a>
									</li>
											<li>
					<a href="/2019/08/graph-in-rust-using-petgraph/">graph in rust using petgraph</a>
									</li>
											<li>
					<a href="/2019/06/debugging-openssl-shared-libary/">debugging openssl shared libary</a>
									</li>
											<li>
					<a href="/2019/06/digital-identity-how-to-verify-trust/">digital identity: how to verify trust?</a>
									</li>
											<li>
					<a href="/2019/06/essential-rust-tools/">essential rust tools</a>
									</li>
											<li>
					<a href="/2019/05/learning-scala-with-graphics/">learning scala with graphics</a>
									</li>
											<li>
					<a href="/2019/04/when-reality-is-broken-change-the-rules/">when reality is broken, change the rules</a>
									</li>
											<li>
					<a href="/2019/04/subverting-saurons-business-model/">subverting Sauron&#8217;s business model</a>
									</li>
											<li>
					<a href="/2019/02/firebase-auth-migration-from-rails-and-devise/">firebase auth migration from rails/devise</a>
									</li>
					</ul>

		</aside></section><!-- #secondary .widget-area -->
				<footer id="colophon" role="contentinfo" class="span12">
										<div id="page-footer" class="well clearfix">
						<span class="credits alignleft">&copy; 2021 <a href="/">the evolving ultrasaurus</a>, all rights reserved.</span>						<div id="site-generator">
							<a	href="http://wordpress.org/"
								title="Semantic Personal Publishing Platform"
								target="_blank"
								rel="generator">Proudly powered by WordPress</a>
						</div>
					</div><!-- #page-footer .well .clearfix -->
									</footer><!-- #colophon -->
							</div><!-- #page -->
		</div><!-- .container -->
	<!-- 48 queries. 0.351 seconds. -->
	<script type='text/javascript' src='/wp-content/themes/the-bootstrap/js/bootstrap.min.js?ver=2.0.3' id='tw-bootstrap-js'></script>
<script type='text/javascript' src='/wp-content/themes/the-bootstrap/js/the-bootstrap.min.js?ver=2.0.1' id='the-bootstrap-js'></script>
<script type='text/javascript' src='/wp-includes/js/wp-embed.min.js?ver=5.7.1' id='wp-embed-js'></script>
	</body>
</html>

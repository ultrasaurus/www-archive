<!DOCTYPE html>
<html class="no-js" lang="en-US">
	<head>
				<link rel="profile" href="http://gmpg.org/xfn/11" />
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		
		<title>July &laquo; 2009 &laquo; the evolving ultrasaurus</title>
		
				<meta name='robots' content='max-image-preview:large' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="the evolving ultrasaurus &raquo; Feed" href="/feed/" />
<link rel="alternate" type="application/rss+xml" title="the evolving ultrasaurus &raquo; Comments Feed" href="/comments/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.0.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.0.1\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.ultrasaurus.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.7.1"}};
			!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([55357,56424,8205,55356,57212],[55357,56424,8203,55356,57212])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='mailchimpSF_main_css-css'  href='/?mcsf_action=main_css&#038;ver=5.7.1' type='text/css' media='all' />
<!--[if IE]>
<link rel='stylesheet' id='mailchimpSF_ie_css-css'  href='/wp-content/plugins/mailchimp/css/ie.css?ver=5.7.1' type='text/css' media='all' />
<![endif]-->
<link rel='stylesheet' id='wp-block-library-css'  href='/wp-includes/css/dist/block-library/style.min.css?ver=5.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='tw-bootstrap-css'  href='/wp-content/themes/the-bootstrap/css/bootstrap.min.css?ver=2.0.3' type='text/css' media='all' />
<link rel='stylesheet' id='the-bootstrap-css'  href='/wp-content/themes/the-bootstrap/style.min.css?ver=2.0.1' type='text/css' media='all' />
<style id='the-bootstrap-inline-css' type='text/css'>
body > .container{margin-top:68px;}@media(min-width: 980px){body > .container{margin-top:58px;}}
</style>
<script type='text/javascript' src='/wp-includes/js/jquery/jquery.min.js?ver=3.5.1' id='jquery-core-js'></script>
<script type='text/javascript' src='/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>
<script type='text/javascript' src='/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.5.4' id='ga-external-tracking-js'></script>
<link rel="https://api.w.org/" href="/wp-json/" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 5.7.1" />
<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>	<style type="text/css">
				#branding hgroup {
			position: absolute !important;
			clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
			clip: rect(1px, 1px, 1px, 1px);
		}
			</style>
		<!--[if lt IE 9]>
		<script src="/wp-content/themes/the-bootstrap/js/html5shiv.min.js" type="text/javascript"></script>
		<script src="/wp-content/themes/the-bootstrap/js/respond.min.js" type="text/javascript"></script>
	<![endif]-->
	<!-- Google Analytics Tracking by Google Analyticator 6.5.4: http://www.videousermanuals.com/google-analyticator/ -->
<script type="text/javascript">
    var analyticsFileTypes = [''];
    var analyticsSnippet = 'enabled';
    var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
  
	_gaq.push(['_setAccount', 'UA-4313619-1']);
    _gaq.push(['_addDevId', 'i9k95']); // Google Analyticator App ID with Google
    _gaq.push(['_gat._anonymizeIp']);
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
		<style type="text/css" id="wp-custom-css">
			code {
	color: #70a
}

p {
	color: #333
}

blockquote p {
	font-size: 14px;
	font-weight: normal;
	padding-top: 6px;
	padding-bottom: 6px;
	padding-left: 10px;
	padding-right: 60px;
	line-height: 1.2;
}		</style>
			</head>
	
	<body class="archive date content-sidebar">
		<div class="container">
			<div id="page" class="hfeed row">
								<header id="branding" role="banner" class="span12">
										<hgroup>
						<h1 id="site-title">
							<a href="/" title="the evolving ultrasaurus" rel="home">
								<span>the evolving ultrasaurus</span>
							</a>
						</h1>
						<h2 id="site-description">Sarah Allen&#039;s reflections on internet software and other topics</h2>
					</hgroup>
					
					
					<nav id="access" role="navigation">
						<h3 class="assistive-text">Main menu</h3>
						<div class="skip-link"><a class="assistive-text" href="#content" title="Skip to primary content">Skip to primary content</a></div>
						<div class="skip-link"><a class="assistive-text" href="#secondary" title="Skip to secondary content">Skip to secondary content</a></div>
												<div class="navbar navbar-fixed-top navbar-inverse">
							<div class="navbar-inner">
								<div class="container">
									<!-- .btn-navbar is used as the toggle for collapsed navbar content -->
									<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
									</a>
																		<span class="brand">the evolving ultrasaurus</span>
																		<div class="nav-collapse">
										<div class="menu-primary-container"><ul id="menu-primary" class="nav"><li id="menu-item-4272" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4272"><a href="/about/">About</a></li>
<li id="menu-item-6605" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6605"><a href="/speaking/">Speaking</a></li>
<li id="menu-item-6366" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-6366"><a href="/code/">Code</a></li>
<li id="menu-item-4269" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4269"><a href="/archives/">Archives</a></li>
<li id="menu-item-4759" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4759"><a href="/contact/">Contact</a></li>
<li id="menu-item-4697" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4697"><a href="/ultrasaurus/">What is an ultrasaurus?</a></li>
</ul></div>	<form id="searchform" class="navbar-search pull-right" method="get" action="/">
						<label for="s" class="assistive-text hidden">Search</label>
						<input type="search" class="search-query" name="s" id="s" placeholder="Search" />
					</form>								    </div>
								</div>
							</div>
						</div>
											</nav><!-- #access -->
									</header><!-- #branding -->
<section id="primary" class="span8">

		<div id="content" role="main">
		
			<header class="page-header">
				<h1 class="page-title">
					Monthly Archives: <span>July 2009</span>				</h1>
			</header><!-- .page-header -->

			<article id="post-1862" class="post-1862 post type-post status-publish format-standard hentry category-general">
		
	<header class="page-header">
	<h1 class="entry-title"><a href="/2009/07/planning-xp/" title="Permalink to planning xp" rel="bookmark">planning xp</a></h1>		<div class="entry-meta">
			<span class="sep">Posted on </span><a href="/2009/07/planning-xp/" title="2:02 pm" rel="bookmark"><time class="entry-date" datetime="2009-07-28T14:02:37-07:00" pubdate>July 28, 2009</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="/author/sarah/" title="View all posts by sarah" rel="author">sarah</a></span></span>		<span class="sep"> | </span>
		<span class="comments-link">
			<a href="/2009/07/planning-xp/#comments"><strong>2</strong> Replies</a>		</span>
				</div><!-- .entry-meta -->
			</header><!-- .entry-header -->

		<div class="entry-content clearfix">
		<p>I enjoyed reading <a href="http://www.amazon.com/gp/product/0201710919?ie=UTF8&amp;tag=ultrasaurus-20&amp;linkCode=as2&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0201710919">Planning Extreme Programming</a><img loading="lazy" style="border:none !important;margin:0px !important" src="http://www.assoc-amazon.com/e/ir?t=ultrasaurus-20&amp;l=as2&amp;o=1&amp;a=0201710919" border="0" alt="" width="1" height="1" /> by Kent Beck and Martin Fowler. I found the book to be an easy read and finished it in just a few days.  Beck and Fowler are generous in their on-line writings and you can find a lot of information about agile process in various articles; however, I found it to be very useful gathered together in a narrative that clearly spelled out basic principles and best practices.  One point that they made toward the end of the book was that you can borrow any of the practices individually, but that XP works best when the different practices are combined in a process that reinforces itself.  They weren&#8217;t speaking of development practices, like pair programming, but planning processes, such as:</p>
<ul>
<li> A clearly identified product owner who communicates directly and regularly with the development team</li>
<li> Iterations, where the date never slips (only the scope if needed)</li>
<li>Planning with <a href="http://martinfowler.com/bliki/YesterdaysWeather.html">yesterday&#8217;s weather</a> technique: you only promise to deliver as much as you did in the last iteration</li>
<li> The product owner writes stories (e.g. short sentences on index cards)</li>
<li> The people who will write the code make the estimates</li>
<li>The product owner meets with the dev team at the beginning of each iteration and communicates the stories, answers questions, clarifies details</li>
<li>The development team breaks stories into tasks (detailed estimates are then given to the tasks without reference to previous estimates)</li>
<li>If you aren&#8217;t going to get everything done in the time available, then you reduce scope by talking to the product owner and letting him or her prioritize, including breaking larger stories into smaller ones that will fit.  (This should happen rarely)</li>
</ul>
<p>They made the point early on that if you aren&#8217;t working in an environment or with a client who is willing to have a product owner regularly spend time communicating with the engineers and involved in the process, don&#8217;t bother with XP at all.  I admired this strong stance, and agree that the whole thing falls apart without an individual willing to make business decisions and spend some time refining requirements and prioritizing.</p>
<p>I&#8217;ve been practicing many agile processes since before the terms XP or agile were coined; however, I appreciated the focused perspective and am planning to try the process as described (which is not very far from my typical process).   I do have a few questions not addressed by the book:</p>
<ul>
<li>Is there a way to use &#8220;yesterday&#8217;s weather&#8221; as a planning tool if you are working with elastic resources? (e.g. volunteers who work different number of hours per week or in a bootstrap startup environment where people are working variable hours)  if you have a more laissez-faire approach to milestones, then having simple priorities rather than well defined scope for each iteration seems to make sense to me.  Would Beck and Fowler consider this an abandonment of XP or a fair variation?</li>
<li>What are effective ways to handle the planning process when this week&#8217;s stories have unexpected complexities? (e.g. the product owner describes the story, the developer asks some key questions which require a decision, the developer wants a decision on the requirements, but the product owner needs to understand the consequences of the decision before deciding)  My approach to this is defer the story and allocate some time during the iteration for design/brainstorming sessions on the challenging story.</li>
<li>When does the UI design happen? I have a number of answers to this one, but was surprised that I don&#8217;t hear this more frequently addressed in XP.</li>
</ul>
	</div><!-- .entry-content -->
	
	<footer class="entry-meta">
		<span class="cat-links block">Posted in <a href="/category/general/" rel="category tag">general</a>.</span>	</footer><!-- #entry-meta -->
	
	</article><!-- #post-1862 -->
<article id="post-1817" class="post-1817 post type-post status-publish format-standard hentry category-general">
		
	<header class="page-header">
	<h1 class="entry-title"><a href="/2009/07/pair-programming-velocity/" title="Permalink to pair programming velocity" rel="bookmark">pair programming velocity</a></h1>		<div class="entry-meta">
			<span class="sep">Posted on </span><a href="/2009/07/pair-programming-velocity/" title="12:44 pm" rel="bookmark"><time class="entry-date" datetime="2009-07-25T12:44:30-07:00" pubdate>July 25, 2009</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="/author/sarah/" title="View all posts by sarah" rel="author">sarah</a></span></span>		<span class="sep"> | </span>
		<span class="comments-link">
			<a href="/2009/07/pair-programming-velocity/#comments"><strong>7</strong> Replies</a>		</span>
				</div><!-- .entry-meta -->
			</header><!-- .entry-header -->

		<div class="entry-content clearfix">
		<p>I used to pair program now and then, but only for specific challenges. When I needed to implement a new feature in an unfamiliar area of the code, I might pair with the original author.  I might collaborate on a particularly tricky algorithm or when we&#8217;re up against a tight deadline and it must absolutely be correct.  And, of course, you put a team of engineers on it, when there&#8217;s that critical bug that happening to real people in production right now.  A few months ago, I took a different approach. I started to pair program routinely.  The experience changed my perspective entirely.</p>
<h2>Background</h2>
<p>I was working on a project where I wore two hats:  product manager and engineer. In the engineering role, I had a small task to develop a Flash video client app and a Rails API that it would call.  The other job was to write down requirements and work with the business owners to come up with a well-defined scope and project plan for the next iteration of the software.  At the outset of the project, they gave me a demo.  The site looked good and seemed to work well, it was just missing a few features and the application needed to be brought up to production readiness.  After digging in a bit, I realized that the project needed more than one engineer to reach the desired launch date and ended up hiring <a href="http://www.rubyfocus.biz/">Wolfram Arnold</a> to work with me in building the Ruby on Rails web application and web services APIs.  He asked me how I felt about pair programming and proposed that we pair about 2/3 of the time.  Since I was relatively new to Rails and he was expert, plus he was new to the project and I knew the requirements inside and out, I felt this would strike a good balance.  The business owners were unsure, but I argued that the easiest bug to fix is one that you don&#8217;t write. It was a relatively short 6 week contract, so we decided to give it a try.  But first, we had to make sure that we had the right candidate for the job.</p>
<h2>The Interview</h2>
<p>I&#8217;m used to having a team of engineers at my disposal to vet a candidate, but in this case there was just me and a remote engineer to do a phone interview.  I&#8217;ve always relied on seeing a candidate write code on the whiteboard to get a feel for how they think about code.  However, I have always felt the whiteboard coding exercise to be a bit awkward, so we asked Wolf if he had any ideas about what we could do to affirm that he was the sharp engineer he seemed to be in conversation.   Wolf suggested that we just pair on a real coding problem to complete the interview process.  So we got together one afternoon and I picked a specific bug that I thought we could fix in about an hour.  I was then introduced to a common pair programming setup that was nonetheless new to me: one computer, two keyboards, two mice.  While unexpected at first, this was a very effective way to work.  I found the switching to be naturally mediated by social convention.  We discussed the problem, then dove in, taking turns, with me navigating to the right area of the code and us taking turns typing.  We ended up spending a few hours together and fixed the bug (and wrote some tests and refactored code along the way), happily confirming that Wolf was as good as he seemed on paper and that we could easily work together.</p>
<h2>Getting Started</h2>
<p>The task at hand was a fairly tricky one.  We were migrating a codebase from Rails 2.0.2, that relied heavily on the Globalize plugin for translation, to Rails 2.3 which includes built-in localization support.  Additionally the plugin had been modified and the database had quite a bit of data which needed to be migrated forward.  I immediately felt the speed of pair programming: I understood the database schema, product requirements and current feature set; Wolf could readily explain common Rails patterns (and the occasional anti-pattern) in the code and recommended good solutions.  Together we were easily twice as fast as each of us individually.  We found that there were a number of requirements that were unclear when we dug in and we spent about three weeks documenting these detailed requirements by writing tests for them.  This was a critical step since we didn&#8217;t want to lose or break functionality when upgrading the code.  My favorite time savings in this phase was that we never had to call a meeting, whenever we would need to meet, there we were.</p>
<p><img src="http://img.skitch.com/20090727-r7mwy986dnd2qm9na53yc7qbj6.jpg" /></p>
<h2>Escape Velocity</h2>
<p>When we felt we understood the detailed requirements and has a core set of the features working well with tests to prove it, we dove into the upgrade preparation which involved removing the modified Globalize plugin, a few huge database migrations and some other important details.  I had never coded anything so risky, so fast.  If anyone were to code such a change solo, it would require careful focus and iteration ensuring that every detail were taken care of.  You would naturally go slowly as your mind searches for each dependency and where you miss aspects and see test failures, you go back and fix your code and run again.  As a pair of programmers, who were now familiar with the codebase, schema, and requirements, we flew.  We each had our own checklists in our heads, as one of us typed, one kept a list on paper.  When making any change, before we even ran the tests once, the one not coding would remember dependencies, notice typos or test cases not written that needed to be handled.  The iterations were fewer.  Each of us had time to think when the other typed.  While waiting for tests to run, we discussed what else could go wrong or what we might do to double-check that it had all gone right.  We were now coding at three or four times the pace that either would have going solo.  And more importantly, we caught bugs in our brainstorming that would otherwise have been caught in a longer deploy-test-report-fix-deploy-verify cycle that is several order of magnitudes slower than when a developer notices an issue in the middle of a coding session.</p>
<p><img src="http://img.skitch.com/20090727-q9t9kd9juu2frkit1keea9983r.jpg" /></p>
<h2>Routine Speed</h2>
<p>After we got through the most challenging and risky parts of the project, we continued to pair.  Beyond my initial expectations that pairing would only accelerate the learning process, I found that even routine coding tasks and feature development were executed with breathtaking speed when we paired.  While there were logistical reasons that we occasionally worked separately, the project moved forward most efficiently when we coded together.  If anyone is starting a Ruby on Rails project, wants to adopt TDD or simply accelerate their development, I would recommend hiring <a href="http://www.rubyfocus.biz/">Wolf</a>.  When we took the site live and moved on to work on separate projects, I found that I had grown used to the routine speed of pairing and missed the camaraderie as well.  I wanted to achieve a similar acceleration on all of my projects, so I hired an intern, <a href="http://www.macboypro.com/">Lee Lundrigan</a>, to pair with me.   Lee didn&#8217;t have as much domain expertise, but he&#8217;s a very sharp engineer and does have some experience that complements mine.  It&#8217;s not as fast as when I pair with Wolf &#8212; a dozen years or so of experience makes a difference.  I&#8217;m guessing that it only doubles my speed.  I find the collaboration sharpens my attention and focus, in addition to bringing his perspective to the problem at hand.  The extra pair of eyes catch bugs before the first test run reducing debugging time.</p>
<h2>Conclusion</h2>
<p>If you haven&#8217;t tried pairing and you work in a team, just do it.  Give yourself a project for a couple of months to get a feel for it before you decide what you think.  If you work solo, consider hiring someone who is experienced with pairing and agile development to work with you to give it a try.  Take an opportunity when you are learning something new or have a big project you are taking on.  I&#8217;d be interested in hearing other people&#8217;s pairing experiences.</p>
	</div><!-- .entry-content -->
	
	<footer class="entry-meta">
		<span class="cat-links block">Posted in <a href="/category/general/" rel="category tag">general</a>.</span>	</footer><!-- #entry-meta -->
	
	</article><!-- #post-1817 -->
<article id="post-1807" class="post-1807 post type-post status-publish format-standard hentry category-general">
		
	<header class="page-header">
	<h1 class="entry-title"><a href="/2009/07/streamlined-geek-talk/" title="Permalink to streamlined geek talk" rel="bookmark">streamlined geek talk</a></h1>		<div class="entry-meta">
			<span class="sep">Posted on </span><a href="/2009/07/streamlined-geek-talk/" title="5:01 am" rel="bookmark"><time class="entry-date" datetime="2009-07-16T05:01:07-07:00" pubdate>July 16, 2009</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="/author/sarah/" title="View all posts by sarah" rel="author">sarah</a></span></span>		<span class="sep"> | </span>
		<span class="comments-link">
			<a href="/2009/07/streamlined-geek-talk/#comments"><strong>3</strong> Replies</a>		</span>
				</div><!-- .entry-meta -->
			</header><!-- .entry-header -->

		<div class="entry-content clearfix">
		<p>Last night <a href="http://www.rubyfocus.biz/">Wolfram Arnold</a> and I gave a talk at the SF Ruby Meetup about a recent collaboration where we created specs, documentation and tests using cucumber to streamline workflow and communication between client and server engineers.</p>
<p>It was Wolf&#8217;s idea to start the talk with a role play of the real-life situation that we were faced with at the outset of the project.  He convinced me to do it as improv, which was a lot of fun, but for those who missed here&#8217;s the script that I had written out earlier:</p>
<blockquote><p><strong>Biz Guy</strong> (ring):  Hey Pat, this is Charlie. I&#8217;ve got an investor pitch in the morning and I just tried the app on my Nokia phone and I&#8217;m no seeing search results any more.  Can you look into it?<br />
<strong>Client Engineer</strong>: I haven&#8217;t touched the code in  months.  It must be the server code.</p>
<p><strong>Biz Guy</strong> (ring): Hi Sarah, this is Charlie.  The mobile app isn&#8217;t working on my Nokia phone and Tony says he hasn&#8217;t changed the code in months.  You said that server engineer you hired was really good, maybe he could fix it by tomorrow.<br />
<strong>Manager</strong>: hmmm&#8230; I&#8217;ll check.</p>
<p><strong>Manager</strong> (ring): Hey Wolf, this is Sarah.  Did you make any changes lately that could have affected the mobile client?<br />
<strong>Server Engineer</strong>: No&#8230; none of the APIs have changed and all of the tests pass. In fact, the mobile app demo on the website works and that uses the same APIs, so it must be a client problem.</p>
<p><strong>Manager</strong> (ring): Hey Pat, this is Sarah. Glen told me the mobile app isn&#8217;t working, but the demo on the web does work.  I understand they use the same APIs, so I&#8217;m guess the issue is in the mobile client code.<br />
<strong>Client Engineer</strong>: Actually, the mobile app uses a slightly different authentication than the app on the web<br />
<strong>Manager</strong>: Oh really, is that documented?<br />
<strong>Client Engineer</strong>: well, there is detailed documentation of the platform SDK that the mobile phone doesn&#8217;t support http header responses so the auth token needs to be sent back in the post body<br />
<strong>Manager</strong>: I see.  Unfortunately, our server engineer isn&#8217;t actually familiar with the mobile platform SDK.</p></blockquote>
<p>This is a critical problem in my experience and a very common one.  Whenever you have API documentation, it is usually incomplete, inaccurate or both, often despite the best intentions of everyone involved.  In this case, we solved the problem of documenting and testing XML APIs by writing cucumber scenarios which serve as both the documentation and tests.  By making the documentation executable with published results in a continuous integration system, we always have up to date documentation.</p>
<ul>
<li>Cucumber BDD framework: <a href="http://cukes.info/">http://cukes.info/</a> and<a href="http://wiki.github.com/aslakhellesoy/cucumber"> http://wiki.github.com/aslakhellesoy/cucumber</a> Webrat (gem)</li>
<li><a href="http://wiki.github.com/aslakhellesoy/cucumber/fixtures">Using DB fixtures in cucumber</a></li>
<li>Using XML fixtures to compare server response: <a href="http://github.com/mightyverse/xml_subset_matcher/tree/master">xmlsubsetmatcher library</a> (there&#8217;s a gem spec in the github repo, but it is not yet working as a gem)</li>
<li>Example: <a href="http://github.com/mightyverse/cucumber_xml/tree/master">http://github.com/mightyverse/cucumber_xml</a></li>
</ul>
<p>The slides from the talk are <a href="http://www.slideshare.net/sarah.allen/streamlined-geek-talk-1727826">posted on slideshare</a>:</p>
<div id="__ss_1727826" style="width: 425px;text-align: left"><a style="font:14px Helvetica,Arial,Sans-serif;margin:12px 0 3px 0;text-decoration:underline" title="Streamlined Geek Talk" href="http://www.slideshare.net/sarah.allen/streamlined-geek-talk-1727826">Streamlined Geek Talk</a></p>
<div style="font-size: 11px;font-family: tahoma,arial;height: 26px;padding-top: 2px">View more <a style="text-decoration:underline" href="http://www.slideshare.net/">presentations</a> from <a style="text-decoration:underline" href="http://www.slideshare.net/sarah.allen">Sarah Allen</a>.</div>
</div>
	</div><!-- .entry-content -->
	
	<footer class="entry-meta">
		<span class="cat-links block">Posted in <a href="/category/general/" rel="category tag">general</a>.</span>	</footer><!-- #entry-meta -->
	
	</article><!-- #post-1807 -->
<nav class="pagination pagination-centered clearfix"><ul class='page-numbers'>
	<li><span aria-current="page" class="page-numbers current">1</span></li>
	<li><a class="page-numbers" href="/2009/07/page/2/">2</a></li>
	<li><a class="page-numbers" href="/2009/07/page/3/">3</a></li>
	<li><a class="next page-numbers" href="/2009/07/page/2/">Next &raquo;</a></li>
</ul>
</nav>	</div><!-- #content -->
	</section><!-- #primary -->

<section id="secondary" class="widget-area span4" role="complementary">
	<aside id="recent-comments-2" class="widget well widget_recent_comments"><h2 class="widget-title">Recent Comments</h2><ul id="recentcomments"><li class="recentcomments"><span class="comment-author-link"><a href='https://da.biomarmicrobialtechnologies.com/' rel='external nofollow ugc' class='url'>Silje Randrup</a></span> on <a href="/2003/08/the-history-of-the-letter-c/#comment-22370">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link"><a href='http://x--x.us' rel='external nofollow ugc' class='url'>Paula</a></span> on <a href="/2003/08/the-history-of-the-letter-c/#comment-19549">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link"><a href='http://x--x.us' rel='external nofollow ugc' class='url'>Michelle</a></span> on <a href="/2003/08/the-history-of-the-letter-c/#comment-19399">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link">Craig</span> on <a href="/2019/10/http-3-starter-notes-rust-quiche/#comment-18963">http/3 starter notes, rust quiche</a></li><li class="recentcomments"><span class="comment-author-link">Kornel</span> on <a href="/2019/10/rust-whats-a-tuple-variant/#comment-18539">[rust] what&#8217;s a tuple variant?</a></li><li class="recentcomments"><span class="comment-author-link"><a href='https://apromixately.github.io' rel='external nofollow ugc' class='url'>Simon</a></span> on <a href="/2019/06/essential-rust-tools/#comment-13007">essential rust tools</a></li><li class="recentcomments"><span class="comment-author-link"><a href='https://balsamiq.com/company/' rel='external nofollow ugc' class='url'>balsamiqVal</a></span> on <a href="/2018/10/the-path-is-made-by-walking/#comment-9108">the path is made by walking</a></li><li class="recentcomments"><span class="comment-author-link">Jennifer</span> on <a href="/2018/07/optimize-for-results-not-optics/#comment-8193">optimize for results, not optics</a></li><li class="recentcomments"><span class="comment-author-link">Bernardo Gomes</span> on <a href="/2016/06/sailsjs-testing-patterns-trunctate-database/#comment-8058">sailsjs testing: how to truncate the database</a></li><li class="recentcomments"><span class="comment-author-link">Bernardo Gomes</span> on <a href="/2016/06/sailsjs-testing-patterns-trunctate-database/#comment-8057">sailsjs testing: how to truncate the database</a></li></ul></aside>
		<aside id="recent-posts-2" class="widget well widget_recent_entries">
		<h2 class="widget-title">Recent Posts</h2>
		<ul>
											<li>
					<a href="/2020/07/hope-is-not-a-strategy/">hope is not a strategy</a>
									</li>
											<li>
					<a href="/2020/01/duck-typing-in-rust-trait-vs-type/">duck typing in rust: trait vs type</a>
									</li>
											<li>
					<a href="/2020/01/writing-c-library-in-rust/">writing c library in rust</a>
									</li>
											<li>
					<a href="/2020/01/rust-on-heroku-with-hyper-http/">rust on heroku with hyper http</a>
									</li>
											<li>
					<a href="/2020/01/rust-on-heroku-with-async-await-and-tokio/">rust on heroku with async/await and tokio</a>
									</li>
											<li>
					<a href="/2019/12/patterns-of-actions-are-a-making/">patterns of actions are a making</a>
									</li>
											<li>
					<a href="/2019/12/memory-safety-necessary-not-sufficient/">memory safety: necessary, not sufficient</a>
									</li>
											<li>
					<a href="/2019/12/brief-history-of-rtmp-future-thoughts/">brief history of rtmp + future thoughts</a>
									</li>
											<li>
					<a href="/2019/12/rust-2020/">rust 2020: fulfill the promise</a>
									</li>
											<li>
					<a href="/2019/11/nut-loaf-with-red-pepper-sauce/">nut loaf with red pepper sauce</a>
									</li>
											<li>
					<a href="/2019/10/http-3-starter-notes-rust-quiche/">http/3 starter notes, rust quiche</a>
									</li>
											<li>
					<a href="/2019/10/rust-whats-a-tuple-variant/">[rust] what&#8217;s a tuple variant?</a>
									</li>
											<li>
					<a href="/2019/08/graph-in-rust-using-petgraph/">graph in rust using petgraph</a>
									</li>
											<li>
					<a href="/2019/06/debugging-openssl-shared-libary/">debugging openssl shared libary</a>
									</li>
											<li>
					<a href="/2019/06/digital-identity-how-to-verify-trust/">digital identity: how to verify trust?</a>
									</li>
											<li>
					<a href="/2019/06/essential-rust-tools/">essential rust tools</a>
									</li>
											<li>
					<a href="/2019/05/learning-scala-with-graphics/">learning scala with graphics</a>
									</li>
											<li>
					<a href="/2019/04/when-reality-is-broken-change-the-rules/">when reality is broken, change the rules</a>
									</li>
											<li>
					<a href="/2019/04/subverting-saurons-business-model/">subverting Sauron&#8217;s business model</a>
									</li>
											<li>
					<a href="/2019/02/firebase-auth-migration-from-rails-and-devise/">firebase auth migration from rails/devise</a>
									</li>
					</ul>

		</aside></section><!-- #secondary .widget-area -->
				<footer id="colophon" role="contentinfo" class="span12">
										<div id="page-footer" class="well clearfix">
						<span class="credits alignleft">&copy; 2021 <a href="/">the evolving ultrasaurus</a>, all rights reserved.</span>						<div id="site-generator">
							<a	href="http://wordpress.org/"
								title="Semantic Personal Publishing Platform"
								target="_blank"
								rel="generator">Proudly powered by WordPress</a>
						</div>
					</div><!-- #page-footer .well .clearfix -->
									</footer><!-- #colophon -->
							</div><!-- #page -->
		</div><!-- .container -->
	<!-- 42 queries. 0.348 seconds. -->
	<script type='text/javascript' src='/wp-content/themes/the-bootstrap/js/bootstrap.min.js?ver=2.0.3' id='tw-bootstrap-js'></script>
<script type='text/javascript' src='/wp-content/themes/the-bootstrap/js/the-bootstrap.min.js?ver=2.0.1' id='the-bootstrap-js'></script>
<script type='text/javascript' src='/wp-includes/js/wp-embed.min.js?ver=5.7.1' id='wp-embed-js'></script>
	</body>
</html>

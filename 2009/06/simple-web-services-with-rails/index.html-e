<!DOCTYPE html>
<html class="no-js" lang="en-US">
	<head>
				<link rel="profile" href="http://gmpg.org/xfn/11" />
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		
		<title>simple web services with rails &laquo; the evolving ultrasaurus</title>
		
				<meta name='robots' content='max-image-preview:large' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="the evolving ultrasaurus &raquo; Feed" href="/feed/" />
<link rel="alternate" type="application/rss+xml" title="the evolving ultrasaurus &raquo; Comments Feed" href="/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="the evolving ultrasaurus &raquo; simple web services with rails Comments Feed" href="/2009/06/simple-web-services-with-rails/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.0.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.0.1\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.ultrasaurus.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.7.1"}};
			!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([55357,56424,8205,55356,57212],[55357,56424,8203,55356,57212])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='mailchimpSF_main_css-css'  href='/?mcsf_action=main_css&#038;ver=5.7.1' type='text/css' media='all' />
<!--[if IE]>
<link rel='stylesheet' id='mailchimpSF_ie_css-css'  href='/wp-content/plugins/mailchimp/css/ie.css?ver=5.7.1' type='text/css' media='all' />
<![endif]-->
<link rel='stylesheet' id='wp-block-library-css'  href='/wp-includes/css/dist/block-library/style.min.css?ver=5.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='tw-bootstrap-css'  href='/wp-content/themes/the-bootstrap/css/bootstrap.min.css?ver=2.0.3' type='text/css' media='all' />
<link rel='stylesheet' id='the-bootstrap-css'  href='/wp-content/themes/the-bootstrap/style.min.css?ver=2.0.1' type='text/css' media='all' />
<style id='the-bootstrap-inline-css' type='text/css'>
body > .container{margin-top:68px;}@media(min-width: 980px){body > .container{margin-top:58px;}}
</style>
<script type='text/javascript' src='/wp-includes/js/jquery/jquery.min.js?ver=3.5.1' id='jquery-core-js'></script>
<script type='text/javascript' src='/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>
<script type='text/javascript' src='/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.5.4' id='ga-external-tracking-js'></script>
<link rel="https://api.w.org/" href="/wp-json/" /><link rel="alternate" type="application/json" href="/wp-json/wp/v2/posts/1533" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 5.7.1" />
<link rel="canonical" href="/2009/06/simple-web-services-with-rails/" />
<link rel='shortlink' href='/?p=1533' />
<link rel="alternate" type="application/json+oembed" href="/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.ultrasaurus.com%2F2009%2F06%2Fsimple-web-services-with-rails%2F" />
<link rel="alternate" type="text/xml+oembed" href="/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.ultrasaurus.com%2F2009%2F06%2Fsimple-web-services-with-rails%2F&#038;format=xml" />
<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>	<style type="text/css">
				#branding hgroup {
			position: absolute !important;
			clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
			clip: rect(1px, 1px, 1px, 1px);
		}
			</style>
		<!--[if lt IE 9]>
		<script src="/wp-content/themes/the-bootstrap/js/html5shiv.min.js" type="text/javascript"></script>
		<script src="/wp-content/themes/the-bootstrap/js/respond.min.js" type="text/javascript"></script>
	<![endif]-->
	<!-- Google Analytics Tracking by Google Analyticator 6.5.4: http://www.videousermanuals.com/google-analyticator/ -->
<script type="text/javascript">
    var analyticsFileTypes = [''];
    var analyticsSnippet = 'enabled';
    var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
  
	_gaq.push(['_setAccount', 'UA-4313619-1']);
    _gaq.push(['_addDevId', 'i9k95']); // Google Analyticator App ID with Google
    _gaq.push(['_gat._anonymizeIp']);
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
		<style type="text/css" id="wp-custom-css">
			code {
	color: #70a
}

p {
	color: #333
}

blockquote p {
	font-size: 14px;
	font-weight: normal;
	padding-top: 6px;
	padding-bottom: 6px;
	padding-left: 10px;
	padding-right: 60px;
	line-height: 1.2;
}		</style>
			</head>
	
	<body class="post-template-default single single-post postid-1533 single-format-standard content-sidebar">
		<div class="container">
			<div id="page" class="hfeed row">
								<header id="branding" role="banner" class="span12">
										<hgroup>
						<h1 id="site-title">
							<a href="/" title="the evolving ultrasaurus" rel="home">
								<span>the evolving ultrasaurus</span>
							</a>
						</h1>
						<h2 id="site-description">Sarah Allen&#039;s reflections on internet software and other topics</h2>
					</hgroup>
					
					
					<nav id="access" role="navigation">
						<h3 class="assistive-text">Main menu</h3>
						<div class="skip-link"><a class="assistive-text" href="#content" title="Skip to primary content">Skip to primary content</a></div>
						<div class="skip-link"><a class="assistive-text" href="#secondary" title="Skip to secondary content">Skip to secondary content</a></div>
												<div class="navbar navbar-fixed-top navbar-inverse">
							<div class="navbar-inner">
								<div class="container">
									<!-- .btn-navbar is used as the toggle for collapsed navbar content -->
									<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
									</a>
																		<span class="brand">the evolving ultrasaurus</span>
																		<div class="nav-collapse">
										<div class="menu-primary-container"><ul id="menu-primary" class="nav"><li id="menu-item-4272" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4272"><a href="/about/">About</a></li>
<li id="menu-item-6605" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6605"><a href="/speaking/">Speaking</a></li>
<li id="menu-item-6366" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-6366"><a href="/code/">Code</a></li>
<li id="menu-item-4269" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4269"><a href="/archives/">Archives</a></li>
<li id="menu-item-4759" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4759"><a href="/contact/">Contact</a></li>
<li id="menu-item-4697" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4697"><a href="/ultrasaurus/">What is an ultrasaurus?</a></li>
</ul></div>	<form id="searchform" class="navbar-search pull-right" method="get" action="/">
						<label for="s" class="assistive-text hidden">Search</label>
						<input type="search" class="search-query" name="s" id="s" placeholder="Search" />
					</form>								    </div>
								</div>
							</div>
						</div>
											</nav><!-- #access -->
									</header><!-- #branding -->
<section id="primary" class="span8">
	
		<div id="content" role="main">
		<article id="post-1533" class="post-1533 post type-post status-publish format-standard hentry category-code">
		
	<header class="page-header">
		<h1 class="entry-title">simple web services with rails</h1>		<div class="entry-meta"><span class="sep">Posted on </span><a href="/2009/06/simple-web-services-with-rails/" title="10:05 am" rel="bookmark"><time class="entry-date" datetime="2009-06-21T10:05:23-07:00" pubdate>June 21, 2009</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="/author/sarah/" title="View all posts by sarah" rel="author">sarah</a></span></span>		<span class="sep"> | </span>
		<span class="comments-link">
			<a href="/2009/06/simple-web-services-with-rails/#comments"><strong>5</strong> Replies</a>		</span>
		</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

	<div class="entry-content clearfix">
		<p>Rails enables web services by default, which is pretty awesome, and I&#8217;ve been relying on that for a while.  It is pretty nifty how Rails will magically parse XML post parameters, create an in-memory object and then save that object to the database without your having to write one line of code.  However, when the magic fails it can be pretty hard to debug.  I found it useful to run basic tests on the command line using curl (hearing the voice of <a href="http://simplechatter.com/">Zach Moazeni</a> in my head saying: &#8220;test your assumptions.&#8221;)</p>
<p><p>Below is a writeup of the set of curl commands and sample output for testing the default Rails XML REST APIs.  This can serve as a cheat sheet for the experienced or an introduction for folks new to rails who want a basic understanding of the default webservice APIs. </p>
<p>Create an app, by typing the following commands into your terminal:</p>
<p><code><br />
$ rails basic_app<br />
$ cd basic_app<br />
$ ./script/generate scaffold  project title:string description:text<br />
$ rake db:migrate<br />
$ ./script/server<br />
</code></p>
<p>In Rails 2.3, you also need to added the following line to the top of app/controllers/projects_controller.rb (This will allow external access to the APIs.)  You can make this change while the server is running, btw.</p>
<p><code><br />
  skip_before_filter :verify_authenticity_token<br />
</code></p>
<p>Leave that window open where you can see it, since it will output useful stuff from the log.  Then in another terminal window, experiment with the following commands to interact with your application APIs.</p>
<p>blockquote.code {<br />
  font-style: normal;<br />
  font-family: Monaco,monospace;<br />
  font-size: 12px;<br />
  border: solid 1px #aaa;<br />
  padding: 6px;<br />
  background-color: #eee;<br />
  color: inherit;<br />
  overflow:auto;<br />
  margin: 10px 0px;<br />
}</p>
<h2>Create</h2>
<p>POST /projects.xml</p>
<p>Create a project object based on the XML representation given in the post body and save in the projects database table.</p>
<blockquote class="code"><p>
$ curl -X POST -d &quot;&lt;project&gt;&lt;title&gt;Awesome&lt;/title&gt;&lt;description&gt;This is an awesome project.&lt;/description&gt;&lt;/project&gt;&quot; -H &quot;Content-Type: application/xml&quot; http://localhost:3000/projects.xml</p>
<p>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;<br />
&lt;project&gt;<br />
&nbsp;&nbsp;&lt;created-at type=&quot;datetime&quot;&gt;2009-06-21T10:13:43-07:00&lt;/created-at&gt;<br />
&nbsp;&nbsp;&lt;description&gt;This is an awesome project.&lt;/description&gt;<br />
&nbsp;&nbsp;&lt;id type=&quot;integer&quot;&gt;6&lt;/id&gt;<br />
 &nbsp;&nbsp;&lt;title&gt;Awesome&lt;/title&gt;<br />
 &nbsp;&nbsp;&lt;updated-at type=&quot;datetime&quot;&gt;2009-06-21T10:13:43-07:00&lt;/updated-at&gt;<br />
&lt;/project&gt;
</p></blockquote>
<h2>Index</h2>
<p>GET /projects.xml</p>
<p>This returns a list of all of the projects in the database with an automatically generated XML representation.</p>
<blockquote class="code"><p>
$ curl http://localhost:3000/projects.xml&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</p>
<p>&lt;projects type=&quot;array&quot;&gt;<br />
  &lt;project&gt;<br />
    &nbsp;&nbsp;&lt;created-at type=&quot;datetime&quot;&gt;2009-06-21T10:13:19-07:00&lt;/created-at&gt;<br />
    &nbsp;&nbsp;&lt;description&gt;This is an awesome project.&lt;/description&gt;<br />
    &nbsp;&nbsp;&lt;id type=&quot;integer&quot;&gt;1&lt;/id&gt;<br />
    &nbsp;&nbsp;&lt;title&gt;Awesome&lt;/title&gt;<br />
    &nbsp;&nbsp;&lt;updated-at type=&quot;datetime&quot;&gt;2009-06-21T10:13:19-07:00&lt;/updated-at&gt;<br />
  &lt;/project&gt;<br />
  &lt;project&gt;<br />
    &nbsp;&nbsp;&lt;created-at type=&quot;datetime&quot;&gt;2009-06-21T10:13:43-07:00&lt;/created-at&gt;<br />
    &nbsp;&nbsp;&lt;description&gt;New information here&lt;/description&gt;<br />
    &nbsp;&nbsp;&lt;id type=&quot;integer&quot;&gt;2&lt;/id&gt;<br />
    &nbsp;&nbsp;&lt;title&gt;Awesome&lt;/title&gt;<br />
    &nbsp;&nbsp;&lt;updated-at type=&quot;datetime&quot;&gt;2009-06-21T10:49:21-07:00&lt;/updated-at&gt;<br />
  &lt;/project&gt;<br />
&lt;/projects&gt;
</p></blockquote>
<h2>Show</h2>
<p>GET /projects/1.xml</p>
<p>This returns an xml representation of the project with id #1</p>
<blockquote class="code"><p>
$ curl http://localhost:3000/projects/1.xml&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</p>
<p>&lt;project&gt;<br />
  &nbsp;&nbsp;&lt;created-at type=&quot;datetime&quot;&gt;2009-06-21T10:45:19-07:00&lt;/created-at&gt;<br />
  &nbsp;&nbsp;&lt;description&gt;This is an awesome project.&lt;/description&gt;<br />
  &nbsp;&nbsp;&lt;id type=&quot;integer&quot;&gt;8&lt;/id&gt;<br />
  &nbsp;&nbsp;&lt;title&gt;Awesome&lt;/title&gt;<br />
  &nbsp;&nbsp;&lt;updated-at type=&quot;datetime&quot;&gt;2009-06-21T10:45:19-07:00&lt;/updated-at&gt;<br />
&lt;/project&gt;
</p></blockquote>
<h2>Update</h2>
<p>PUT /projects/1.xml</p>
<p>This modifies the project with id #1</p>
<blockquote class="code"><p>
curl -X PUT -d &quot;&lt;project&gt;&lt;description&gt;New information here&lt;/description&gt;&lt;/project&gt;&quot; -H &quot;Content-Type: application/xml&quot; http://localhost:3000/projects/1.xml
</p></blockquote>
	</div><!-- .entry-content -->

	<footer class="entry-footer">
		<span class="cat-links block">Posted in <a href="/category/code/" rel="category tag">code</a>.</span>	</footer><!-- .entry-footer -->
	
	</article><!-- #post-1533 -->
		<div id="comments">
			<h2 id="comments-title">
				5 thoughts on &ldquo;<span>simple web services with rails</span>&rdquo;			</h2>
		
					
			<ol class="commentlist unstyled">
						
		<li  id="li-comment-529" class="comment even thread-even depth-1">
			<article id="comment-529" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/5f3d52658aafcf0aabe76a5147e8909f?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/5f3d52658aafcf0aabe76a5147e8909f?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn">Tom Rossi</span> <span class="says">said</span> on <a href="/2009/06/simple-web-services-with-rails/#comment-529"><time pubdate datetime="2009-06-22T11:51:51-07:00">June 22, 2009 at 11:51 am</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Is there a way to actually do this in your functional test rather than using curl?  In other words, rather than calling:</p>
<p>post :create, params</p>
<p> Can we call something like:</p>
<p> post :create, :xml =&gt; (object.to_xml)?</p>
<p>That would be nice just so we can jump into a functional test and look at the response.body for debugging.</p>
<p>Thanks,<br />
Tom</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-529 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-530" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="comment-530" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='' rel='external nofollow ugc' class='url'>Sarah</a></span> <span class="says">said</span> on <a href="/2009/06/simple-web-services-with-rails/#comment-530"><time pubdate datetime="2009-06-22T12:07:31-07:00">June 22, 2009 at 12:07 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>I absolutely agree that this kind of thing belongs in your test suite.  Thanks for pointing that out.  I&#8217;m fond of cucumber for testing this kind of thing (since it also provides docs for the APIs that you could give to another developer).  However, I did this because my tests were failing when they used to succeed and I didn&#8217;t understand why&#8230; it turned out that there was some syntax change in a version upgrade that led to the http header not being set correctly.  In any case, I found that getting back to basics helped me isolate the issue.</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-530 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-531" class="comment even thread-even depth-1">
			<article id="comment-531" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/5f3d52658aafcf0aabe76a5147e8909f?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/5f3d52658aafcf0aabe76a5147e8909f?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn">Tom Rossi</span> <span class="says">said</span> on <a href="/2009/06/simple-web-services-with-rails/#comment-531"><time pubdate datetime="2009-06-22T12:18:12-07:00">June 22, 2009 at 12:18 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>This method of testing with cron is definitely valuable!  I was just wondering how I could test (preferably without a plugin).  It would seem like with all the emphasis on REST and on testing, that the framework would make it a little easier to test something like your app responding to an xml post.</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-531 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-532" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="comment-532" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/37512e7a7f034880c112f35bcf8e9c21?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/37512e7a7f034880c112f35bcf8e9c21?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn">jgpawletko</span> <span class="says">said</span> on <a href="/2009/06/simple-web-services-with-rails/#comment-532"><time pubdate datetime="2011-02-06T17:56:46-08:00">February 6, 2011 at 5:56 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Many thanks from a Rails noob.<br />
Your write-up helped me solve a problem I was having with POSTing XML to a<br />
Rails 3.0 app I&#8217;m developing.</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-532 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-533" class="comment even thread-even depth-1">
			<article id="comment-533" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/77669cce9a5d4a6cd4c64c82f1fa7493?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/77669cce9a5d4a6cd4c64c82f1fa7493?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn">Ed</span> <span class="says">said</span> on <a href="/2009/06/simple-web-services-with-rails/#comment-533"><time pubdate datetime="2012-02-20T10:41:14-08:00">February 20, 2012 at 10:41 am</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>I&#8217;m new to Rails and plans eventually include providing web services from/to a simple Rails app.  I&#8217;m amazed at what you&#8217;ve described here.  You&#8217;re issuing your curl commands on the same machine that&#8217;s running Rails.  Can you point me to a good resource that covers &#8220;getting in the door&#8221; to Rails from another machine to issue equivalent commands?  Thanks much!</p>
<p>Ed<br />
Philadelphia</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-533 .comment -->
			
	</li><!-- #comment-## -->
			</ol><!-- .commentlist .unstyled -->
		
					
		</div><!-- #comments -->
		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title"><legend>Leave a reply</legend> <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2009/06/simple-web-services-with-rails/#respond" style="display:none;">Cancel reply</a></small></h3><form action="/wp-comments-post.php" method="post" id="commentform" class="comment-form"><div class="form-horizontal"><div class="comment-form-comment control-group"><label class="control-label" for="comment">Comment</label><div class="controls"><textarea autocomplete="new-password"  class="span7" id="ge297d5abe"  name="ge297d5abe"   rows="8" aria-required="true"></textarea><textarea id="comment" aria-hidden="true" name="comment" autocomplete="new-password" style="padding:0 !important;clip:rect(1px, 1px, 1px, 1px) !important;position:absolute !important;white-space:nowrap !important;height:1px !important;width:1px !important;overflow:hidden !important;" tabindex="-1"></textarea><script data-noptimize type="text/javascript">document.getElementById("comment").setAttribute( "id", "a9162e441c28400f33b1668116caf3f8" );document.getElementById("ge297d5abe").setAttribute( "id", "comment" );</script></div></div><div class="form-allowed-tags control-group"><label class="control-label">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes: </label><div class="controls"><pre>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;s&gt; &lt;strike&gt; &lt;strong&gt; </pre></div></div>
									 <div class="form-actions"><div class="comment-form-author control-group">
				<label for="author" class="control-label">Name</label>
				<div class="controls">
					<input id="author" name="author" type="text" value="" size="30" aria-required='true' />
					<p class="help-inline"><span class="required">required</span></p>
				</div>
			</div>
<div class="comment-form-email control-group">
				<label for="email" class="control-label">Email</label>
				<div class="controls">
					<input id="email" name="email" type="email" value="" size="30" aria-required='true' />
					<p class="help-inline"><span class="required">required</span>, will not be published</p>
				</div>
			</div>
<div class="comment-form-url control-group">
				<label for="url" class="control-label">Website</label>
				<div class="controls">
					<input id="url" name="url" type="url" value="" size="30" />
				</div>
			</div>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='1533' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p></div></div></form>	</div><!-- #respond -->
			
		<nav id="nav-single" class="pager">
			<h3 class="assistive-text">Post navigation</h3>
			<span class="next"><a href="/2009/06/openlaszlo-simple-post-code/" rel="next">Next Post <span class="meta-nav">&rarr;</span></a></span>
			<span class="previous"><a href="/2009/06/story-about-making-a-difference/" rel="prev"><span class="meta-nav">&larr;</span> Previous Post</a></span>
		</nav><!-- #nav-single -->
		
			</div><!-- #content -->
	</section><!-- #primary -->

<section id="secondary" class="widget-area span4" role="complementary">
	<aside id="recent-comments-2" class="widget well widget_recent_comments"><h2 class="widget-title">Recent Comments</h2><ul id="recentcomments"><li class="recentcomments"><span class="comment-author-link"><a href='https://da.biomarmicrobialtechnologies.com/' rel='external nofollow ugc' class='url'>Silje Randrup</a></span> on <a href="/2003/08/the-history-of-the-letter-c/#comment-22370">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link"><a href='http://x--x.us' rel='external nofollow ugc' class='url'>Paula</a></span> on <a href="/2003/08/the-history-of-the-letter-c/#comment-19549">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link"><a href='http://x--x.us' rel='external nofollow ugc' class='url'>Michelle</a></span> on <a href="/2003/08/the-history-of-the-letter-c/#comment-19399">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link">Craig</span> on <a href="/2019/10/http-3-starter-notes-rust-quiche/#comment-18963">http/3 starter notes, rust quiche</a></li><li class="recentcomments"><span class="comment-author-link">Kornel</span> on <a href="/2019/10/rust-whats-a-tuple-variant/#comment-18539">[rust] what&#8217;s a tuple variant?</a></li><li class="recentcomments"><span class="comment-author-link"><a href='https://apromixately.github.io' rel='external nofollow ugc' class='url'>Simon</a></span> on <a href="/2019/06/essential-rust-tools/#comment-13007">essential rust tools</a></li><li class="recentcomments"><span class="comment-author-link"><a href='https://balsamiq.com/company/' rel='external nofollow ugc' class='url'>balsamiqVal</a></span> on <a href="/2018/10/the-path-is-made-by-walking/#comment-9108">the path is made by walking</a></li><li class="recentcomments"><span class="comment-author-link">Jennifer</span> on <a href="/2018/07/optimize-for-results-not-optics/#comment-8193">optimize for results, not optics</a></li><li class="recentcomments"><span class="comment-author-link">Bernardo Gomes</span> on <a href="/2016/06/sailsjs-testing-patterns-trunctate-database/#comment-8058">sailsjs testing: how to truncate the database</a></li><li class="recentcomments"><span class="comment-author-link">Bernardo Gomes</span> on <a href="/2016/06/sailsjs-testing-patterns-trunctate-database/#comment-8057">sailsjs testing: how to truncate the database</a></li></ul></aside>
		<aside id="recent-posts-2" class="widget well widget_recent_entries">
		<h2 class="widget-title">Recent Posts</h2>
		<ul>
											<li>
					<a href="/2020/07/hope-is-not-a-strategy/">hope is not a strategy</a>
									</li>
											<li>
					<a href="/2020/01/duck-typing-in-rust-trait-vs-type/">duck typing in rust: trait vs type</a>
									</li>
											<li>
					<a href="/2020/01/writing-c-library-in-rust/">writing c library in rust</a>
									</li>
											<li>
					<a href="/2020/01/rust-on-heroku-with-hyper-http/">rust on heroku with hyper http</a>
									</li>
											<li>
					<a href="/2020/01/rust-on-heroku-with-async-await-and-tokio/">rust on heroku with async/await and tokio</a>
									</li>
											<li>
					<a href="/2019/12/patterns-of-actions-are-a-making/">patterns of actions are a making</a>
									</li>
											<li>
					<a href="/2019/12/memory-safety-necessary-not-sufficient/">memory safety: necessary, not sufficient</a>
									</li>
											<li>
					<a href="/2019/12/brief-history-of-rtmp-future-thoughts/">brief history of rtmp + future thoughts</a>
									</li>
											<li>
					<a href="/2019/12/rust-2020/">rust 2020: fulfill the promise</a>
									</li>
											<li>
					<a href="/2019/11/nut-loaf-with-red-pepper-sauce/">nut loaf with red pepper sauce</a>
									</li>
											<li>
					<a href="/2019/10/http-3-starter-notes-rust-quiche/">http/3 starter notes, rust quiche</a>
									</li>
											<li>
					<a href="/2019/10/rust-whats-a-tuple-variant/">[rust] what&#8217;s a tuple variant?</a>
									</li>
											<li>
					<a href="/2019/08/graph-in-rust-using-petgraph/">graph in rust using petgraph</a>
									</li>
											<li>
					<a href="/2019/06/debugging-openssl-shared-libary/">debugging openssl shared libary</a>
									</li>
											<li>
					<a href="/2019/06/digital-identity-how-to-verify-trust/">digital identity: how to verify trust?</a>
									</li>
											<li>
					<a href="/2019/06/essential-rust-tools/">essential rust tools</a>
									</li>
											<li>
					<a href="/2019/05/learning-scala-with-graphics/">learning scala with graphics</a>
									</li>
											<li>
					<a href="/2019/04/when-reality-is-broken-change-the-rules/">when reality is broken, change the rules</a>
									</li>
											<li>
					<a href="/2019/04/subverting-saurons-business-model/">subverting Sauron&#8217;s business model</a>
									</li>
											<li>
					<a href="/2019/02/firebase-auth-migration-from-rails-and-devise/">firebase auth migration from rails/devise</a>
									</li>
					</ul>

		</aside></section><!-- #secondary .widget-area -->
				<footer id="colophon" role="contentinfo" class="span12">
										<div id="page-footer" class="well clearfix">
						<span class="credits alignleft">&copy; 2021 <a href="/">the evolving ultrasaurus</a>, all rights reserved.</span>						<div id="site-generator">
							<a	href="http://wordpress.org/"
								title="Semantic Personal Publishing Platform"
								target="_blank"
								rel="generator">Proudly powered by WordPress</a>
						</div>
					</div><!-- #page-footer .well .clearfix -->
									</footer><!-- #colophon -->
							</div><!-- #page -->
		</div><!-- .container -->
	<!-- 48 queries. 0.400 seconds. -->
	<script type='text/javascript' src='/wp-content/themes/the-bootstrap/js/bootstrap.min.js?ver=2.0.3' id='tw-bootstrap-js'></script>
<script type='text/javascript' src='/wp-content/themes/the-bootstrap/js/the-bootstrap.min.js?ver=2.0.1' id='the-bootstrap-js'></script>
<script type='text/javascript' src='/wp-includes/js/wp-embed.min.js?ver=5.7.1' id='wp-embed-js'></script>
	</body>
</html>

<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: simple web services with rails	</title>
	<atom:link href="/2009/06/simple-web-services-with-rails/feed/" rel="self" type="application/rss+xml" />
	<link>/2009/06/simple-web-services-with-rails/</link>
	<description>Sarah Allen&#039;s reflections on internet software and other topics</description>
	<lastBuildDate>Mon, 20 Feb 2012 18:41:14 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.1</generator>
	<item>
		<title>
		By: Ed		</title>
		<link>/2009/06/simple-web-services-with-rails/#comment-533</link>

		<dc:creator><![CDATA[Ed]]></dc:creator>
		<pubDate>Mon, 20 Feb 2012 18:41:14 +0000</pubDate>
		<guid isPermaLink="false">/?p=1533#comment-533</guid>

					<description><![CDATA[I&#039;m new to Rails and plans eventually include providing web services from/to a simple Rails app.  I&#039;m amazed at what you&#039;ve described here.  You&#039;re issuing your curl commands on the same machine that&#039;s running Rails.  Can you point me to a good resource that covers &quot;getting in the door&quot; to Rails from another machine to issue equivalent commands?  Thanks much!

Ed
Philadelphia]]></description>
			<content:encoded><![CDATA[<p>I&#8217;m new to Rails and plans eventually include providing web services from/to a simple Rails app.  I&#8217;m amazed at what you&#8217;ve described here.  You&#8217;re issuing your curl commands on the same machine that&#8217;s running Rails.  Can you point me to a good resource that covers &#8220;getting in the door&#8221; to Rails from another machine to issue equivalent commands?  Thanks much!</p>
<p>Ed<br />
Philadelphia</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: jgpawletko		</title>
		<link>/2009/06/simple-web-services-with-rails/#comment-532</link>

		<dc:creator><![CDATA[jgpawletko]]></dc:creator>
		<pubDate>Mon, 07 Feb 2011 01:56:46 +0000</pubDate>
		<guid isPermaLink="false">/?p=1533#comment-532</guid>

					<description><![CDATA[Many thanks from a Rails noob.
Your write-up helped me solve a problem I was having with POSTing XML to a 
Rails 3.0 app I&#039;m developing.]]></description>
			<content:encoded><![CDATA[<p>Many thanks from a Rails noob.<br />
Your write-up helped me solve a problem I was having with POSTing XML to a<br />
Rails 3.0 app I&#8217;m developing.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Tom Rossi		</title>
		<link>/2009/06/simple-web-services-with-rails/#comment-531</link>

		<dc:creator><![CDATA[Tom Rossi]]></dc:creator>
		<pubDate>Mon, 22 Jun 2009 20:18:12 +0000</pubDate>
		<guid isPermaLink="false">/?p=1533#comment-531</guid>

					<description><![CDATA[This method of testing with cron is definitely valuable!  I was just wondering how I could test (preferably without a plugin).  It would seem like with all the emphasis on REST and on testing, that the framework would make it a little easier to test something like your app responding to an xml post.]]></description>
			<content:encoded><![CDATA[<p>This method of testing with cron is definitely valuable!  I was just wondering how I could test (preferably without a plugin).  It would seem like with all the emphasis on REST and on testing, that the framework would make it a little easier to test something like your app responding to an xml post.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Sarah		</title>
		<link>/2009/06/simple-web-services-with-rails/#comment-530</link>

		<dc:creator><![CDATA[Sarah]]></dc:creator>
		<pubDate>Mon, 22 Jun 2009 20:07:31 +0000</pubDate>
		<guid isPermaLink="false">/?p=1533#comment-530</guid>

					<description><![CDATA[I absolutely agree that this kind of thing belongs in your test suite.  Thanks for pointing that out.  I&#039;m fond of cucumber for testing this kind of thing (since it also provides docs for the APIs that you could give to another developer).  However, I did this because my tests were failing when they used to succeed and I didn&#039;t understand why... it turned out that there was some syntax change in a version upgrade that led to the http header not being set correctly.  In any case, I found that getting back to basics helped me isolate the issue.]]></description>
			<content:encoded><![CDATA[<p>I absolutely agree that this kind of thing belongs in your test suite.  Thanks for pointing that out.  I&#8217;m fond of cucumber for testing this kind of thing (since it also provides docs for the APIs that you could give to another developer).  However, I did this because my tests were failing when they used to succeed and I didn&#8217;t understand why&#8230; it turned out that there was some syntax change in a version upgrade that led to the http header not being set correctly.  In any case, I found that getting back to basics helped me isolate the issue.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Tom Rossi		</title>
		<link>/2009/06/simple-web-services-with-rails/#comment-529</link>

		<dc:creator><![CDATA[Tom Rossi]]></dc:creator>
		<pubDate>Mon, 22 Jun 2009 19:51:51 +0000</pubDate>
		<guid isPermaLink="false">/?p=1533#comment-529</guid>

					<description><![CDATA[Is there a way to actually do this in your functional test rather than using curl?  In other words, rather than calling:

post :create, params

 Can we call something like:

 post :create, :xml =&#062; (object.to_xml)?

That would be nice just so we can jump into a functional test and look at the response.body for debugging.

Thanks,
Tom]]></description>
			<content:encoded><![CDATA[<p>Is there a way to actually do this in your functional test rather than using curl?  In other words, rather than calling:</p>
<p>post :create, params</p>
<p> Can we call something like:</p>
<p> post :create, :xml =&gt; (object.to_xml)?</p>
<p>That would be nice just so we can jump into a functional test and look at the response.body for debugging.</p>
<p>Thanks,<br />
Tom</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>

<!DOCTYPE html>
<html class="no-js" lang="en-US">
	<head>
				<link rel="profile" href="http://gmpg.org/xfn/11" />
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		
		<title>rails exceptions in xml &laquo; the evolving ultrasaurus</title>
		
				<meta name='robots' content='max-image-preview:large' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="the evolving ultrasaurus &raquo; Feed" href="/feed/" />
<link rel="alternate" type="application/rss+xml" title="the evolving ultrasaurus &raquo; Comments Feed" href="/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="the evolving ultrasaurus &raquo; rails exceptions in xml Comments Feed" href="/2009/09/rails-exceptions-in-xml/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.0.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.0.1\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.ultrasaurus.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.7.1"}};
			!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([55357,56424,8205,55356,57212],[55357,56424,8203,55356,57212])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='mailchimpSF_main_css-css'  href='/?mcsf_action=main_css&#038;ver=5.7.1' type='text/css' media='all' />
<!--[if IE]>
<link rel='stylesheet' id='mailchimpSF_ie_css-css'  href='/wp-content/plugins/mailchimp/css/ie.css?ver=5.7.1' type='text/css' media='all' />
<![endif]-->
<link rel='stylesheet' id='wp-block-library-css'  href='/wp-includes/css/dist/block-library/style.min.css?ver=5.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='tw-bootstrap-css'  href='/wp-content/themes/the-bootstrap/css/bootstrap.min.css?ver=2.0.3' type='text/css' media='all' />
<link rel='stylesheet' id='the-bootstrap-css'  href='/wp-content/themes/the-bootstrap/style.min.css?ver=2.0.1' type='text/css' media='all' />
<style id='the-bootstrap-inline-css' type='text/css'>
body > .container{margin-top:68px;}@media(min-width: 980px){body > .container{margin-top:58px;}}
</style>
<script type='text/javascript' src='/wp-includes/js/jquery/jquery.min.js?ver=3.5.1' id='jquery-core-js'></script>
<script type='text/javascript' src='/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>
<script type='text/javascript' src='/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.5.4' id='ga-external-tracking-js'></script>
<link rel="https://api.w.org/" href="/wp-json/" /><link rel="alternate" type="application/json" href="/wp-json/wp/v2/posts/2058" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 5.7.1" />
<link rel="canonical" href="/2009/09/rails-exceptions-in-xml/" />
<link rel='shortlink' href='/?p=2058' />
<link rel="alternate" type="application/json+oembed" href="/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.ultrasaurus.com%2F2009%2F09%2Frails-exceptions-in-xml%2F" />
<link rel="alternate" type="text/xml+oembed" href="/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fwww.ultrasaurus.com%2F2009%2F09%2Frails-exceptions-in-xml%2F&#038;format=xml" />
<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>	<style type="text/css">
				#branding hgroup {
			position: absolute !important;
			clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
			clip: rect(1px, 1px, 1px, 1px);
		}
			</style>
		<!--[if lt IE 9]>
		<script src="/wp-content/themes/the-bootstrap/js/html5shiv.min.js" type="text/javascript"></script>
		<script src="/wp-content/themes/the-bootstrap/js/respond.min.js" type="text/javascript"></script>
	<![endif]-->
	<!-- Google Analytics Tracking by Google Analyticator 6.5.4: http://www.videousermanuals.com/google-analyticator/ -->
<script type="text/javascript">
    var analyticsFileTypes = [''];
    var analyticsSnippet = 'enabled';
    var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
  
	_gaq.push(['_setAccount', 'UA-4313619-1']);
    _gaq.push(['_addDevId', 'i9k95']); // Google Analyticator App ID with Google
    _gaq.push(['_gat._anonymizeIp']);
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
		<style type="text/css" id="wp-custom-css">
			code {
	color: #70a
}

p {
	color: #333
}

blockquote p {
	font-size: 14px;
	font-weight: normal;
	padding-top: 6px;
	padding-bottom: 6px;
	padding-left: 10px;
	padding-right: 60px;
	line-height: 1.2;
}		</style>
			</head>
	
	<body class="post-template-default single single-post postid-2058 single-format-standard content-sidebar">
		<div class="container">
			<div id="page" class="hfeed row">
								<header id="branding" role="banner" class="span12">
										<hgroup>
						<h1 id="site-title">
							<a href="/" title="the evolving ultrasaurus" rel="home">
								<span>the evolving ultrasaurus</span>
							</a>
						</h1>
						<h2 id="site-description">Sarah Allen&#039;s reflections on internet software and other topics</h2>
					</hgroup>
					
					
					<nav id="access" role="navigation">
						<h3 class="assistive-text">Main menu</h3>
						<div class="skip-link"><a class="assistive-text" href="#content" title="Skip to primary content">Skip to primary content</a></div>
						<div class="skip-link"><a class="assistive-text" href="#secondary" title="Skip to secondary content">Skip to secondary content</a></div>
												<div class="navbar navbar-fixed-top navbar-inverse">
							<div class="navbar-inner">
								<div class="container">
									<!-- .btn-navbar is used as the toggle for collapsed navbar content -->
									<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
									</a>
																		<span class="brand">the evolving ultrasaurus</span>
																		<div class="nav-collapse">
										<div class="menu-primary-container"><ul id="menu-primary" class="nav"><li id="menu-item-4272" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4272"><a href="/about/">About</a></li>
<li id="menu-item-6605" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6605"><a href="/speaking/">Speaking</a></li>
<li id="menu-item-6366" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-6366"><a href="/code/">Code</a></li>
<li id="menu-item-4269" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4269"><a href="/archives/">Archives</a></li>
<li id="menu-item-4759" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4759"><a href="/contact/">Contact</a></li>
<li id="menu-item-4697" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4697"><a href="/ultrasaurus/">What is an ultrasaurus?</a></li>
</ul></div>	<form id="searchform" class="navbar-search pull-right" method="get" action="/">
						<label for="s" class="assistive-text hidden">Search</label>
						<input type="search" class="search-query" name="s" id="s" placeholder="Search" />
					</form>								    </div>
								</div>
							</div>
						</div>
											</nav><!-- #access -->
									</header><!-- #branding -->
<section id="primary" class="span8">
	
		<div id="content" role="main">
		<article id="post-2058" class="post-2058 post type-post status-publish format-standard hentry category-code">
		
	<header class="page-header">
		<h1 class="entry-title">rails exceptions in xml</h1>		<div class="entry-meta"><span class="sep">Posted on </span><a href="/2009/09/rails-exceptions-in-xml/" title="10:13 am" rel="bookmark"><time class="entry-date" datetime="2009-09-13T10:13:57-07:00" pubdate>September 13, 2009</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="/author/sarah/" title="View all posts by sarah" rel="author">sarah</a></span></span>		<span class="sep"> | </span>
		<span class="comments-link">
			<a href="/2009/09/rails-exceptions-in-xml/#comments"><strong>10</strong> Replies</a>		</span>
		</div><!-- .entry-meta -->
	</header><!-- .entry-header -->

	<div class="entry-content clearfix">
		<p>We ran into an issue last week where our XML APIs were returning HTML under certain error conditions, rather than the expected XML.  Our solution was to add the following code to the ApplicationController:</p>
<pre>
  rescue_from Exception do |exception|
    respond_to do |format|
      format.xml  { render :xml =&gt; 
           "&lt;error&gt;Internal Server Error #{exception.message}&lt;/error&gt;", 
           :status =&gt; 500 }
      format.html { render :html =&gt; {:file =&gt; 'public/500.html'}, :status =&gt; 500 }
      format.json { render :json =&gt; 
            {:error =&gt; "Internal Server Error #{exception.message}"}.to_json, 
             :status =&gt; 500 }
    end
  end
</pre>
<p>We might have also declared a rescue_action, and I&#8217;m not sure of the benefits of one over the other, except that perhaps we needed to implement a general form of rescue_from since we had another more specific form already declared.</p>
<p>It seemed to me that this should be the default behavior in rails, so I decided to dig into it a little more and see what I could discover.  I started by making a little test app to reproduce the exception.  The particular case from last week was a database limit that wasn&#8217;t being caught in the app with a length validation.  When I tried to re-create the error in MySql, I noticed that no exception is thrown since MySql will just truncate the data (although perhaps that is only because I am not running MySql in strict mode).  In PostgreSQL, the database layer will throw an exception.</p>
<p>Test app setup:</p>
<pre>
rails -d postgresql test_postgresql
cd test_postgresql/
script/generate scaffold person first:string last:string present:boolean
</pre>
<p>Edit the migration to create a database limit:</p>
<pre>
class CreatePeople &lt; ActiveRecord::Migration
  def self.up
    create_table :people do |t|
      t.string :first, :limit =&gt; 40
      t.string :last, :limit =&gt; 40
      t.boolean :present

      t.timestamps
    end
  end

  def self.down
    drop_table :people
  end
end
</pre>
<p>Create the postgres user.  Note double-quotes around user, single quotes around password. It has to be that way.  Go figure.</p>
<pre>
$ sudo su postgres -c psql
postgres=# create user "test_postgresql" with superuser password 'password';
CREATE ROLE
postgres=# q
</pre>
<p>Finally create the database, run migration, and start the server:</p>
<pre> 
rake db:create:all
rake db:migrate
./script/server
</pre>
<p>If you point your browser at http://localhost:3000/people and try to create a person with more that 40 characters in the first name, you will see the following error:</p>
<pre>
ActiveRecord::StatementInvalid in PeopleController#create
PGError: ERROR:  value too long for type character varying(40)
</pre>
<p>That is all well and good; however, if you do the same in XML, you will get the same error in <strong>HTML</strong>.</p>
<pre width="80">
$ curl -X POST -d &quot;&lt;person&gt;&lt;first&gt;This is a first name that is too long for the database limit&lt;/first&gt;&lt;/person&gt;&quot; -H &quot;Content-Type: application/xml&quot; http://localhost:3000/people.xml
&lt;html xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
&lt;head&gt;
  &lt;title&gt;Action Controller: Exception caught&lt;/title&gt;
  &lt;style&gt;
    body { background-color: #fff; color: #333; }

    body, p, ol, ul, td {
      font-family: verdana, arial, helvetica, sans-serif;
      font-size:   13px;
      line-height: 18px;
    }
</pre>
<p>That seems like a bug to me.  Perhaps this should be a lighthouse ticket rather than a blog post.. still not confident in identifying bugs in Rails, so I figured I&#8217;d post here first.</p>
	</div><!-- .entry-content -->

	<footer class="entry-footer">
		<span class="cat-links block">Posted in <a href="/category/code/" rel="category tag">code</a>.</span>	</footer><!-- .entry-footer -->
	
	</article><!-- #post-2058 -->
		<div id="comments">
			<h2 id="comments-title">
				10 thoughts on &ldquo;<span>rails exceptions in xml</span>&rdquo;			</h2>
		
					
			<ol class="commentlist unstyled">
						
		<li  id="li-comment-621" class="comment even thread-even depth-1">
			<article id="comment-621" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/70b7df47b0ae91be1a47aa31a99775fb?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/70b7df47b0ae91be1a47aa31a99775fb?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn">Austin Putman</span> <span class="says">said</span> on <a href="/2009/09/rails-exceptions-in-xml/#comment-621"><time pubdate datetime="2009-09-13T15:48:04-07:00">September 13, 2009 at 3:48 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Don&#8217;t know if its a bug per se.  It&#8217;s odd as the database is doing validation in addition to the validations done by the model.  I would say that if the 40 character limit is important, you could put an ActiveRecord validation in to prevent this situation.  Then you will get the same error across all databases.</p>
<p>It surprises me that the controller logic doesn&#8217;t handle this case.  Usually the database update is tested as a conditional:</p>
<p>if @person.save<br />
   respond_to # happy path block<br />
  &#8230;<br />
else<br />
  respond_to # error message logic block<br />
  &#8230;.<br />
end</p>
<p>In your case, the save is throwing an error, like save!.  The AR::Postgres adapter could maybe rescue that error and return false, but how can it represent the nature of the error in a way that is accessible to the controller?</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-621 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-622" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="comment-622" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='' rel='external nofollow ugc' class='url'>Sarah</a></span> <span class="says">said</span> on <a href="/2009/09/rails-exceptions-in-xml/#comment-622"><time pubdate datetime="2009-09-13T15:58:16-07:00">September 13, 2009 at 3:58 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Yeah, I consider it a bug in my code that there wasn&#8217;t a validation on the model; however, I wanted to be sure if *any* code throws an exception that it is returned to the client as XML (because the client isn&#8217;t built to expect HTML as a response to an XML API nor should it be).</p>
<p>Certainly the exception is not caught and perhaps it should be by ActiveRecord, which could then populate @person.errors with the message from the database adapter.</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-622 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-623" class="comment even thread-even depth-1">
			<article id="comment-623" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/ef1ea92a3c46959c3338db50100dd161?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/ef1ea92a3c46959c3338db50100dd161?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='http://echographia.com/' rel='external nofollow ugc' class='url'>Erik Ostrom</a></span> <span class="says">said</span> on <a href="/2009/09/rails-exceptions-in-xml/#comment-623"><time pubdate datetime="2009-09-13T18:04:56-07:00">September 13, 2009 at 6:04 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>It seems reasonable that exceptions should always be returned in the format the client requests, but I&#8217;m not sure I&#8217;d want Rails to enforce this. Since XML is sort of a meta-format, it&#8217;s not enough to just have Rails return &#8220;something in XML&#8221;; it has to return something that conforms to the client&#8217;s expectations about how exceptions are rendered in XML. That&#8217;s application-specific.</p>
<p>(Or at least, uh, &#8220;specific-kind-of-XML-specific&#8221;. Like, if you&#8217;re using SOAP, that has its own exception protocol.)</p>
<p>Maybe when there&#8217;s an unhandled exception Rails should just return an HTTP error code with no content? Unless the application sets up an exception handler?</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-623 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-624" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="comment-624" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='' rel='external nofollow ugc' class='url'>Sarah</a></span> <span class="says">said</span> on <a href="/2009/09/rails-exceptions-in-xml/#comment-624"><time pubdate datetime="2009-09-13T18:27:23-07:00">September 13, 2009 at 6:27 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Good point.  I think empty content with a status code is a reasonable solution.</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-624 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-625" class="comment even thread-even depth-1">
			<article id="comment-625" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/5a60d6c66b7737ba71cecc4c46fc6fd5?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/5a60d6c66b7737ba71cecc4c46fc6fd5?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='http://www.rubyfocus.biz' rel='external nofollow ugc' class='url'>Wolfram Arnold</a></span> <span class="says">said</span> on <a href="/2009/09/rails-exceptions-in-xml/#comment-625"><time pubdate datetime="2009-09-24T11:12:46-07:00">September 24, 2009 at 11:12 am</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>I like Erik Ostrom&#8217;s suggestion, but I would refine it to say that if the accept header calls for HTML Rails behaves as today, as many web sites rely on this Rails default to return an HTML error message.</p>
<p>Where Rails fails today is that is replies in HTML even if the accept header specifies something else (e.g. XML or JSON). In that case, the default behavior would probably be best to just return a status code and leave it to the application developer to add textual error messages.</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-625 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-626" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="comment-626" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/6b7d499b8aca7860ec4b39144bee3062?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/6b7d499b8aca7860ec4b39144bee3062?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='http://applieddisorder.com' rel='external nofollow ugc' class='url'>Josh Gum</a></span> <span class="says">said</span> on <a href="/2009/09/rails-exceptions-in-xml/#comment-626"><time pubdate datetime="2009-11-25T11:48:36-08:00">November 25, 2009 at 11:48 am</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Try;</p>
<p>format.xml  { render :xml =&gt; {:message =&gt; &#8220;Internal Server Error #{exception.message}&#8221;}.to_xml(:root =&gt; &#8220;error&#8221;), :status =&gt; 500}</p>
<p>format.json { render :json =&gt; {:error =&gt; { :message =&gt;  &#8220;Internal Server Error #{exception.message}&#8221;}}, :status =&gt; 500</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-626 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-627" class="comment even thread-even depth-1">
			<article id="comment-627" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='' rel='external nofollow ugc' class='url'>Sarah</a></span> <span class="says">said</span> on <a href="/2009/09/rails-exceptions-in-xml/#comment-627"><time pubdate datetime="2009-11-25T12:03:00-08:00">November 25, 2009 at 12:03 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Ok, maybe that&#8217;s a little more rails-y, but I&#8217;m not sure that it is more readable than just plunking the wrapper xml node into a string and inserting the exception.message with string interpolation as we did.</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-627 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-628" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="comment-628" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/6b7d499b8aca7860ec4b39144bee3062?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/6b7d499b8aca7860ec4b39144bee3062?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='http://applieddisorder.com' rel='external nofollow ugc' class='url'>Josh Gum</a></span> <span class="says">said</span> on <a href="/2009/09/rails-exceptions-in-xml/#comment-628"><time pubdate datetime="2009-11-25T12:09:43-08:00">November 25, 2009 at 12:09 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Sure.. What&#8217;s strange is your respond block was rendering HTML..? I&#8217;ve got the same thing setup and mine return json and xml.</p>
<p>curl -H &#8216;Accepts: text/xml&#8217; -i <a href="http://127.0.0.1:3000/offers/999.xml" rel="nofollow ugc">http://127.0.0.1:3000/offers/999.xml</a><br />
HTTP/1.1 422<br />
Connection: close<br />
Date: Wed, 25 Nov 2009 20:04:35 GMT<br />
Content-Type: application/xml; charset=utf-8<br />
Cache-Control: no-cache<br />
Content-Length: 68</p>
<p>Internal Server Error Couldn&#8217;t find Offer with ID=999</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-628 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-629" class="comment even thread-even depth-1">
			<article id="comment-629" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/6b7d499b8aca7860ec4b39144bee3062?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/6b7d499b8aca7860ec4b39144bee3062?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='http://applieddisorder.com' rel='external nofollow ugc' class='url'>Josh Gum</a></span> <span class="says">said</span> on <a href="/2009/09/rails-exceptions-in-xml/#comment-629"><time pubdate datetime="2009-11-25T12:17:06-08:00">November 25, 2009 at 12:17 pm</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>Sorry, was actually :</p>
<p>HTTP/1.1 422<br />
Connection: close<br />
Date: Wed, 25 Nov 2009 20:16:40 GMT<br />
Content-Type: application/xml; charset=utf-8<br />
Cache-Control: no-cache<br />
Content-Length: 141</p>
<p>  record_not_found<br />
  Couldn&#8217;t find Offer with ID=999</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-629 .comment -->
			
	</li><!-- #comment-## -->
		
		<li  id="li-comment-630" class="comment odd alt thread-odd thread-alt depth-1">
			<article id="comment-630" class="comment row">
				<div class="comment-author-avatar span1">
					<img alt='' src='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=70&#038;r=g' srcset='https://secure.gravatar.com/avatar/20ee0d23c969c7740d3c936a4675bb23?s=140&#038;r=g 2x' class='avatar avatar-70 photo' height='70' width='70' loading='lazy'/>				</div>
				<footer class="comment-meta span7">
					<p class="comment-author vcard">
						<span class="fn"><a href='' rel='external nofollow ugc' class='url'>Sarah</a></span> <span class="says">said</span> on <a href="/2009/09/rails-exceptions-in-xml/#comment-630"><time pubdate datetime="2009-11-26T11:32:52-08:00">November 26, 2009 at 11:32 am</time></a>:					</p><!-- .comment-author .vcard -->
	
						
				</footer><!-- .comment-meta -->
	
				<div class="comment-content span7">
					<p>That&#8217;s just a regular error I think, not thrown as an exception&#8230;</p>
				</div><!-- .comment-content -->
			</article><!-- #comment-630 .comment -->
			
	</li><!-- #comment-## -->
			</ol><!-- .commentlist .unstyled -->
		
					
		</div><!-- #comments -->
		<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title"><legend>Leave a reply</legend> <small><a rel="nofollow" id="cancel-comment-reply-link" href="/2009/09/rails-exceptions-in-xml/#respond" style="display:none;">Cancel reply</a></small></h3><form action="/wp-comments-post.php" method="post" id="commentform" class="comment-form"><div class="form-horizontal"><div class="comment-form-comment control-group"><label class="control-label" for="comment">Comment</label><div class="controls"><textarea autocomplete="new-password"  class="span7" id="j263ebbdd3"  name="j263ebbdd3"   rows="8" aria-required="true"></textarea><textarea id="comment" aria-hidden="true" name="comment" autocomplete="new-password" style="padding:0 !important;clip:rect(1px, 1px, 1px, 1px) !important;position:absolute !important;white-space:nowrap !important;height:1px !important;width:1px !important;overflow:hidden !important;" tabindex="-1"></textarea><script data-noptimize type="text/javascript">document.getElementById("comment").setAttribute( "id", "a9711b6e27be34cc3f38f357df8cd4d7" );document.getElementById("j263ebbdd3").setAttribute( "id", "comment" );</script></div></div><div class="form-allowed-tags control-group"><label class="control-label">You may use these <abbr title="HyperText Markup Language">HTML</abbr> tags and attributes: </label><div class="controls"><pre>&lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;s&gt; &lt;strike&gt; &lt;strong&gt; </pre></div></div>
									 <div class="form-actions"><div class="comment-form-author control-group">
				<label for="author" class="control-label">Name</label>
				<div class="controls">
					<input id="author" name="author" type="text" value="" size="30" aria-required='true' />
					<p class="help-inline"><span class="required">required</span></p>
				</div>
			</div>
<div class="comment-form-email control-group">
				<label for="email" class="control-label">Email</label>
				<div class="controls">
					<input id="email" name="email" type="email" value="" size="30" aria-required='true' />
					<p class="help-inline"><span class="required">required</span>, will not be published</p>
				</div>
			</div>
<div class="comment-form-url control-group">
				<label for="url" class="control-label">Website</label>
				<div class="controls">
					<input id="url" name="url" type="url" value="" size="30" />
				</div>
			</div>
<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Post Comment" /> <input type='hidden' name='comment_post_ID' value='2058' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p></div></div></form>	</div><!-- #respond -->
			
		<nav id="nav-single" class="pager">
			<h3 class="assistive-text">Post navigation</h3>
			<span class="next"><a href="/2009/10/stone-soup-workshop/" rel="next">Next Post <span class="meta-nav">&rarr;</span></a></span>
			<span class="previous"><a href="/2009/09/learning-through-testing/" rel="prev"><span class="meta-nav">&larr;</span> Previous Post</a></span>
		</nav><!-- #nav-single -->
		
			</div><!-- #content -->
	</section><!-- #primary -->

<section id="secondary" class="widget-area span4" role="complementary">
	<aside id="recent-comments-2" class="widget well widget_recent_comments"><h2 class="widget-title">Recent Comments</h2><ul id="recentcomments"><li class="recentcomments"><span class="comment-author-link"><a href='https://da.biomarmicrobialtechnologies.com/' rel='external nofollow ugc' class='url'>Silje Randrup</a></span> on <a href="/2003/08/the-history-of-the-letter-c/#comment-22370">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link"><a href='http://x--x.us' rel='external nofollow ugc' class='url'>Paula</a></span> on <a href="/2003/08/the-history-of-the-letter-c/#comment-19549">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link"><a href='http://x--x.us' rel='external nofollow ugc' class='url'>Michelle</a></span> on <a href="/2003/08/the-history-of-the-letter-c/#comment-19399">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link">Craig</span> on <a href="/2019/10/http-3-starter-notes-rust-quiche/#comment-18963">http/3 starter notes, rust quiche</a></li><li class="recentcomments"><span class="comment-author-link">Kornel</span> on <a href="/2019/10/rust-whats-a-tuple-variant/#comment-18539">[rust] what&#8217;s a tuple variant?</a></li><li class="recentcomments"><span class="comment-author-link"><a href='https://apromixately.github.io' rel='external nofollow ugc' class='url'>Simon</a></span> on <a href="/2019/06/essential-rust-tools/#comment-13007">essential rust tools</a></li><li class="recentcomments"><span class="comment-author-link"><a href='https://balsamiq.com/company/' rel='external nofollow ugc' class='url'>balsamiqVal</a></span> on <a href="/2018/10/the-path-is-made-by-walking/#comment-9108">the path is made by walking</a></li><li class="recentcomments"><span class="comment-author-link">Jennifer</span> on <a href="/2018/07/optimize-for-results-not-optics/#comment-8193">optimize for results, not optics</a></li><li class="recentcomments"><span class="comment-author-link">Bernardo Gomes</span> on <a href="/2016/06/sailsjs-testing-patterns-trunctate-database/#comment-8058">sailsjs testing: how to truncate the database</a></li><li class="recentcomments"><span class="comment-author-link">Bernardo Gomes</span> on <a href="/2016/06/sailsjs-testing-patterns-trunctate-database/#comment-8057">sailsjs testing: how to truncate the database</a></li></ul></aside>
		<aside id="recent-posts-2" class="widget well widget_recent_entries">
		<h2 class="widget-title">Recent Posts</h2>
		<ul>
											<li>
					<a href="/2020/07/hope-is-not-a-strategy/">hope is not a strategy</a>
									</li>
											<li>
					<a href="/2020/01/duck-typing-in-rust-trait-vs-type/">duck typing in rust: trait vs type</a>
									</li>
											<li>
					<a href="/2020/01/writing-c-library-in-rust/">writing c library in rust</a>
									</li>
											<li>
					<a href="/2020/01/rust-on-heroku-with-hyper-http/">rust on heroku with hyper http</a>
									</li>
											<li>
					<a href="/2020/01/rust-on-heroku-with-async-await-and-tokio/">rust on heroku with async/await and tokio</a>
									</li>
											<li>
					<a href="/2019/12/patterns-of-actions-are-a-making/">patterns of actions are a making</a>
									</li>
											<li>
					<a href="/2019/12/memory-safety-necessary-not-sufficient/">memory safety: necessary, not sufficient</a>
									</li>
											<li>
					<a href="/2019/12/brief-history-of-rtmp-future-thoughts/">brief history of rtmp + future thoughts</a>
									</li>
											<li>
					<a href="/2019/12/rust-2020/">rust 2020: fulfill the promise</a>
									</li>
											<li>
					<a href="/2019/11/nut-loaf-with-red-pepper-sauce/">nut loaf with red pepper sauce</a>
									</li>
											<li>
					<a href="/2019/10/http-3-starter-notes-rust-quiche/">http/3 starter notes, rust quiche</a>
									</li>
											<li>
					<a href="/2019/10/rust-whats-a-tuple-variant/">[rust] what&#8217;s a tuple variant?</a>
									</li>
											<li>
					<a href="/2019/08/graph-in-rust-using-petgraph/">graph in rust using petgraph</a>
									</li>
											<li>
					<a href="/2019/06/debugging-openssl-shared-libary/">debugging openssl shared libary</a>
									</li>
											<li>
					<a href="/2019/06/digital-identity-how-to-verify-trust/">digital identity: how to verify trust?</a>
									</li>
											<li>
					<a href="/2019/06/essential-rust-tools/">essential rust tools</a>
									</li>
											<li>
					<a href="/2019/05/learning-scala-with-graphics/">learning scala with graphics</a>
									</li>
											<li>
					<a href="/2019/04/when-reality-is-broken-change-the-rules/">when reality is broken, change the rules</a>
									</li>
											<li>
					<a href="/2019/04/subverting-saurons-business-model/">subverting Sauron&#8217;s business model</a>
									</li>
											<li>
					<a href="/2019/02/firebase-auth-migration-from-rails-and-devise/">firebase auth migration from rails/devise</a>
									</li>
					</ul>

		</aside></section><!-- #secondary .widget-area -->
				<footer id="colophon" role="contentinfo" class="span12">
										<div id="page-footer" class="well clearfix">
						<span class="credits alignleft">&copy; 2021 <a href="/">the evolving ultrasaurus</a>, all rights reserved.</span>						<div id="site-generator">
							<a	href="http://wordpress.org/"
								title="Semantic Personal Publishing Platform"
								target="_blank"
								rel="generator">Proudly powered by WordPress</a>
						</div>
					</div><!-- #page-footer .well .clearfix -->
									</footer><!-- #colophon -->
							</div><!-- #page -->
		</div><!-- .container -->
	<!-- 48 queries. 0.364 seconds. -->
	<script type='text/javascript' src='/wp-content/themes/the-bootstrap/js/bootstrap.min.js?ver=2.0.3' id='tw-bootstrap-js'></script>
<script type='text/javascript' src='/wp-content/themes/the-bootstrap/js/the-bootstrap.min.js?ver=2.0.1' id='the-bootstrap-js'></script>
<script type='text/javascript' src='/wp-includes/js/wp-embed.min.js?ver=5.7.1' id='wp-embed-js'></script>
	</body>
</html>

<!DOCTYPE html>
<html class="no-js" lang="en-US">
	<head>
				<link rel="profile" href="http://gmpg.org/xfn/11" />
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		
		<title>May &laquo; 2009 &laquo; the evolving ultrasaurus</title>
		
				<meta name='robots' content='max-image-preview:large' />
<link rel='dns-prefetch' href='//s.w.org' />
<link rel="alternate" type="application/rss+xml" title="the evolving ultrasaurus &raquo; Feed" href="https://www.ultrasaurus.com/feed/" />
<link rel="alternate" type="application/rss+xml" title="the evolving ultrasaurus &raquo; Comments Feed" href="https://www.ultrasaurus.com/comments/feed/" />
		<script type="text/javascript">
			window._wpemojiSettings = {"baseUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.0.1\/72x72\/","ext":".png","svgUrl":"https:\/\/s.w.org\/images\/core\/emoji\/13.0.1\/svg\/","svgExt":".svg","source":{"concatemoji":"https:\/\/www.ultrasaurus.com\/wp-includes\/js\/wp-emoji-release.min.js?ver=5.7.1"}};
			!function(e,a,t){var n,r,o,i=a.createElement("canvas"),p=i.getContext&&i.getContext("2d");function s(e,t){var a=String.fromCharCode;p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,e),0,0);e=i.toDataURL();return p.clearRect(0,0,i.width,i.height),p.fillText(a.apply(this,t),0,0),e===i.toDataURL()}function c(e){var t=a.createElement("script");t.src=e,t.defer=t.type="text/javascript",a.getElementsByTagName("head")[0].appendChild(t)}for(o=Array("flag","emoji"),t.supports={everything:!0,everythingExceptFlag:!0},r=0;r<o.length;r++)t.supports[o[r]]=function(e){if(!p||!p.fillText)return!1;switch(p.textBaseline="top",p.font="600 32px Arial",e){case"flag":return s([127987,65039,8205,9895,65039],[127987,65039,8203,9895,65039])?!1:!s([55356,56826,55356,56819],[55356,56826,8203,55356,56819])&&!s([55356,57332,56128,56423,56128,56418,56128,56421,56128,56430,56128,56423,56128,56447],[55356,57332,8203,56128,56423,8203,56128,56418,8203,56128,56421,8203,56128,56430,8203,56128,56423,8203,56128,56447]);case"emoji":return!s([55357,56424,8205,55356,57212],[55357,56424,8203,55356,57212])}return!1}(o[r]),t.supports.everything=t.supports.everything&&t.supports[o[r]],"flag"!==o[r]&&(t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&t.supports[o[r]]);t.supports.everythingExceptFlag=t.supports.everythingExceptFlag&&!t.supports.flag,t.DOMReady=!1,t.readyCallback=function(){t.DOMReady=!0},t.supports.everything||(n=function(){t.readyCallback()},a.addEventListener?(a.addEventListener("DOMContentLoaded",n,!1),e.addEventListener("load",n,!1)):(e.attachEvent("onload",n),a.attachEvent("onreadystatechange",function(){"complete"===a.readyState&&t.readyCallback()})),(n=t.source||{}).concatemoji?c(n.concatemoji):n.wpemoji&&n.twemoji&&(c(n.twemoji),c(n.wpemoji)))}(window,document,window._wpemojiSettings);
		</script>
		<style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 .07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<link rel='stylesheet' id='mailchimpSF_main_css-css'  href='https://www.ultrasaurus.com/?mcsf_action=main_css&#038;ver=5.7.1' type='text/css' media='all' />
<!--[if IE]>
<link rel='stylesheet' id='mailchimpSF_ie_css-css'  href='https://www.ultrasaurus.com/wp-content/plugins/mailchimp/css/ie.css?ver=5.7.1' type='text/css' media='all' />
<![endif]-->
<link rel='stylesheet' id='wp-block-library-css'  href='https://www.ultrasaurus.com/wp-includes/css/dist/block-library/style.min.css?ver=5.7.1' type='text/css' media='all' />
<link rel='stylesheet' id='tw-bootstrap-css'  href='https://www.ultrasaurus.com/wp-content/themes/the-bootstrap/css/bootstrap.min.css?ver=2.0.3' type='text/css' media='all' />
<link rel='stylesheet' id='the-bootstrap-css'  href='https://www.ultrasaurus.com/wp-content/themes/the-bootstrap/style.min.css?ver=2.0.1' type='text/css' media='all' />
<style id='the-bootstrap-inline-css' type='text/css'>
body > .container{margin-top:68px;}@media(min-width: 980px){body > .container{margin-top:58px;}}
</style>
<script type='text/javascript' src='https://www.ultrasaurus.com/wp-includes/js/jquery/jquery.min.js?ver=3.5.1' id='jquery-core-js'></script>
<script type='text/javascript' src='https://www.ultrasaurus.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>
<script type='text/javascript' src='https://www.ultrasaurus.com/wp-content/plugins/google-analyticator/external-tracking.min.js?ver=6.5.4' id='ga-external-tracking-js'></script>
<link rel="https://api.w.org/" href="https://www.ultrasaurus.com/wp-json/" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://www.ultrasaurus.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://www.ultrasaurus.com/wp-includes/wlwmanifest.xml" /> 
<meta name="generator" content="WordPress 5.7.1" />
<style type="text/css">.recentcomments a{display:inline !important;padding:0 !important;margin:0 !important;}</style>	<style type="text/css">
				#branding hgroup {
			position: absolute !important;
			clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
			clip: rect(1px, 1px, 1px, 1px);
		}
			</style>
		<!--[if lt IE 9]>
		<script src="https://www.ultrasaurus.com/wp-content/themes/the-bootstrap/js/html5shiv.min.js" type="text/javascript"></script>
		<script src="https://www.ultrasaurus.com/wp-content/themes/the-bootstrap/js/respond.min.js" type="text/javascript"></script>
	<![endif]-->
	<!-- Google Analytics Tracking by Google Analyticator 6.5.4: http://www.videousermanuals.com/google-analyticator/ -->
<script type="text/javascript">
    var analyticsFileTypes = [''];
    var analyticsSnippet = 'enabled';
    var analyticsEventTracking = 'enabled';
</script>
<script type="text/javascript">
	var _gaq = _gaq || [];
  
	_gaq.push(['_setAccount', 'UA-4313619-1']);
    _gaq.push(['_addDevId', 'i9k95']); // Google Analyticator App ID with Google
    _gaq.push(['_gat._anonymizeIp']);
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		                ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	})();
</script>
		<style type="text/css" id="wp-custom-css">
			code {
	color: #70a
}

p {
	color: #333
}

blockquote p {
	font-size: 14px;
	font-weight: normal;
	padding-top: 6px;
	padding-bottom: 6px;
	padding-left: 10px;
	padding-right: 60px;
	line-height: 1.2;
}		</style>
			</head>
	
	<body class="archive date content-sidebar">
		<div class="container">
			<div id="page" class="hfeed row">
								<header id="branding" role="banner" class="span12">
										<hgroup>
						<h1 id="site-title">
							<a href="https://www.ultrasaurus.com/" title="the evolving ultrasaurus" rel="home">
								<span>the evolving ultrasaurus</span>
							</a>
						</h1>
						<h2 id="site-description">Sarah Allen&#039;s reflections on internet software and other topics</h2>
					</hgroup>
					
					
					<nav id="access" role="navigation">
						<h3 class="assistive-text">Main menu</h3>
						<div class="skip-link"><a class="assistive-text" href="#content" title="Skip to primary content">Skip to primary content</a></div>
						<div class="skip-link"><a class="assistive-text" href="#secondary" title="Skip to secondary content">Skip to secondary content</a></div>
												<div class="navbar navbar-fixed-top navbar-inverse">
							<div class="navbar-inner">
								<div class="container">
									<!-- .btn-navbar is used as the toggle for collapsed navbar content -->
									<a class="btn btn-navbar" data-toggle="collapse" data-target=".nav-collapse">
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
										<span class="icon-bar"></span>
									</a>
																		<span class="brand">the evolving ultrasaurus</span>
																		<div class="nav-collapse">
										<div class="menu-primary-container"><ul id="menu-primary" class="nav"><li id="menu-item-4272" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4272"><a href="https://www.ultrasaurus.com/about/">About</a></li>
<li id="menu-item-6605" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6605"><a href="https://www.ultrasaurus.com/speaking/">Speaking</a></li>
<li id="menu-item-6366" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-6366"><a href="https://www.ultrasaurus.com/code/">Code</a></li>
<li id="menu-item-4269" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4269"><a href="https://www.ultrasaurus.com/archives/">Archives</a></li>
<li id="menu-item-4759" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4759"><a href="https://www.ultrasaurus.com/contact/">Contact</a></li>
<li id="menu-item-4697" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4697"><a href="https://www.ultrasaurus.com/ultrasaurus/">What is an ultrasaurus?</a></li>
</ul></div>	<form id="searchform" class="navbar-search pull-right" method="get" action="https://www.ultrasaurus.com/">
						<label for="s" class="assistive-text hidden">Search</label>
						<input type="search" class="search-query" name="s" id="s" placeholder="Search" />
					</form>								    </div>
								</div>
							</div>
						</div>
											</nav><!-- #access -->
									</header><!-- #branding -->
<section id="primary" class="span8">

		<div id="content" role="main">
		
			<header class="page-header">
				<h1 class="page-title">
					Monthly Archives: <span>May 2009</span>				</h1>
			</header><!-- .page-header -->

			<article id="post-1425" class="post-1425 post type-post status-publish format-standard hentry category-general">
		
	<header class="page-header">
	<h1 class="entry-title"><a href="https://www.ultrasaurus.com/2009/05/teaching-kids-to-code-lesson-3/" title="Permalink to teaching kids to code: lesson #3" rel="bookmark">teaching kids to code: lesson #3</a></h1>		<div class="entry-meta">
			<span class="sep">Posted on </span><a href="https://www.ultrasaurus.com/2009/05/teaching-kids-to-code-lesson-3/" title="12:10 am" rel="bookmark"><time class="entry-date" datetime="2009-05-31T00:10:10-07:00" pubdate>May 31, 2009</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="https://www.ultrasaurus.com/author/sarah/" title="View all posts by sarah" rel="author">sarah</a></span></span>		<span class="sep"> | </span>
		<span class="comments-link">
			<a href="https://www.ultrasaurus.com/2009/05/teaching-kids-to-code-lesson-3/#comments"><strong>1</strong> Reply</a>		</span>
				</div><!-- .entry-meta -->
			</header><!-- .entry-header -->

		<div class="entry-content clearfix">
		<p>On the third (and final) class in my series of teaching Shoes and Ruby to 4th/5th graders, I decided to teach them to create a game.  I met with my two fifth grade helpers the afternoon before the day of the class.  I taught them how to create text and buttons and add a click method and showed them the Shoes manual, then let them experiment.  This was a good experience for them, but we ended the day with a more complicated program than I felt we could do with the class and it incorporated internet images which wouldn’t work in the classroom since Internet connectivity isn’t working right now.  I also ended up getting beyond my Shoes experience and had to ask help of the Shoes list.  After some help from some kind souls, this was the app the kids wrote:</p>
<pre>class OurApp &lt; Shoes
 url '/',  :index

 def index
   clear
   para "Which is correct?"
   stack {
     @correct = button "A bed of clams"
     @wrong1 =button "A coalition of cheetahs"
     @wrong2 =button "A gulp of swallows"
   }

   @correct.click {
     clear
     para "Correct"
     image "http://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/Balloons-aj.svg/550px-Balloons-aj.svg.png"
     button "Go Back" do
       visit "/"
     end

   }
   @wrong1.click {
     clear
     para "Wrong!"
     image "http://icanhascheezburger.files.wordpress.com/2007/05/cheez_doing_it_wrong.jpg"
     button "Go Back" do
       visit "/"
     end
   }
   @wrong2.click {
     clear
     para "Wrong, your consolation prize is..."
     image "http://farm2.static.flickr.com/1166/1230713908_083d7f6c53_o.jpg",
     :width =&gt; 500
     button "Go Back" do
       visit "/"
     end
   }

 end  # this is the end of the index method, which lays out the "/" page

end # this is the end of the subclass, which contains all the pages (well, one page)

Shoes.app</pre>
<p>I ended up teaching the class a much more simplified version. I think the initial session with two students worked well as a great approach to developing a lesson plan.  I improved it even more in my live coding session where I built up the app in stages (with compile and demo between each of the steps below):</p>
<ol>
<li> Shoes app with para &#8220;Which is correct?&#8221;</li>
<li> Add three buttons</li>
<li> Add stack around the buttons</li>
<li> Move the app into Game subclass, show that it has the same behavior</li>
<li> Add &#8216;/correct&#8217; url, button click action, and show_correct method</li>
<li> Add &#8216;/wrong&#8217; url, button click action, and show_correct method</li>
</ol>
<p>Then a student asked how to ask another question if after someone got the right answer. I just made another url and added a button with a visit action to the show_correct method.  </p>
<p>After the demonstration, I gave them a copy of the program for reference and told them <em>not</em> to copy it &#8212; they had to come up with their own questions and answers. Of course, then they typed in the whole program verbatim only substituting different editorial and ended up with dozens of syntax errors.  I wish I had instructed them to do it just like I had and build up their app in several steps, and I did tell them to do that, after they started, but at first they were somehow convinced that all they needed to do was type it in to complete the assignment. Another approach would be to get them to follow along with me and get the whole class to complete each step before moving on the the next; however, once they have their hands on the keyboard it is really hard to get their attention.  I also forgot to accidentally on-purpose type things wrong and demonstrate debugging.   In any case, the students were engaged and reported having fun, even if most did not finish the game.</p>
<p>Here&#8217;s my revised version of the app (improvements were to name the url and the method differently to make it clear that they were different things and to create just one &#8220;wrong&#8221; url and method to show reusing a method).</p>
<pre>
class Game &lt; Shoes
  url &#039;/&#039;,  :index
  url &#039;/correct&#039;,  :show_correct
  url &#039;/wrong&#039;,  :show_wrong

  def index
    clear
    para &quot;Which is correct?&quot;
    stack { 
      @correct = button &quot;A bed of clams&quot; do
        visit &quot;/correct&quot; 
      end 

      @wrong1 =button &quot;A coalition of cheetahs&quot; do
        visit &quot;/wrong&quot; 
      end

      @wrong2 =button &quot;A gulp of swallows&quot;  do
        visit &quot;/wrong&quot; 
      end
    }
  end  # this is the end of the index method, which lays out the &quot;/&quot; page
   
  def show_correct
    para &quot;Correct&quot;
  end  # of the &quot;correct&quot; method, which lays out the &quot;/correct&quot; page
    
  def show_wrong
    para &quot;Sorry, try again.&quot;
  end  # of the &quot;wrong&quot; method, which lays out the &quot;/wrong2&quot; page

end # this is the end of the &quot;Game&quot; subclass, which contains all pages

Shoes.app 

</pre>
	</div><!-- .entry-content -->
	
	<footer class="entry-meta">
		<span class="cat-links block">Posted in <a href="https://www.ultrasaurus.com/category/general/" rel="category tag">general</a>.</span>	</footer><!-- #entry-meta -->
	
	</article><!-- #post-1425 -->
<article id="post-1415" class="post-1415 post type-post status-publish format-standard hentry category-general">
		
	<header class="page-header">
	<h1 class="entry-title"><a href="https://www.ultrasaurus.com/2009/05/teaching-kids-to-code-lesson-2/" title="Permalink to teaching kids to code: lesson #2" rel="bookmark">teaching kids to code: lesson #2</a></h1>		<div class="entry-meta">
			<span class="sep">Posted on </span><a href="https://www.ultrasaurus.com/2009/05/teaching-kids-to-code-lesson-2/" title="6:24 am" rel="bookmark"><time class="entry-date" datetime="2009-05-29T06:24:46-07:00" pubdate>May 29, 2009</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="https://www.ultrasaurus.com/author/sarah/" title="View all posts by sarah" rel="author">sarah</a></span></span>		<span class="sep"> | </span>
		<span class="comments-link">
			<a href="https://www.ultrasaurus.com/2009/05/teaching-kids-to-code-lesson-2/#comments"><strong>2</strong> Replies</a>		</span>
				</div><!-- .entry-meta -->
			</header><!-- .entry-header -->

		<div class="entry-content clearfix">
		<p>Report from the field on my ongoing adventure teaching Ruby and <a href="http://shoooes.net/">Shoes</a> to a 4th/5th grade class of 28 students.  Here&#8217;s a summary of last week&#8217;s class:</p>
<p>I started with a demonstration of red, green, blue color: 3 flashlights with colored gels over the front, mixing red + green to get yellow , then add blue to get white.   I talked about how last week we made Shoes draw a colored rectangle on the screen.  The screen is made up of lots of little dots.  Does any one know what they are called?  one hand, correct answer: pixels.  Then I described how each pixel is a little light.  A pixel was a single light in the old days when all monitors were black and white.  Color screens, which are on most computers today, have pixels which each have three little lights.  When we make colors on the computer, we are making colors with light, which is quite different than making colors with paint.   Then we turned out all the lights and it got really fun.</p>
<p>I showed the flashlight with the blue gel covering the front and splashed a blue light on the ceiling.  Then I took the cover off and showed how the flashlight emits white light, but it comes comes out blue when I put the blue gel over it.  I asked them first what did they think happened that made a white light come out as a blue light when I put the blue plastic over the front of the flashlight?  (lots of theories of magical color transformation and after a few tries, I supplied to correct answer which is that white light contains all of the colors and when it hits the blue plastic every color except blue bounces off and blue is the only color that gets through.)  </p>
<p>When you mix red + green paint, what do you get?  (several tries before one of them got the right answer: brown)  I told them that light mixes differently than paint.  We call mixing light &#8220;additive&#8221; and when you you add the colors together they get brighter, as opposed to subtractive color with paint where mixing them makes the colors darker.  Then with the help of my two assistants we demonstrated color mixing with light  (See <a href="https://www.ultrasaurus.com/sarahblog/2009/05/on-understanding-rgb-color/">on understanding rgb color</a> for complete details.)  It was way cool.  </p>
<p>Then we moved on to the programming exercise which was about &#8220;computer generated art&#8221; making a loop with shapes that have random color, position and size.  Fewer setup problems this time. I had 3 extra computers set up and still ended short one and ended up once again abandoning my idea of a coding demo yet again since I gave the &#8220;teacher&#8221; computer to a pair of students.  I ended up writing code snippets on the board and spending more time with each group of 2-3 kids helping debug syntax errors and giving little impromptu explanations of what was going on.  </p>
<p>I&#8217;m torn between how much time to spend explaining concepts (since they are always antsy to get onto the computers) and how much to let them wing it (which then is frustrating to them because they don&#8217;t know the rules.  I would welcome suggestions from anyone on the right balance here.  I suspect different people just learn differently, but what&#8217;s the best way to manage that in a classroom full of kids?</p>
<p>At the end of the class I asked them to raise hands to answer: who thought it was fun?  (about 2/3s of the class) who thought it was frustrating? (maybe 40%) who thought it was fun even though it was frustrating (about 1/3).  I really don&#8217;t know what impact these classes are having, but I will forge ahead nonetheless.  The teacher seems to think the lessons are great and the kids report having more fun than it looks like they are having.  I do feel like about half the class is starting to &#8220;get it.&#8221;  Not sure if that is a lot or very few after 1.5 hours of programming experience.</p>
<p>I was still following my <a href="http://github.com/railsbridge/teachingkids/blob/de9dc5444e4aa69de656739510353abebf625ff4/md/Ruby_Programming_and_Shoes.md">original lesson plan</a>.  Even though most of the kids haven&#8217;t gotten through the final exercise, I think I&#8217;ll switch it up next week to add some interactivity.</p>
<p>The Shoes list and whytheluckystiff himself have been very responsive in answering my technical questions, and everyone on those lists and <a href="http://railsbridge.org/">Railsbridge</a> have provided encouragement that really makes a difference.  </p>
<p>Someone from the lists gave me the very awesome advice of training some of the kids to help with the lessons.  I did this after school the day before the class with two of the fifth graders and it made a huge difference.  They ran around and helped other kids debug their apps and I was freed up to spend more time on impromptu theory lessons and writing additional examples on the whiteboard.  It was a great experience for the two TAs, and made the whole class more fun for me and the other kids. </p>
	</div><!-- .entry-content -->
	
	<footer class="entry-meta">
		<span class="cat-links block">Posted in <a href="https://www.ultrasaurus.com/category/general/" rel="category tag">general</a>.</span>	</footer><!-- #entry-meta -->
	
	</article><!-- #post-1415 -->
<article id="post-1397" class="post-1397 post type-post status-publish format-standard hentry category-general">
		
	<header class="page-header">
	<h1 class="entry-title"><a href="https://www.ultrasaurus.com/2009/05/on-understanding-rgb-color/" title="Permalink to on understanding rgb color" rel="bookmark">on understanding rgb color</a></h1>		<div class="entry-meta">
			<span class="sep">Posted on </span><a href="https://www.ultrasaurus.com/2009/05/on-understanding-rgb-color/" title="4:34 am" rel="bookmark"><time class="entry-date" datetime="2009-05-29T04:34:57-07:00" pubdate>May 29, 2009</time></a><span class="by-author"> <span class="sep"> by </span> <span class="author vcard"><a class="url fn n" href="https://www.ultrasaurus.com/author/sarah/" title="View all posts by sarah" rel="author">sarah</a></span></span>		<span class="sep"> | </span>
		<span class="comments-link">
			<a href="https://www.ultrasaurus.com/2009/05/on-understanding-rgb-color/#comments"><strong>4</strong> Replies</a>		</span>
				</div><!-- .entry-meta -->
			</header><!-- .entry-header -->

		<div class="entry-content clearfix">
		<p>Last week I wanted to teach the kids how to create a randomly colored shape, which (in <a href="http://shoooes.net/">Shoes</a>) would use a fill color like this:</p>
<pre>fill rgb(0..255.rand, 0..255.rand, 0..255.rand)</pre>
<p>I figured they could easily grasp the random number syntax, but creating colors as a mix of red, green, and blue? They are used to primary colors of red, yellow and blue.  It is totally weird that green and red make yellow, and downright amazing that red, green and blue make white.   You have to be an old school graphics geek like me or someone who does stage lighting to have gained any intuition about how these kinds of colors mix.  Most folks, elementary school students included, only have experience mixing colors with paint or dye, where red and green make brown.  That is called &#8220;subtractive&#8221; color mixing.  When we mix light (and pixel values), it is called additive color mixing.</p>
<p>To explain this, I put together a neat physical demonstration with the help of my friends, Paul &amp; Glen, from <a href="http://www.emotionstudios.com/">Emotion Studios</a>, and Janet from <a href="http://www.jcxex.com/">JCX Expendibles</a>. (As a side note, I must say that if you live in San Francisco, enjoy this article and periodically need random materials for your crazy projects you must visit JCX on Harrison Street.  It is awesome.)</p>
<p>My goal was to create three spots of color (red, green, and blue), then mix them to create white where they overlap.  This looks much cooler in real life&#8230;</p>
<p><img src="http://img.skitch.com/20090529-k93w1f1555hkuxqka6ym23ejkk.jpg" alt="" /> <img src="http://img.skitch.com/20090529-mx5w27j1fsyf6ke6spnkngp39f.jpg" alt="" /></p>
<p>I ended up finding it could work using three Mini Maglight flashlights (about $14 each, which adds up but I figured I could use them for camping later).  The front of each light is covered by a gel.  I used the following colors from Lee Filters (the big sheets are $6 each, but I bet if you called them up they would send you a sampler).  I used these colors:</p>
<ul>
<li>Primary Green 139</li>
<li>Primary Red 106</li>
<li>Just Blue 079</li>
</ul>
<p><img src="http://img.skitch.com/20090529-fg6ybuiiaghip6wtfdpdeabn5e.jpg" /></p>
<p>I highly recommend this demonstration when teaching anyone about rgb color.   This would even make a fun early physics experiment for first graders.</p>
	</div><!-- .entry-content -->
	
	<footer class="entry-meta">
		<span class="cat-links block">Posted in <a href="https://www.ultrasaurus.com/category/general/" rel="category tag">general</a>.</span>	</footer><!-- #entry-meta -->
	
	</article><!-- #post-1397 -->
<nav class="pagination pagination-centered clearfix"><ul class='page-numbers'>
	<li><span aria-current="page" class="page-numbers current">1</span></li>
	<li><a class="page-numbers" href="https://www.ultrasaurus.com/2009/05/page/2/">2</a></li>
	<li><a class="page-numbers" href="https://www.ultrasaurus.com/2009/05/page/3/">3</a></li>
	<li><a class="page-numbers" href="https://www.ultrasaurus.com/2009/05/page/4/">4</a></li>
	<li><a class="next page-numbers" href="https://www.ultrasaurus.com/2009/05/page/2/">Next &raquo;</a></li>
</ul>
</nav>	</div><!-- #content -->
	</section><!-- #primary -->

<section id="secondary" class="widget-area span4" role="complementary">
	<aside id="recent-comments-2" class="widget well widget_recent_comments"><h2 class="widget-title">Recent Comments</h2><ul id="recentcomments"><li class="recentcomments"><span class="comment-author-link"><a href='https://da.biomarmicrobialtechnologies.com/' rel='external nofollow ugc' class='url'>Silje Randrup</a></span> on <a href="https://www.ultrasaurus.com/2003/08/the-history-of-the-letter-c/#comment-22370">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link"><a href='http://x--x.us' rel='external nofollow ugc' class='url'>Paula</a></span> on <a href="https://www.ultrasaurus.com/2003/08/the-history-of-the-letter-c/#comment-19549">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link"><a href='http://x--x.us' rel='external nofollow ugc' class='url'>Michelle</a></span> on <a href="https://www.ultrasaurus.com/2003/08/the-history-of-the-letter-c/#comment-19399">the history of the letter &#8216;C&#8217;</a></li><li class="recentcomments"><span class="comment-author-link">Craig</span> on <a href="https://www.ultrasaurus.com/2019/10/http-3-starter-notes-rust-quiche/#comment-18963">http/3 starter notes, rust quiche</a></li><li class="recentcomments"><span class="comment-author-link">Kornel</span> on <a href="https://www.ultrasaurus.com/2019/10/rust-whats-a-tuple-variant/#comment-18539">[rust] what&#8217;s a tuple variant?</a></li><li class="recentcomments"><span class="comment-author-link"><a href='https://apromixately.github.io' rel='external nofollow ugc' class='url'>Simon</a></span> on <a href="https://www.ultrasaurus.com/2019/06/essential-rust-tools/#comment-13007">essential rust tools</a></li><li class="recentcomments"><span class="comment-author-link"><a href='https://balsamiq.com/company/' rel='external nofollow ugc' class='url'>balsamiqVal</a></span> on <a href="https://www.ultrasaurus.com/2018/10/the-path-is-made-by-walking/#comment-9108">the path is made by walking</a></li><li class="recentcomments"><span class="comment-author-link">Jennifer</span> on <a href="https://www.ultrasaurus.com/2018/07/optimize-for-results-not-optics/#comment-8193">optimize for results, not optics</a></li><li class="recentcomments"><span class="comment-author-link">Bernardo Gomes</span> on <a href="https://www.ultrasaurus.com/2016/06/sailsjs-testing-patterns-trunctate-database/#comment-8058">sailsjs testing: how to truncate the database</a></li><li class="recentcomments"><span class="comment-author-link">Bernardo Gomes</span> on <a href="https://www.ultrasaurus.com/2016/06/sailsjs-testing-patterns-trunctate-database/#comment-8057">sailsjs testing: how to truncate the database</a></li></ul></aside>
		<aside id="recent-posts-2" class="widget well widget_recent_entries">
		<h2 class="widget-title">Recent Posts</h2>
		<ul>
											<li>
					<a href="https://www.ultrasaurus.com/2020/07/hope-is-not-a-strategy/">hope is not a strategy</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2020/01/duck-typing-in-rust-trait-vs-type/">duck typing in rust: trait vs type</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2020/01/writing-c-library-in-rust/">writing c library in rust</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2020/01/rust-on-heroku-with-hyper-http/">rust on heroku with hyper http</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2020/01/rust-on-heroku-with-async-await-and-tokio/">rust on heroku with async/await and tokio</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/12/patterns-of-actions-are-a-making/">patterns of actions are a making</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/12/memory-safety-necessary-not-sufficient/">memory safety: necessary, not sufficient</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/12/brief-history-of-rtmp-future-thoughts/">brief history of rtmp + future thoughts</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/12/rust-2020/">rust 2020: fulfill the promise</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/11/nut-loaf-with-red-pepper-sauce/">nut loaf with red pepper sauce</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/10/http-3-starter-notes-rust-quiche/">http/3 starter notes, rust quiche</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/10/rust-whats-a-tuple-variant/">[rust] what&#8217;s a tuple variant?</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/08/graph-in-rust-using-petgraph/">graph in rust using petgraph</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/06/debugging-openssl-shared-libary/">debugging openssl shared libary</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/06/digital-identity-how-to-verify-trust/">digital identity: how to verify trust?</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/06/essential-rust-tools/">essential rust tools</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/05/learning-scala-with-graphics/">learning scala with graphics</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/04/when-reality-is-broken-change-the-rules/">when reality is broken, change the rules</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/04/subverting-saurons-business-model/">subverting Sauron&#8217;s business model</a>
									</li>
											<li>
					<a href="https://www.ultrasaurus.com/2019/02/firebase-auth-migration-from-rails-and-devise/">firebase auth migration from rails/devise</a>
									</li>
					</ul>

		</aside></section><!-- #secondary .widget-area -->
				<footer id="colophon" role="contentinfo" class="span12">
										<div id="page-footer" class="well clearfix">
						<span class="credits alignleft">&copy; 2021 <a href="https://www.ultrasaurus.com/">the evolving ultrasaurus</a>, all rights reserved.</span>						<div id="site-generator">
							<a	href="http://wordpress.org/"
								title="Semantic Personal Publishing Platform"
								target="_blank"
								rel="generator">Proudly powered by WordPress</a>
						</div>
					</div><!-- #page-footer .well .clearfix -->
									</footer><!-- #colophon -->
							</div><!-- #page -->
		</div><!-- .container -->
	<!-- 42 queries. 0.390 seconds. -->
	<script type='text/javascript' src='https://www.ultrasaurus.com/wp-content/themes/the-bootstrap/js/bootstrap.min.js?ver=2.0.3' id='tw-bootstrap-js'></script>
<script type='text/javascript' src='https://www.ultrasaurus.com/wp-content/themes/the-bootstrap/js/the-bootstrap.min.js?ver=2.0.1' id='the-bootstrap-js'></script>
<script type='text/javascript' src='https://www.ultrasaurus.com/wp-includes/js/wp-embed.min.js?ver=5.7.1' id='wp-embed-js'></script>
	</body>
</html>

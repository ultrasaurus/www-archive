<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: test-driven teaching	</title>
	<atom:link href="/2009/08/test-driven-teaching/feed/" rel="self" type="application/rss+xml" />
	<link>/2009/08/test-driven-teaching/</link>
	<description>Sarah Allen&#039;s reflections on internet software and other topics</description>
	<lastBuildDate>Wed, 24 Mar 2010 19:38:56 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.1</generator>
	<item>
		<title>
		By: Hugo Baraúna		</title>
		<link>/2009/08/test-driven-teaching/#comment-599</link>

		<dc:creator><![CDATA[Hugo Baraúna]]></dc:creator>
		<pubDate>Wed, 24 Mar 2010 19:38:56 +0000</pubDate>
		<guid isPermaLink="false">/?p=1963#comment-599</guid>

					<description><![CDATA[Interesting post. Do you already have any conclusions about how to approach teaching ruby/rails and TDD?]]></description>
			<content:encoded><![CDATA[<p>Interesting post. Do you already have any conclusions about how to approach teaching ruby/rails and TDD?</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Test-Driven Teaching! &#171; Find Time for the Karussell		</title>
		<link>/2009/08/test-driven-teaching/#comment-598</link>

		<dc:creator><![CDATA[Test-Driven Teaching! &#171; Find Time for the Karussell]]></dc:creator>
		<pubDate>Thu, 31 Dec 2009 15:45:39 +0000</pubDate>
		<guid isPermaLink="false">/?p=1963#comment-598</guid>

					<description><![CDATA[[...] Go to comments    The idea of test-driven development (TDD) is not a new one and also the idea of test-driven teaching is not new (see also at springer or [...] ]]></description>
			<content:encoded><![CDATA[<p>[&#8230;] Go to comments    The idea of test-driven development (TDD) is not a new one and also the idea of test-driven teaching is not new (see also at springer or [&#8230;] </p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: learning through testing &#124; the evolving ultrasaurus		</title>
		<link>/2009/08/test-driven-teaching/#comment-597</link>

		<dc:creator><![CDATA[learning through testing &#124; the evolving ultrasaurus]]></dc:creator>
		<pubDate>Sat, 05 Sep 2009 17:03:57 +0000</pubDate>
		<guid isPermaLink="false">/?p=1963#comment-597</guid>

					<description><![CDATA[[...] as a response to my last post about test-driven teaching, Seth Walker told me about Ruby Koans, which are a delightful test-driven meditation on Ruby [...] ]]></description>
			<content:encoded><![CDATA[<p>[&#8230;] as a response to my last post about test-driven teaching, Seth Walker told me about Ruby Koans, which are a delightful test-driven meditation on Ruby [&#8230;] </p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: ruby unit test frameworks &#124; the evolving ultrasaurus		</title>
		<link>/2009/08/test-driven-teaching/#comment-596</link>

		<dc:creator><![CDATA[ruby unit test frameworks &#124; the evolving ultrasaurus]]></dc:creator>
		<pubDate>Mon, 31 Aug 2009 14:59:49 +0000</pubDate>
		<guid isPermaLink="false">/?p=1963#comment-596</guid>

					<description><![CDATA[[...] the evolving ultrasaurus Sarah Allen&#8217;s reflections on internet software and other topics   Skip to content HomeCodeArchivesAbout       &#171; test-driven teaching [...] ]]></description>
			<content:encoded><![CDATA[<p>[&#8230;] the evolving ultrasaurus Sarah Allen&#8217;s reflections on internet software and other topics   Skip to content HomeCodeArchivesAbout       &laquo; test-driven teaching [&#8230;] </p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Jamie Flournoy		</title>
		<link>/2009/08/test-driven-teaching/#comment-595</link>

		<dc:creator><![CDATA[Jamie Flournoy]]></dc:creator>
		<pubDate>Mon, 24 Aug 2009 17:33:25 +0000</pubDate>
		<guid isPermaLink="false">/?p=1963#comment-595</guid>

					<description><![CDATA[IMO it&#039;s because of the output you get when the assertion fails.

a = 1
b = 2
assert a == b # failure message says &#039;expected true but was false&#039;
assert_equal a, b # failure message says &#039;expected 1 but was 2&#039;

The second failure message is more informative.]]></description>
			<content:encoded><![CDATA[<p>IMO it&#8217;s because of the output you get when the assertion fails.</p>
<p>a = 1<br />
b = 2<br />
assert a == b # failure message says &#8216;expected true but was false&#8217;<br />
assert_equal a, b # failure message says &#8216;expected 1 but was 2&#8217;</p>
<p>The second failure message is more informative.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Sarah		</title>
		<link>/2009/08/test-driven-teaching/#comment-594</link>

		<dc:creator><![CDATA[Sarah]]></dc:creator>
		<pubDate>Mon, 24 Aug 2009 17:10:00 +0000</pubDate>
		<guid isPermaLink="false">/?p=1963#comment-594</guid>

					<description><![CDATA[The &lt;a href=&quot;http://github.com/edgecase/ruby_koans/tree/master&quot; rel=&quot;nofollow&quot;&gt;Ruby Koans&lt;/a&gt; are awesome.  I went through the first two and plan to set aside some time to meditate on them every day.  It does seem like such exercises would benefit from guidance from a Ruby Master.  For example,  in the following two koans:
&lt;pre&gt;
  # To understand reality, we must compare our expectations against
  # reality.
  def test_assert_equality
    expected_value = 2
    actual_value = 1 + 1

    assert expected_value == actual_value
  end

  # Some ways of asserting equality are better than others.
  def test_a_better_way_of_asserting_equality
    expected_value = 2
    actual_value = 1 + 1

    assert_equal expected_value, actual_value
end
&lt;/pre&gt;

Why is it that assert_equal expected, actual is better than assert expected == actual?  It seems that the latter is quite legible and arguably more readable.]]></description>
			<content:encoded><![CDATA[<p>The <a href="http://github.com/edgecase/ruby_koans/tree/master" rel="nofollow">Ruby Koans</a> are awesome.  I went through the first two and plan to set aside some time to meditate on them every day.  It does seem like such exercises would benefit from guidance from a Ruby Master.  For example,  in the following two koans:</p>
<pre>
  # To understand reality, we must compare our expectations against
  # reality.
  def test_assert_equality
    expected_value = 2
    actual_value = 1 + 1

    assert expected_value == actual_value
  end

  # Some ways of asserting equality are better than others.
  def test_a_better_way_of_asserting_equality
    expected_value = 2
    actual_value = 1 + 1

    assert_equal expected_value, actual_value
end
</pre>
<p>Why is it that assert_equal expected, actual is better than assert expected == actual?  It seems that the latter is quite legible and arguably more readable.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: seth		</title>
		<link>/2009/08/test-driven-teaching/#comment-593</link>

		<dc:creator><![CDATA[seth]]></dc:creator>
		<pubDate>Mon, 24 Aug 2009 13:03:52 +0000</pubDate>
		<guid isPermaLink="false">/?p=1963#comment-593</guid>

					<description><![CDATA[Hi Sarah,

The path to enlightenment (for ruby syntax at least): http://github.com/edgecase/ruby_koans/tree/master]]></description>
			<content:encoded><![CDATA[<p>Hi Sarah,</p>
<p>The path to enlightenment (for ruby syntax at least): <a href="http://github.com/edgecase/ruby_koans/tree/master" rel="nofollow ugc">http://github.com/edgecase/ruby_koans/tree/master</a></p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Yehuda Katz		</title>
		<link>/2009/08/test-driven-teaching/#comment-592</link>

		<dc:creator><![CDATA[Yehuda Katz]]></dc:creator>
		<pubDate>Mon, 24 Aug 2009 05:51:51 +0000</pubDate>
		<guid isPermaLink="false">/?p=1963#comment-592</guid>

					<description><![CDATA[Matt Aimonetti and I taught a course on Merb in Phoenix earlier this year (January) using tests for teaching. We would introduce each new section with some tests, and ask the students to try to make them pass. It was extremely successful, because the students weren&#039;t just trying our some hypothetical new technique, they had red/green to determine whether they were successful.]]></description>
			<content:encoded><![CDATA[<p>Matt Aimonetti and I taught a course on Merb in Phoenix earlier this year (January) using tests for teaching. We would introduce each new section with some tests, and ask the students to try to make them pass. It was extremely successful, because the students weren&#8217;t just trying our some hypothetical new technique, they had red/green to determine whether they were successful.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Revenge of the Link Roundup (August 17th, 2009) &#124; Geek Feminism Blog		</title>
		<link>/2009/08/test-driven-teaching/#comment-591</link>

		<dc:creator><![CDATA[Revenge of the Link Roundup (August 17th, 2009) &#124; Geek Feminism Blog]]></dc:creator>
		<pubDate>Mon, 17 Aug 2009 21:23:36 +0000</pubDate>
		<guid isPermaLink="false">/?p=1963#comment-591</guid>

					<description><![CDATA[[...] Sarah Mei, who teaches Ruby on Rails to women, posts about Test Driven Teaching [...] ]]></description>
			<content:encoded><![CDATA[<p>[&#8230;] Sarah Mei, who teaches Ruby on Rails to women, posts about Test Driven Teaching [&#8230;] </p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>

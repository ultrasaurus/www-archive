<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>general &#8211; the evolving ultrasaurus</title>
	<atom:link href="https://www.ultrasaurus.com/category/general/feed/" rel="self" type="application/rss+xml" />
	<link>https://www.ultrasaurus.com</link>
	<description>Sarah Allen&#039;s reflections on internet software and other topics</description>
	<lastBuildDate>Tue, 24 Dec 2019 20:27:17 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.1</generator>
	<item>
		<title>patterns of actions are a making</title>
		<link>https://www.ultrasaurus.com/2019/12/patterns-of-actions-are-a-making/</link>
					<comments>https://www.ultrasaurus.com/2019/12/patterns-of-actions-are-a-making/#respond</comments>
		
		<dc:creator><![CDATA[sarah]]></dc:creator>
		<pubDate>Tue, 24 Dec 2019 20:27:17 +0000</pubDate>
				<category><![CDATA[general]]></category>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=6961</guid>

					<description><![CDATA[&#8220;There are things that you don’t even realize that you can do.&#8221; In a recent podcast, B. Mure tells about graphic facilitation: I didn’t really know it was a skill to have: to listen to people and very immediately draw something related to what they were talking about and present their ideas in a visual&#8230; <a href="https://www.ultrasaurus.com/2019/12/patterns-of-actions-are-a-making/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>&#8220;There are things that you don’t even realize that you can do.&#8221; In a <a href="http://makeitthentelleverybody.com/2019/12/b-mure/">recent podcast</a>, B. Mure tells about <em>graphic facilitation</em>:</p>
<blockquote><p>
  I didn’t really know it was a skill to have: to listen to people and very immediately draw something related to what they were talking about and present their ideas in a visual way.
</p></blockquote>
<p>Sometimes this is also called making &#8220;sketch notes.&#8221;  He goes on to talk about a general phenomenon where you discover that you can do a thing that you never thought was a thing:</p>
<blockquote><p>
  There are so many things that, if you are not given the opportunity, if somebody doesn’t see that within you, or thinks maybe you should just come along and try this thing that I’ve organized, there are things that you don’t even realize that you can do.
</p></blockquote>
<p>I think there are two parts of this that are transformational, that I&#8217;ve experienced myself and occasionally been able to spark in others.</p>
<ol>
<li><strong>Naming a pattern of actions</strong> or behavior: this is an act of creating that is rare and powerful. Discovering something is a skill that one can be good at and apply with intention is aided by that skill having a name.</li>
<li><strong>Recognizing the spark</strong> within someone else: seeing a capability, especially latent potential, within someone and naming it, inviting that person to experiment with a new skill, encouraging creative action in the world.</li>
</ol>
<p>There should be a word for the making of words that is more than coining a term, where the naming of a thing helps people do (or not do) whatever that is.</p>
<p>I&#8217;ve thought a lot about how the term <em>mansplaining</em> has helped a generation notice and often modify behavior. I learned about restorative justice as a framework for transforming guilt into responsibility. I remember when, at an early RailsBridge workshop, I applied lessons from my kid&#8217;s preschool to the challenge of how to teach without grabbing the keyboard (&#8220;Use your words&#8221;).</p>
<p>I love the idea of a word for a skill providing a path to developing that skill, connecting to a community, and finding paid work.</p>
<hr />
<p>The <a href="http://makeitthentelleverybody.com/2019/12/b-mure/">whole podcast</a> with Dan Berry and B. Mure is worth listening to for any creative folk or if you enjoy comics or visual storytelling and want a glimpse of that world.</p>
<p><img src="https://www.ultrasaurus.com/wp-content/uploads/2019/12/bmuredraws-dot-com.png&quot;" alt="Image from website of B. Mure: the artist in sunshine looking skyward with arms spread wide upward in front of mountains and blue sky" /><br />
<a href="bmuredraws.com">https://bmuredraws.com/</a></p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.ultrasaurus.com/2019/12/patterns-of-actions-are-a-making/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>rust 2020: fulfill the promise</title>
		<link>https://www.ultrasaurus.com/2019/12/rust-2020/</link>
					<comments>https://www.ultrasaurus.com/2019/12/rust-2020/#respond</comments>
		
		<dc:creator><![CDATA[sarah]]></dc:creator>
		<pubDate>Sun, 01 Dec 2019 09:37:16 +0000</pubDate>
				<category><![CDATA[general]]></category>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=6885</guid>

					<description><![CDATA[As a newcomer to Rust, my suggestion for 2020 theme is to fulfill the promise of &#8220;empowering everyone to build reliable and efficient software&#8221; by finishing what&#8217;s started (rather than adding new features), continuing the focus on good docs and good tools, and expanding to develop a coherent ecosystem. Rust empowers you to reach farther,&#8230; <a href="https://www.ultrasaurus.com/2019/12/rust-2020/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>As a newcomer to Rust, my suggestion for 2020 theme is to fulfill the promise of &#8220;empowering everyone to build reliable and efficient software&#8221; by finishing what&#8217;s started (rather than adding new features), continuing the focus on good docs and good tools, and expanding to develop a coherent ecosystem.</p>
<blockquote><p>
  Rust empowers you to reach farther, to program with confidence in a wider variety of domains than you did before. &#8212; <a href="https://doc.rust-lang.org/book/foreword.html">Rust Language Book forward</a>
</p></blockquote>
<h2>Overview themes</h2>
<p>2020 roadmap: finish what&#8217;s started, fulfill the promise</p>
<p>2021 edition: scalability &#8211; Can newcomers to Rust create a real-world, complex system without recreating basic components or contributing to the language itself?</p>
<ul>
<li>more scalable systems written in Rust</li>
<li>experienced C/C++ engineers can easily transition to Rust</li>
<li>more scalable ecosystem
<ul>
<li>commonly needed libraries are available</li>
<li>new engineers can easily become contributors</li>
</ul>
</li>
</ul>
<h2>Keep doing</h2>
<ul>
<li>Tooling is great! rustup toolchain, feature flags, online/offline docs make it easy to experiment with new Rust/crate features, even as a relatively new Rust programmer. </li>
<li>Transparency (like this call for blog posts, RFC process including roadmap)</li>
<li>Focus on good docs &amp; good error reporting is incredibly helpful. Keep iterating on this!</li>
</ul>
<h2>Feature requests</h2>
<ul>
<li>safety beyond memory safety and concurrency. For example: URL parsing should <strike>be in std</strike> have a shared implementation that supports common use cases &#8212; it&#8217;s risky for Internet apps to not have a stable, well vetted URL parser, why are there three? (That&#8217;s a rhetorical question. I know why, but don&#8217;t think there need to be.  See <a href="https://twitter.com/NikolaiVazquez/status/1149063581226295297">twitter discussion</a> [Update 12/16/2019: I&#8217;d like to see convergence in URL parsers (or perhaps a shared common library) the way the community seems to be converging around <a href="https://serde.rs/">serde</a>.]</li>
<li>async all the things! I think this is already the plan. I look forward to async I/O (network and files) to be supported in the std library. I appreciate the thoughtfulness about safety, factoring out useful core concepts (like Pin/Task), and ensuring compatibility with Futures and Tokio crates. Consider other async use cases: GPU, OpenGL</li>
<li>lifetimes visualization would accelerate learning curve on resolving compiler errors, good ideas in <a href="https://twitter.com/ultrasaurus/status/1183136267208232961">this thread</a></li>
</ul>
<h2>Slow down to speed up</h2>
<p>In my experience writing documentation often uncovers design issues and bugs. <a href="https://github.com/rust-lang/rfcs/blob/master/0000-template.md">RFC template</a> has a <strong>guide-level explanation</strong> section, which is great, and taking that one step further to writing baseline docs before declaring a feature &#8220;stable&#8221; would create positive pressure for community focus. Some ideas for process improvements&#8230;</p>
<ul>
<li>A crisp &#8220;definition of done&#8221; could help focus the community. Consider adding requirements to releasing &#8216;stable&#8217;
<ul>
<li>RFC updated to reflect what was completed and is still open</li>
<li>stable reference docs are complete or include link to RFC</li>
</ul>
</li>
<li>Consider WIP limits: <a href="https://leankit.com/learn/kanban/how-to-use-wip-limits-to-increase-speed/">how limiting work-in-progress increases speed</a></li>
</ul>
<p>It seems in keep with Rust values to create a strong incentive to support contributing writers who are working to take the feature over-the-line and encourage new engineers to contribute. It is easier for new contributors to work with APIs that are documented or clearly dive into a work-in-progress, aware that they are contributing to finishing something.</p>
<h2>Other Improvements</h2>
<ul>
<li>Documentation shouldn&#8217;t require deep knowledge of Rust (example: https://stackoverflow.com/questions/56402818/how-do-i-interpret-the-signature-of-read-until-and-what-is-asyncread-bufread-i/56403568#56403568)</li>
</ul>
<h2>Background</h2>
<p>The reason I&#8217;m learning Rust is that I am experienced engineer with a need to write performant, low-profile client/server code. I&#8217;m excited about the idea of writing one body of code that can (potentially) work across native desktop, mobile, servers&#8230; and with cross-compilation to WebAssembly (Wasm), also browsers and edge servers.</p>
<p>Arguably, C works for all my needs, it even cross-compiles to Wasm.  I want to like Rust better. I do in theory, but in practice, it&#8217;s got a lot of sharp edges (which is saying a lot when comparing it to C).</p>
<hr />
<p>Updated Dec 2019 to modify the introduction, so excerpt is useful (if <a href="https://readrust.net/rust-2020">rust2020 summary post</a> is ever updated.  Original text below:</p>
<p>answering the Rust programming language <a href="https://blog.rust-lang.org/2019/10/29/A-call-for-blogs-2020.html">call for blog posts</a> as input to the 2020 roadmap</p>
<p><em>Caveat: I am new to Rust. There&#8217;s probably stuff I don&#8217;t even know about that is more important than anything here. This is just me doing my part to give back to the awesome Rust community.</em></p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.ultrasaurus.com/2019/12/rust-2020/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>nut loaf with red pepper sauce</title>
		<link>https://www.ultrasaurus.com/2019/11/nut-loaf-with-red-pepper-sauce/</link>
					<comments>https://www.ultrasaurus.com/2019/11/nut-loaf-with-red-pepper-sauce/#respond</comments>
		
		<dc:creator><![CDATA[sarah]]></dc:creator>
		<pubDate>Sat, 30 Nov 2019 02:27:36 +0000</pubDate>
				<category><![CDATA[general]]></category>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=6887</guid>

					<description><![CDATA[Slightly modified vegan nut loaf to avoid tomatoes. Nut loaf recipe can be also be used to make burger patties, pan fried or baked, or can be stuffed into puff pastry for a puff pastry loaf or small hand pies. Requires food processor to grind up various ingredients. Ingredients Nut loaf 1 1/4 cups (180&#8230; <a href="https://www.ultrasaurus.com/2019/11/nut-loaf-with-red-pepper-sauce/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>Slightly modified <a href="https://www.veganricha.com/2018/12/vegan-meatloaf-nut-loaf.html">vegan nut loaf</a> to avoid tomatoes.  Nut loaf recipe can be also be used to make burger patties, pan fried or baked, or can be stuffed into puff pastry for a puff pastry loaf or small hand pies.</p>
<p>Requires food processor to grind up various ingredients.</p>
<h2>Ingredients</h2>
<h3>Nut loaf</h3>
<p>1 1/4 cups (180 g) nuts (raw or roasted cashews, raw walnuts, raw pecans)<br />
1/4 cup (33.5 g) sunflower seeds (or more cashews)<br />
2 tsp oil (or 1/4 cup broth)<br />
1 cup (160 g) chopped onion<br />
4 cloves of garlic chopped<br />
1 cup (96 g) chopped mushrooms (shitake or hen of the wood)<br />
1 cup (140 g) cubed butternut squash<br />
1 tsp each thyme, sage, rosemary, oregano<br />
1 tsp smoked paprika<br />
1/2 tsp black pepper<br />
1/4 tsp each cinnamon and nutmeg<br />
1/2 to 3/4 tsp salt<br />
2 tbsp soy sauce or tamari<br />
2 eggs (or 2 flax eggs for vegan)<br />
2/3 cup  (81 g) breadcrumbs</p>
<h3>Sauce</h3>
<p>1/4 cup roasted red peppers<br />
1.5 tbsp soy sauce/tamari (or use 1/4 tsp salt + 1 tbsp broth for soyfree)<br />
2 tbsp maple syrup<br />
2 tsp apple cider vinegar<br />
1/2 tsp (0.5 tsp) garlic powder</p>
<h2>Instructions</h2>
<p>Preheat the oven to 350 degrees F.</p>
<ol>
<li>Toast the raw nuts and sunflower seeds in the oven at 325 deg F (160 C) for 5 mins.   </li>
<li>Food processor: pulse nuts and seeds to a somewhat coarse meal</li>
<li>In skillet over medium heat for 2 mins
<ul>
<li>oil or broth. </li>
<li>onion, garlic and a pinch of salt </li>
</ul>
</li>
<li>Add mushrooms and a pinch of salt and cook until some golden edges. (3-4 mins)</li>
<li>Add butternut squash and mix in. Add a splash of water, cover and cook until the squash is tender. </li>
<li>Mash and transfer to a bowl. </li>
<li>Add in the spices, salt and mix in. </li>
<li>Add the chopped nuts and seeds, soy sauce, eggs, breadcrumbs and mix well. </li>
<li>Taste and adjust salt, herbs and flavor. ** The flavor will get more pronounced on baking. If the mixture is too wet, add a tbsp or so flour. You want  it to be just slightly sticky. If too dry or crumbly, add a splash of broth. If you like sweeter, profile, add a tbsp of tomato paste or some chopped dried fruit such as dried cranberries or apricots. </li>
<li>Transfer to a parchment lined pan.  (I used lightly oiled cookie sheet.) Lightly press to shape. Do not pack too much. </li>
<li>Bake for 25 to 30 mins.</li>
</ol>
<p>Sauce:<br />
1. Blend roasted red peppers into a smooth paste<br />
2. Mix the rest of ingredients in a sauce pan over low heat for 15-20 minutes.<br />
3. Taste and adjust as needed.</p>
<p>Take the loaf out of the oven. Spread the glaze over the loaf and then bake again for 20 to 30 mins. Let cool for 15 mins before removing from the pan. Then cool completely before slicing. Serve with gravy or cranberry sauce or both!</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.ultrasaurus.com/2019/11/nut-loaf-with-red-pepper-sauce/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>digital identity: how to verify trust?</title>
		<link>https://www.ultrasaurus.com/2019/06/digital-identity-how-to-verify-trust/</link>
					<comments>https://www.ultrasaurus.com/2019/06/digital-identity-how-to-verify-trust/#respond</comments>
		
		<dc:creator><![CDATA[sarah]]></dc:creator>
		<pubDate>Sun, 16 Jun 2019 12:56:27 +0000</pubDate>
				<category><![CDATA[general]]></category>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=6560</guid>

					<description><![CDATA[How can we communicate with each other on the Internet so that we know each other when we want to be known, yet can have privacy or anonymity when appropriate? My brief notes from April 2018 Internet Identity Workshop (below) still feel relevant a year later. If we believe that a particular person is trust-worthy,&#8230; <a href="https://www.ultrasaurus.com/2019/06/digital-identity-how-to-verify-trust/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>How can we communicate with each other on the Internet so that we know each other when we want to be known, yet can have privacy or anonymity when appropriate? My brief notes from April 2018 Internet Identity Workshop (below) still feel relevant a year later.</p>
<p>If we believe that a particular person is trust-worthy, to trust their digital representation, we somehow need to identify that some bits that travel across wires or air actually originate from that person.</p>
<p>In today&#8217;s Web, we have a network of trusted authorities, typically my social network or email provider creates a relationship with me and I prove my identity with a password. The challenge is that they also house all of my personal data &#8212; could there be a way for me to identify myself without making myself vulnerable to the whims or errors of these companies?  New models are emerging.</p>
<ul>
<li>Mobile Drivers License: British Columbia and U.S. Commerce Department&#8217;s National Institute of Standards and Technology (NIST) have funded development of a new kind of digital ID. Folks are working on ways to validate the identity and &#8220;claims&#8221; of an individual. This is not just for fraud detection. It also potentially protects the privacy of an individual, in contrast to a traditional drivers license, where I must reveal my home address while proving that I&#8217;m over 21.</p>
</li>
<li>
<p>Decentralized Identifier (DID): a standard way for individuals and organizations to create permanent, globally unique, cryptographically verifiable identifiers entirely under the identity owner’s control. <a href="https://sovrin.org/wp-content/uploads/2018/03/Sovrin-Protocol-and-Token-White-Paper.pdf">Sovrin Foundation Whitepaper</a></p>
</li>
<li>
<p>With blockchains, every public key can now have its own address, enabling a decentralized self-service registry for public keys.</p>
</li>
<li>
<p>Trust without shared secrets. In cryptography we typically share a secret which allows us to decrypt future messages. But the best way to keep a secret is not to tell anyone. We can actually verify a secret without knowing it. <a href="https://www.ultrasaurus.com/2018/04/zero-knowledge-proof-trust-without-shared-secrets/">Zero-knowledge proof</a></p>
</li>
<li>
<p>Object capabilities. In the real world we have physical objects that we can transfer for very specific authorization (e.g. a key to your car) whereas digital keys must be kept secret to avoid replication &#8212; what if authorization were couple with objects in the digital world. Some basic examples illustrate the framework, discussed further in <a href="https://www.ultrasaurus.com/2018/04/false-dichotomy-of-control-vs-sharing/">false dichotomy of control vs sharing</a>.</p>
</li>
</ul>
<p>Full notes from IIW 26: <a href="https://raw.githubusercontent.com/windley/IIW_homepage/gh-pages/assets/proceedings/IIWXXVI_Book_of_Proceedings.pdf">PDF Proceedings</a>, <a href="https://iiw.idcommons.net/IIW_26_Session_Notes">wiki</a></p>
<p><em>More about IIW</em></p>
<p>The Internet Identity Workshop (<a href="https://www.internetidentityworkshop.com/">IIW</a>) gathers experts across the industry to solve this particular question. People share their understanding of the problem and potential solutions in this unique unconference twice a year.  I always learn unexpected and useful technical solutions, and more importantly gain a deeper understanding of this challenging problem of identity.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.ultrasaurus.com/2019/06/digital-identity-how-to-verify-trust/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>when reality is broken, change the rules</title>
		<link>https://www.ultrasaurus.com/2019/04/when-reality-is-broken-change-the-rules/</link>
					<comments>https://www.ultrasaurus.com/2019/04/when-reality-is-broken-change-the-rules/#respond</comments>
		
		<dc:creator><![CDATA[sarah]]></dc:creator>
		<pubDate>Sun, 28 Apr 2019 13:14:33 +0000</pubDate>
				<category><![CDATA[general]]></category>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=6772</guid>

					<description><![CDATA[When Leah Silber reached out about my speaking at EmberConf, I was reluctant. I&#8217;m not doing much front end work these days, and the last time I looked at Ember was long ago when Yehudah Katz and Tom Dale held a feedback session for a very early version of their work. I changed my mind&#8230; <a href="https://www.ultrasaurus.com/2019/04/when-reality-is-broken-change-the-rules/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>When Leah Silber reached out about my speaking at EmberConf, I was reluctant. I&#8217;m not doing much front end work these days, and the last time I looked at Ember was long ago when Yehudah Katz and Tom Dale held a feedback session for a very early version of their work. I changed my mind after an asynchronous text conversation with Leah, and listening to Yehudah talk about their work.</p>
<h2>Attention to detail</h2>
<p>Making software feel effortless isn&#8217;t effortless. I was impressed by the EmberJS team focus on backwards compatibility and agility, as well as the impressive performance of glimmer components. They were doing the kind of important, detailed work that doesn’t easily fit into a sound bite.</p>
<p>I told Leah that it reminded me of the work we do at <a href="https://bridgefoundry.org">Bridge Foundry</a>, where significant positive change is composed of so many small actions. Leah echoed back all my feelings in her concise reply: “Reality is boring and full of hard work”</p>
<p>As I prepared for this talk, I realized that I don&#8217;t actually believe that reality is boring. Reality is messy and difficult. I thought about the hardship of when my kid was a toddler, of crumbs and sticky i-dont-even-know-what-that-was, being so bone tired all the time and also the wildflower in the kitchen and that moment of sun shining through the window casting a shadow on the wall that was so beautiful and I might not have noticed if not for a three year old that noticed <em>everything</em>.</p>
<p>So when I listened to the 2016 talk where Yehudah said that “instability is a drag on innovation” (<a href="https://speakerdeck.com/wycats/stability-without-stagnation-lessons-learned-from-shipping-ember-dot-js?slide=5">Stability without stagnation, slide 5</a>), I realized that we need to talk more about the people who are slowly and steadily fixing the broken things in this world. I was reminded of my colleagues in the government, both the techies who served a limited term, and the folks who dedicate their lives to service.</p>
<h2>Small fixes to big problems</h2>
<p>In the closing keynote for EmberConf 2019, I spoke about the parallels between the work of building (and fixing) software systems and the people systems that seem to rule our lives.</p>
<p><iframe loading="lazy" width="770" height="433" src="https://www.youtube.com/embed/tHyf1-DMBKY?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe></p>
<p>This talk was very much in the context of the Ember community, in honor of their hard work making good software that works well. I hope my words will inspire new voices to tell their own stories about what works well, of their own moments of mundane heroism or those they witness.</p>
<h2>Notes</h2>
<p>Below are some notes that I prepared in advance, that aren&#8217;t exactly what I said, and some things that I cut from the talk, since I always have more stories I&#8217;d like to tell.</p>
<h3>Intro</h3>
<p>At EmberConf 2019, <a href="https://emberconf.com/speakers.html#yehuda-katz">Yehudah Katz</a> in the opening keynote talked about the decisions we make, about how they encode our values and communicate to the world what we truly believe. Later in the day, <a href="https://emberconf.com/speakers.html#melanie-sumner">Melanie Sumner</a> talked about the things we choose to put in our software that no one asks for because we’re professionals.</p>
<p>We write tests and structure our websites for accessibility because we want our software to work and we choose frameworks that make our work easier.  We choose to use the tools that give us power to move fast and make great things.</p>
<p>We live in a world where hype eclipses reality.  You know how it goes… that new shiny thing that was invented yesterday makes headlines. Often when we put in the effort to make software that works well that doesn’t sound so exciting.</p>
<p>Maybe you have experienced that time when some heroic team worked weekends and nights to deliver in time and save the company, maybe you were even on one of those teams, I know I was, and at the time, sometimes I didn’t notice another other team that delivered solid code on time with no fuss.  These days I think a lot about what we consider to be heroic.</p>
<p>Heroes are born through the stories we tell.  We have the opportunity to define what we consider to be legendary.  We each can decide what we value, the stories of success that we choose to tell.</p>
<p>Reality is messy. Designing and building things that are easy to use and work well is hard. It seems like people don’t want to hear about all the boring details.  I’ll tell you a secret.  The details aren’t boring.  It’s just sometimes we need to work inside a broken system, or one that isn’t finished yet&#8230;.  Reality is awesome, but things are little broken right now, things we see on the news, on twitter, things I can’t find in the Ember docs&#8230;</p>
<p>I joke, but sometimes it’s hard to know what to do.</p>
<p>Sometimes I just feel like reality is broken. This isn’t what I signed up for.  This isn’t how they told me it was going to be&#8230; but I’m all grown up now, and I’ve picked up some techniques I’d like to share, about how we can change the rules</p>
<p>Today I’m going to share a few stories, a few details that I consider epic.  And with these tales, I will share a very basic story of software engineers doing the thing we know how to do.  Solving problems, shaping reality into something usable and practical.  Because the world needs our skills.</p>
<h2>Additional Notes, things I didn&#8217;t say</h2>
<p>Abstractions make something more easily consumable — what are the essential things, or in a different context, the essential things?</p>
<p>What is success? have I adopted the mannerisms of the patriarchy? “Step forward, step back”</p>
<p>Do your homework!  &#8220;This entire black history month has been like a terrible sociology 101 class where no one did the reading.&#8221; &#8212; <a href="https://twitter.com/ClintSmithIII/status/1101233667299598336">Clint Smith</a></p>
<h2>Alternate Conclusion</h2>
<p>You’ve heard a lot of people here on stage say things.  I’d like each of you to think about the stage upon which you live your own life.  Each one of us has the power to change the world.  In fact, we have no other option.  With every word and action, we make change.</p>
<p>The world is pretty strange right now.  People are divided.  People are frustrated.  No matter what side you are on, living in the world today, I think we can all agree that reality is broken. However, small actions can build on each other. Our presence has ripple effects that we rarely consider.</p>
<p>Who has the power to create this reality we live in?  As it turns out, we all cooperate in making it so.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.ultrasaurus.com/2019/04/when-reality-is-broken-change-the-rules/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>subverting Sauron&#8217;s business model</title>
		<link>https://www.ultrasaurus.com/2019/04/subverting-saurons-business-model/</link>
					<comments>https://www.ultrasaurus.com/2019/04/subverting-saurons-business-model/#respond</comments>
		
		<dc:creator><![CDATA[sarah]]></dc:creator>
		<pubDate>Mon, 15 Apr 2019 05:20:13 +0000</pubDate>
				<category><![CDATA[general]]></category>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=6747</guid>

					<description><![CDATA[In a recent article, Peter Franklin draws a parallel between capitalism and Tolkien&#8217;s Lord of the Rings mythology, likening Facebook, and social media in general, to the rings of middle earth &#8212; powerful rings gifted by Sauron, Lord of Mordor, to the leaders of middle earth, secretly influencing them, binding them to darkness, and increasing&#8230; <a href="https://www.ultrasaurus.com/2019/04/subverting-saurons-business-model/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>In a <a href="https://unherd.com/2019/04/what-tolkien-teaches-us-about-power/">recent article</a>, Peter Franklin draws a parallel between capitalism and Tolkien&#8217;s Lord of the Rings mythology, likening Facebook, and social media in general, to the rings of middle earth &#8212; powerful rings <em>gifted</em> by Sauron, Lord of Mordor, to the leaders of middle earth, secretly influencing them, binding them to darkness, and increasing the power of the dark lord.</p>
<p>There&#8217;s a larger concept in this mythology about power, which does not necessarily imply evil. The artifacts and tools that we create have power and purpose. In our modern world, open data and open source software can be powerful forces that create positive impact. With open source software, freely distributed libraries and applications influence behavior, affecting properties of the systems that rule our lives. By making certain things easy for other software developers, one small piece of code can have outsize effects on unrelated commercial software. Open and easily accessible datasets can create positive economic impact that can be more evenly distributed than investments of capital.</p>
<p>If you don&#8217;t know the story, or if it has been a while, you can catch up on the lore, reading <a href="http://tolkiengateway.net/wiki/Ring_Verse">Tolkien Gateway&#8217;s background on the Ring Verse</a> or listen to <a href="https://www.youtube.com/watch?v=4s59oDfDoI8">Tolkien reading the Ring Verse</a> on YouTube.</p>
<h2>Tolkien&#8217;s reflection on power</h2>
<p>Tolkien&#8217;s ring mythology aptly illustrates that to exercise power, one must give it away (and risk losing it), which he explains in one of his letters. Dr. Rhona Beare&#8217;s correspondence led Tolkien to elaborate on the rings of power as a mythical representation of power or, in his words, <em>potency</em>:</p>
<blockquote><p>
  The Ring of Sauron is only one of the various mythical treatments of the placing of one&#8217;s life, or power, in some external object, which is thus exposed to capture or destruction with disastrous results to oneself&#8230;</p>
<p>  a mythical way of representing the truth that <em>potency</em> (or<br />
  perhaps rather <em>potentiality</em>) if it is to be exercised, and produce results, has to be externalised and so as it were passed, to a greater or less degree, out of one’s direct control. A man who wishes to exert<br />
  &#8216;power&#8217; must have subjects, who are not himself. But he then depends on them.<br />
  &#8212; 14 October 1958 <a href="#1">[1]</a>
</p></blockquote>
<p>Whether it is capital investment, the intellectual property of source code, knowledge that you have collected as data or a small golden ring, you can amplify your power by giving it away, but then you must rely on others. Like Frodo, we can all exercise free will in deciding what to do with the power we are given. Destroy the ring, keep the elven chain mail shirt, go adventuring or enjoy our home in the shire. We decide.</p>
<p><!---
> think of the difference between cashflow and capital. If all you have is cashflow – money which you spend as soon as you earn it – then any interruption leaves you helpless. It doesn’t matter how rich you were up until that point.

> However, if you save a portion of your income, then you accumulate capital. And that gives you options – not only a reserve to fall back on, but also a means of boosting one’s own economic power and of acquiring control over that of others.

The article draws an analogy to the Lord of the Rings. When Sauron of Mordor created the One Ring, it was an investment of power, akin to saving capital. At first seemingly foolish since that power could be lost, except that whoever found it would be drawn to use that power in the ways of Sauron and then could be seen by him.

> in addition to the One Ring, 19 subsidiary ‘Rings of Power’ were created and distributed among the movers-and-shakers of Middle Earth. The recipients thought they were getting a free gift; in reality they were plugging themselves into a network under the ultimate control of the One Ring, which Sauron retained for himself.

The article suggests that a parallel from our own world: a networked service where its benefits appear to be free, yet our participation amplifies its power, ultimately repaying the ‘generosity’ of those who control it.  This references a common business model today, that is applied on a much bigger scale than Facebook.

> Though we’re not forced by law to use social media, the technology is so enmeshed in the way we live that it’s getting harder to do without it. And that’s without taking into account its addictive qualities. Even when we don’t actually need it, we wants it. Yesss, we do, my precious. Now, where did I put my phone?

via [@skmurphy tweet](
https://twitter.com/skmurphy/status/1116846407111983105)
--><br />
[<a name="1">1</a>] originally published in a <a href="http://tolkiengateway.net/wiki/J.R.R._Tolkien%27s_Letters_to_Rhona_Beare">booklet</a>, later in <a href="https://www.goodreads.com/book/show/2327.The_Letters_of_J_R_R_Tolkien">The Letters of J.R.R. Tolkien</a>, <a href="https://timedotcom.files.wordpress.com/2014/12/the_letters_of_j.rrtolkien.pdf">pdf</a>)</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.ultrasaurus.com/2019/04/subverting-saurons-business-model/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>production outages are like sexism</title>
		<link>https://www.ultrasaurus.com/2018/09/production-outages-and-sexism/</link>
					<comments>https://www.ultrasaurus.com/2018/09/production-outages-and-sexism/#respond</comments>
		
		<dc:creator><![CDATA[sarah]]></dc:creator>
		<pubDate>Sun, 16 Sep 2018 14:12:23 +0000</pubDate>
				<category><![CDATA[general]]></category>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=6662</guid>

					<description><![CDATA[I write this as a privileged white cis woman, or at least that&#8217;s what I look like, with my blue hair, ivy league education and house in San Francisco. I have compound privilege, so what I describe below represents an easy life. I work in the tech industry. I started programming when I was twelve.&#8230; <a href="https://www.ultrasaurus.com/2018/09/production-outages-and-sexism/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>I write this as a privileged white cis woman, or at least that&#8217;s what I look like, with my blue hair, ivy league education and house in San Francisco. I have compound privilege, so what I describe below represents an easy life.</p>
<p><strong>I work in the tech industry.</strong></p>
<p>I started programming when I was twelve. My first commercial software was a Mac application. People bought our software and we sent them a box with a paper manual and some floppy disks. I thought sexism was something I would only experience from old men and young jerks. There were a lot of messed up things in the world, but on this point I thought my generation was cool.</p>
<p>Now I work on distributed systems. People fill out a web form and enter their credit card and then just start using our software. It runs 24&#215;7 on computers all over the world.</p>
<p>We write good code. We have tests that run automatically when we change anything, and extra checklists when we make something new. We still write bugs, and even if our code were perfect, it runs on hardware that can fail. So we create data centers with redundant systems, and just in case there&#8217;s a storm or earthquake, we run some more copies of the software on the other side of the planet. We do all that work, and still, we prepare for a production outages &#8212; that&#8217;s what we call it when things are so bad that people will start noticing. It&#8217;s inevitable. It happens. In fact, it happens so much it&#8217;s routine. We prepare. We create systems to alert us as early warning signals, so we can do something to avert catastrophic failure.</p>
<p>No matter how much we prepare. No matter how hard we work. No matter how brilliant we are at writing code. It happens.</p>
<p>By the time there&#8217;s a production outage, We&#8217;ve already worked through all the solutions in the standard playbook and nothing worked. Maybe we&#8217;ve already looped in a few colleagues who happen to be awake or nearby. We start improvising. We try anything that is both fast and safe. As we pull in some experts, we hope we&#8217;ve written all the important things down.</p>
<p>Afterwards, we&#8217;ll do a root cause analysis. It could be a mistake we made 6 months ago that&#8217;s been quietly corrupting data. Maybe we made an incorrect assumption, or some other system changed and we weren&#8217;t notified. Sometimes we could have prevented the problem. Sometimes the root cause is entirely outside of our control.</p>
<p><strong>Sexism is like a production outage.</strong></p>
<p>We learn to expect it. We create systems that mitigate risk. We learn the rules. We study the written laws and policy, because we find that the unspoken rules we learned as kids don&#8217;t make any sense. Guidelines about appropriate behavior box us in so tightly we can&#8217;t actually get anything done. Sometimes you can ignore the rules.</p>
<p>If you have the privilege of working with men who will respect you, it can work pretty well to pretend these unwritten rules don&#8217;t exist. If you want to move to a new team or a new position, you make a judgement call: is the opportunity worth the risk?</p>
<p>There are places I won&#8217;t work. Being part of the next unicorn startup isn&#8217;t worth the kinds of production outages I would expect there &#8212; it&#8217;s too disruptive to get any work done.</p>
<p>To be successful in the software industry, we need to take risks &#8212; make new software, work with new teams. Men take risks too and can experience their own production outages. And I&#8217;m sure I can&#8217;t imagine your situation, but from what I&#8217;ve observed in the United States, there&#8217;s a class of privileged white cis men where failure is a sign of positive risk taking. For blacks and latinos, it seems that failure is more often perceived as failure, or condescendingly, as a lack of preparation that is not their fault. Asian men seem to have fewer production outages in their early careers, then at some point they stop advancing and hit the bamboo ceiling.</p>
<p>I&#8217;m not sure the tech industry is really worse than any other place to work, but it does seem different. I wonder if its because many of us were like me. I expected it to be different. When I encountered obstacles, I just worked harder. I thought everyone was held to the same high standards, but when I look back, I&#8217;m not sure that&#8217;s true. If you have to defend your ideas and plans more than your colleague, that slows you down. If you don&#8217;t ask permission, it&#8217;s more likely you will be held accountable for your failure, so you have to make sure you don&#8217;t fail. We need to take risks to do great things, but for some of us, there are more risks and the risks are bigger.</p>
<p>The &#8220;leaky pipeline&#8221; is <a href="https://www.kaporcenter.org/the-leaky-tech-pipeline-a-comprehensive-framework-for-understanding-and-addressing-the-lack-of-diversity-across-the-tech-ecosystem/">well-documented</a>. Through my own lived experience and hundreds of women I&#8217;ve known as fellow travelers in this strange world of the tech industry, I see patterns that seem to be invisible to most of my male colleagues. This metaphor of the effects of sexism as a production outage helps me develop strategies and advise other women when they face obstacles. If there is only one woman on a team, it&#8217;s hard to tell the difference between sexism and incompetence. Is she being treated differently? Did he just make a mistake? The research is interesting, but when it happens to you, it doesn&#8217;t matter. You can do root cause analysis later. Right now, you need to put your life on hold and deal with a production outage.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.ultrasaurus.com/2018/09/production-outages-and-sexism/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>optimize for results, not optics</title>
		<link>https://www.ultrasaurus.com/2018/07/optimize-for-results-not-optics/</link>
					<comments>https://www.ultrasaurus.com/2018/07/optimize-for-results-not-optics/#comments</comments>
		
		<dc:creator><![CDATA[sarah]]></dc:creator>
		<pubDate>Wed, 04 Jul 2018 18:45:07 +0000</pubDate>
				<category><![CDATA[general]]></category>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=6607</guid>

					<description><![CDATA[Jennifer Anastasoff served as the head of people for the United States Digital Service (USDS). She grew that organization from a small team of three to an office of over 200 people in just two years. On today&#8217;s Friction Podcast, she talks with Bob Sutton about fixing government friction I had been a Presidential Innovation&#8230; <a href="https://www.ultrasaurus.com/2018/07/optimize-for-results-not-optics/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>Jennifer Anastasoff served as the head of people for the United States Digital Service (<a href="https://www.usds.gov">USDS</a>). She grew that organization from a small team of three to an office of over 200 people in just two years.</p>
<p>On today&#8217;s Friction Podcast, she talks with Bob Sutton about <a href="https://ecorner.stanford.edu/podcast/over-under-through-fixing-government-friction/">fixing government friction</a></p>
<p>I had been a Presidential Innovation Fellow in 2013, living through a government shutdown and witnessing the failure of healthcare.gov. Then hearing about the slow and steady work that revived it, over a matter of months to a functioning website that allowed people to signup for services that they needed.</p>
<p>Later, when I was at <a href="https://18f.gsa.gov/">18F</a>, I collaborated with Jennifer on a few projects. We worked behind the scenes to bring stories of results to the tech folks in San Francisco and elsewhere across the country.</p>
<p>In those early days, before the USDS had a website, I don&#8217;t recall the formal statement of values that she talks about on the podcast. I worked closely with many of the folks at USDS and these values were evidenced in the work:</p>
<ul>
<li>Hire and empower great people.</li>
<li>Find the truth, tell the truth.</li>
<li>Optimize for results, not optics.</li>
<li>Go where the work is.</li>
<li>Create momentum.</li>
</ul>
<p>Maybe they were on the wall somewhere at USDS HQ when I was there for a meeting or just to unwind with people facing the same tough challenges. I do remember the hockey table and that room with the wires in the old townhouse where Teddy Rosevelt used to live with his family. Working in spaces where great history happened couldn&#8217;t feel more surreal than trying to figure out if it was really true that A/B testing was illegal.</p>
<p>In the interview, Jennifer talk about how people would say that &#8220;in government, we’re not allowed to break the rules…&#8221; However, a lot of time it was how the rules were interpreted: &#8220;if it doesn&#8217;t explicitly say something is possible, than it&#8217;s not possible. And that&#8217;s just not the case.&#8221;</p>
<p>But you can&#8217;t just reinterpret things by yourself. We needed technical folks who could work with lawyers and policy experts, doing the challenging work of figuring out a solution that would work and was legal. I have great respect and empathy for the government workers who would routinely say &#8220;no&#8221; out of fear. It is pretty scary to realize that something you might do in the normal course of your work might actually break a law, which could literally cause you or your boss to be called in front of Congress to explain your actions.</p>
<p>&#8220;There&#8217;s very little room in all of this for a hero narrative,&#8221; she says in the podcast. We accomplished much by giving credit to our government colleagues who stepped up and took a leadership role in this work. We were temporary employees. We could go back to our easy tech jobs, and these folks would need to continue the work. There&#8217;s a different kind of hero narrative, which requires each of us to step up in the moment, say the thing in the meeting that no one wants to say, or ask the naive question, or simply read a thousand pages of regulation until you find that one clause that let&#8217;s you do the thing. You perform the everyday heroics that let you try something new, and that sets a pattern for you and your colleagues, and future generations of government workers, to be empowered to effectively help the people they serve.</p>
<p>Jennifer Anastasoff is my kind of hero.</p>
<p>Listen to the full <a href="https://ecorner.stanford.edu/podcast/over-under-through-fixing-government-friction/">interview with Jennifer Anastasoff</a> and hear about the everyday heroics of the how people really make history.</p>
<p>p.s. The work continues. Consider applying as an <a href="https://apply.pif.gov/">Innovation Fellow</a> &#8212; deadline is July 6th!</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.ultrasaurus.com/2018/07/optimize-for-results-not-optics/feed/</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>false dichotomy of control vs sharing</title>
		<link>https://www.ultrasaurus.com/2018/04/false-dichotomy-of-control-vs-sharing/</link>
					<comments>https://www.ultrasaurus.com/2018/04/false-dichotomy-of-control-vs-sharing/#respond</comments>
		
		<dc:creator><![CDATA[sarah]]></dc:creator>
		<pubDate>Fri, 20 Apr 2018 12:57:24 +0000</pubDate>
				<category><![CDATA[general]]></category>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=6589</guid>

					<description><![CDATA[Email is the killer app of the Internet. Amidst many sharing and collaboration applications and services, most of us frequently fall back to email. Marc Stiegler suggests that email often “just works better”. Why is this? Digital communication is fast across distances and allows access to incredible volumes of information, yet digital access controls typically&#8230; <a href="https://www.ultrasaurus.com/2018/04/false-dichotomy-of-control-vs-sharing/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>Email is the killer app of the Internet. Amidst many sharing and collaboration applications and services, most of us frequently fall back to email. Marc Stiegler suggests that email often “just works better”. Why is this?</p>
<p>Digital communication is fast across distances and allows access to incredible volumes of information, yet digital access controls typically force us into a false dichotomy of control vs sharing.</p>
<p>Looking at physical models of sharing and access control, we can see that we already have well-established models where we can give up control temporarily, yet not completely.</p>
<p>Alan Karp illustrated this nicely at last week&#8217;s Internet Identity Workshop (<a href="https://www.internetidentityworkshop.com/">IIW</a>) in a quick anecdote:</p>
<blockquote><p>
  Marc gave me the key to his car so I could park in in my garage. I couldn’t do it, so I gave the key to my kid, and asked my neighbor to do it for me. She stopped by my house, got the key and used it to park Marc&#8217;s car in my garage.
</p></blockquote>
<p>The car key scenario is clear. In addition to possession of they key, there&#8217;s even another layer of control &#8212; if my kid doesn&#8217;t have a driver&#8217;s license, then he can&#8217;t drive the car, even if he holds the key.</p>
<p>When we translate this story to our modern digital realm, it sounds crazy:</p>
<blockquote><p>
  Marc gave me his password so I could copy a file from his computer to mine. I couldn’t do it, so I gave Marc&#8217;s password to my kid, and asked my neighbor to do it for me.  She stopped by my house so my kid could tell her my password, and then she used it to  copy the file from Marc&#8217;s computer to mine.
</p></blockquote>
<p>After the conference, I read Marc Stiegler&#8217;s 2009 paper <a href="http://www.hpl.hp.com/techreports/2009/HPL-2009-169.pdf">Rich Sharing for the Web</a> details key features of sharing that we have in the real world that are illustrated in the anecdote that Alan so effectively rattled off.</p>
<p>These 6 features (enumerated below) enable people to create networks of access rights that implement the Principle of Least Authority (POLA). The key is to limit how much you need to trust someone before sharing. “Systems that do not implement these 6 features will feel rigid and inadequately functional once enough users are involved, forcing the users to seek alternate means to <strong>work around</strong> the limitations in those applications.”</p>
<ol>
<li><strong>Dynamic</strong>: I can grant access quickly and effortlessly  (without involving an administrator).</li>
<li><strong>Attenuated</strong>: To give you permission to do or see one thing, I don&#8217;t have to give you permission to do everything.  (e.g. valet key allows driving, but not access to the trunk)</li>
<li><strong>Chained</strong>: Authority may be delegated (and re-delegated). </li>
<li><strong>Composable</strong>: I have permission to drive a car from the State of California, and Marc&#8217;s car key. I require both permissions together to drive the car.</li>
<li><strong>Cross-jurisdiction</strong>: There are three families involved, each with its own policies, yet there’s no<br />
need to communicate policies to another jurisdiction. In the example, I didn’t need to ask Marc to change his policy to grant my neighbor permission to drive his car.</li>
<li><strong>Accountable</strong>: If Marc finds a new scratch on his car, he knows to ask me to pay for the repair. It’s up to me to collect from my neighbor. Digital access control systems will typically record who did which action, but don&#8217;t record who asked an administrator to grant permission.</li>
</ol>
<p>Note: Accountability is not always directly linked to delegation. Marc would likely hold me accountable if his car got scratched, even if my neighbor had damaged the car when parking it in the garage. Whereas, if it isn&#8217;t my garage, bur rather a repair shop where my neighbor drops off the car for Marc, then if the repair shop damages the car, Marc would hold them responsible.</p>
<h2>How does this work for email?</h2>
<p>The following examples from Marc&#8217;s paper were edited for brevity:</p>
<ul>
<li><strong>Dynamic</strong>: You can send email to anyone any time.</li>
<li><strong>Attenuated</strong>: When I email you an attachment, I&#8217;m sending a read-only copy. You don&#8217;t have access to my whole hard drive and you don&#8217;t expect that modifying it will change my copy.</li>
<li><strong>Chained</strong>: I can forward you an email. You can then forward it to someone else.</li>
<li><strong>Cross-Domain</strong>: I can send email to people at other companies and organizations with permissions from their IT dept.</li>
<li><strong>Composable</strong>: I can include an attachment from email originating at one company with text or another attachment from another email and send it to whoever I want.</li>
<li><strong>Accountable</strong>: If Alice asks Bob to edit a file and email it back, and Bob asks Carol to edit the file, and<br />
Bob then emails it back, Alice will hold Bob responsible if the edits are erroneous. If Carol (whom Alice<br />
may not know) emails her result directly to Alice, either Alice will ask Carol who she is before accepting<br />
the changes, or if Carol includes the history of messages in the message, Alice will directly see, once<br />
again, that she should hold Bob responsible. </li>
</ul>
<h2>Further reading</h2>
<p>Alan Karp&#8217;s <a href="https://alanhkarp.com/publications/Access-Control-for-IoT.pdf">IoT Position Paper</a> compares several sharing tools across these 6 features and also discusses ZBAC (authoriZation-Based Access Control) where authorization is known as a &#8220;capability.&#8221; An <strong>object capability</strong> is an unforgeable token that both designates a resource and grants permission to access it.</p>
]]></content:encoded>
					
					<wfw:commentRss>https://www.ultrasaurus.com/2018/04/false-dichotomy-of-control-vs-sharing/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>zero-knowledge proof: trust without shared secrets</title>
		<link>https://www.ultrasaurus.com/2018/04/zero-knowledge-proof-trust-without-shared-secrets/</link>
					<comments>https://www.ultrasaurus.com/2018/04/zero-knowledge-proof-trust-without-shared-secrets/#respond</comments>
		
		<dc:creator><![CDATA[sarah]]></dc:creator>
		<pubDate>Sat, 07 Apr 2018 17:52:58 +0000</pubDate>
				<category><![CDATA[general]]></category>
		<guid isPermaLink="false">https://www.ultrasaurus.com/?p=6569</guid>

					<description><![CDATA[In cryptography we typically share a secret which allows us to decrypt future messages. Commonly this is a password that I make up and submit to a Web site, then later produce to verify I am the same person. I missed Kazue Sako&#8217;s Zero Knowledge Proofs 101 presentation at IIW last week, but Rachel Myers&#8230; <a href="https://www.ultrasaurus.com/2018/04/zero-knowledge-proof-trust-without-shared-secrets/">Continue reading <span class="meta-nav">&#8594;</span></a>]]></description>
										<content:encoded><![CDATA[<p>In cryptography we typically share a secret which allows us to decrypt future messages. Commonly this is a password that I make up and submit to a Web site, then later produce to verify I am the same person.</p>
<p>I missed Kazue Sako&#8217;s <a href="http://iiw.idcommons.net/Zero_Knowledge_Proofs_101">Zero Knowledge Proofs 101</a> presentation at <a href="https://www.internetidentityworkshop.com/">IIW</a> last week, but Rachel Myers shared an impressively simply retelling in the car on the way back to San Francisco, which inspired me to read the notes and review the proof for myself. I&#8217;ve attempted to reproduce this simple explanation below, also noting additional sources and related articles.</p>
<p>Zero Knowledge Proofs (ZPKs) are very useful when applied to internet identity &#8212; with an interactive exchange you can prove you know a secret without actually revealing the secret.</p>
<p>Understanding Zero Knowledge Proofs with simple math:</p>
<h3>x -> f(x)</h3>
<p>Simple one way function. Easy to go one way from <code>x</code> to <code>f(x)</code> but mathematically hard to go from <code>f(x)</code> to <code>x.</code></p>
<p>The most common example is a hash function. <a href="https://www.wired.com/2016/06/hacker-lexicon-password-hashing/">Wired: What is Password Hashing?</a> provides an accessible introduction to why hash functions are important to cryptographic applications today.</p>
<h3>f(x) = g ^ x mod p</h3>
<p>Known(public): <code>g</code>, <code>p</code><br />
* <code>g</code> is a constant<br />
* <code>p</code> has to be prime</p>
<p>Easy to know <code>x</code> and compute <code>g ^ x mod p</code> but difficult to do in reverse.</p>
<h3>Interactive Proof</h3>
<p>Alice wants to prove Bob that she knows <code>x</code> without giving any information about <code>x</code>. Bob already knows <code>f(x)</code>.  Alice can make <code>f(x)</code> public and then prove that she knows <code>x</code> through an interactive exchange with anyone on the Internet, in this case, Bob.</p>
<ol>
<li>Alice publishes f(x): <code>g^x mod p</code></li>
<li>Alice picks random number <code>r</code></li>
<li>Alice sends Bob <code>u</code> = g^r mod p</li>
<li>Now Bob has artifact based on that random number, but can&#8217;t actually calculate the random number</li>
<li>Bob returns a challenge <code>e</code>. Either 0 or 1</li>
<li>Alice responds with <code>v</code>:<br />
If 0, <code>v = r</code><br />
If 1, <code>v = r + x</code></li>
<li>Bob can now calculate:<br />
If e == 0: Bob has the random number <code>r</code>, as well as the publicly known variables and can check if <code>u == g^v mod p</code><br />
If e == 1: <code>u*f(x) = g^v (mod p)</code></li>
</ol>
<p>I believe step 6 is true based on <a href="https://proofwiki.org/wiki/Congruence_of_Powers">Congruence of Powers</a>, though I&#8217;m not sure that I&#8217;ve transcribed e==1 case accurately with my limited ascii representation.</p>
<p>If <code>r</code> is true random, equally distributed between zero and <code>(p-1)</code>, this does not leak any information about <code>x</code>, which is pretty neat, yet not sufficient.</p>
<p>In order to ensure that Alice cannot be impersonated, multiple iterations are required along with the use of large numbers (see <a href="http://iiw.idcommons.net/Zero_Knowledge_Proofs_101">IIW session notes</a>).</p>
<h2>Further Reading</h2>
<ul>
<li><a href="https://www.stat.berkeley.edu/users/aldous/157/Papers/fagin.pdf">Comparing Information Without Leaking It</a> Ronald Fagin, Moni Naor, Peter Winkler, 1996.</li>
<li><a href="http://people.csail.mit.edu/silvio/Selected%20Scientific%20Papers/Proof%20Systems/The_Knowledge_Complexity_Of_Interactive_Proof_Systems.pdf">The Knowledge Complexity of Interactive Proof-Systems</a>: original 1985 paper by Shafi Goldwasser, Silvio Micali, and Charles Rackoff</li>
<li><a href="http://pages.cs.wisc.edu/~mkowalcz/628.pdf">How to Explain Zero-Knowledge Protocols to Your Children</a> Quisquater, Jean-Jacques; Guillou, Louis C.; Berson, Thomas A. (1990). Advances in Cryptology – CRYPTO &#8217;89: Proceedings. 435: 628–631.</li>
<li><a href="http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=8ED92C8B3C84F999CADFE20D9012322C?doi=10.1.1.46.9932&amp;rep=rep1&amp;type=pdf">Applied Kid Cryptography or How To Convince Your Children You Are Not Cheating</a> Moni Naor, Yael Naor, Omer Reingold, 1999</li>
</ul>
]]></content:encoded>
					
					<wfw:commentRss>https://www.ultrasaurus.com/2018/04/zero-knowledge-proof-trust-without-shared-secrets/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>

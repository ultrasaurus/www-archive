<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: why is XML good for GUI?	</title>
	<atom:link href="https://www.ultrasaurus.com/2004/03/why-is-xml-good-for-gui/feed/" rel="self" type="application/rss+xml" />
	<link>https://www.ultrasaurus.com/2004/03/why-is-xml-good-for-gui/</link>
	<description>Sarah Allen&#039;s reflections on internet software and other topics</description>
	<lastBuildDate>Mon, 27 Feb 2006 19:44:49 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.1</generator>
	<item>
		<title>
		By: Sarah Allen		</title>
		<link>https://www.ultrasaurus.com/2004/03/why-is-xml-good-for-gui/#comment-150</link>

		<dc:creator><![CDATA[Sarah Allen]]></dc:creator>
		<pubDate>Mon, 27 Feb 2006 19:44:49 +0000</pubDate>
		<guid isPermaLink="false">https://www.ultrasaurus.com/wordpress/?p=110#comment-150</guid>

					<description><![CDATA[Note:  most of what you build in a GUI is not actually pixel-tweaking.  After spending the last year working on Laszlo Mail (www.laszlomail.com), I believe this even more strongly.  A GUI tool is great for prototyping, but building a real UI that does anything interesting or innovative, is still a programming task.  After three years of LZX coding experience, I&#039;m convinced that declarative coding is just plain faster than creating procedural code.  XML is reasonable choice for declarative code today.
]]></description>
			<content:encoded><![CDATA[<p>Note:  most of what you build in a GUI is not actually pixel-tweaking.  After spending the last year working on Laszlo Mail (www.laszlomail.com), I believe this even more strongly.  A GUI tool is great for prototyping, but building a real UI that does anything interesting or innovative, is still a programming task.  After three years of LZX coding experience, I&#8217;m convinced that declarative coding is just plain faster than creating procedural code.  XML is reasonable choice for declarative code today.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Dan Shafer		</title>
		<link>https://www.ultrasaurus.com/2004/03/why-is-xml-good-for-gui/#comment-149</link>

		<dc:creator><![CDATA[Dan Shafer]]></dc:creator>
		<pubDate>Sat, 27 Mar 2004 05:26:30 +0000</pubDate>
		<guid isPermaLink="false">https://www.ultrasaurus.com/wordpress/?p=110#comment-149</guid>

					<description><![CDATA[Sarah....

Thanks for the note, which TrackBacked to my site so I could find it!

Your explanation of why XML may have a valid role to play in GUI design is intriguing. I agree with it. Your final point is the core of my issue, I think. I&#039;m looking now at building a first cut at a Laszlo GUI tool using Runtime Revolution. I&#039;ll let you know if something useful develops from that work.


]]></description>
			<content:encoded><![CDATA[<p>Sarah&#8230;.</p>
<p>Thanks for the note, which TrackBacked to my site so I could find it!</p>
<p>Your explanation of why XML may have a valid role to play in GUI design is intriguing. I agree with it. Your final point is the core of my issue, I think. I&#8217;m looking now at building a first cut at a Laszlo GUI tool using Runtime Revolution. I&#8217;ll let you know if something useful develops from that work.</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>

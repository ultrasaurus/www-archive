<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: Software and Picture Hanging	</title>
	<atom:link href="/2004/12/software-and-picture-hanging/feed/" rel="self" type="application/rss+xml" />
	<link>/2004/12/software-and-picture-hanging/</link>
	<description>Sarah Allen&#039;s reflections on internet software and other topics</description>
	<lastBuildDate>Wed, 22 May 2013 12:12:53 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.1</generator>
	<item>
		<title>
		By: Sarah		</title>
		<link>/2004/12/software-and-picture-hanging/#comment-202</link>

		<dc:creator><![CDATA[Sarah]]></dc:creator>
		<pubDate>Wed, 22 May 2013 12:12:53 +0000</pubDate>
		<guid isPermaLink="false">/wordpress/?p=148#comment-202</guid>

					<description><![CDATA[Odd to read this article 9 years later.  These days I find pair programming more effective than pre-checkin code reviews.  When solo work is needed/wanted for various (good) reasons, then I&#039;m fond of the &quot;pair integrations&quot; when you work with someone else for at least a few hours to finish up or incrementally improve some part of the code you just wrote.  It is much more active than a code review, which I believe is much more effective and certainly more fun.]]></description>
			<content:encoded><![CDATA[<p>Odd to read this article 9 years later.  These days I find pair programming more effective than pre-checkin code reviews.  When solo work is needed/wanted for various (good) reasons, then I&#8217;m fond of the &#8220;pair integrations&#8221; when you work with someone else for at least a few hours to finish up or incrementally improve some part of the code you just wrote.  It is much more active than a code review, which I believe is much more effective and certainly more fun.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Karen		</title>
		<link>/2004/12/software-and-picture-hanging/#comment-200</link>

		<dc:creator><![CDATA[Karen]]></dc:creator>
		<pubDate>Mon, 24 Jan 2005 20:49:18 +0000</pubDate>
		<guid isPermaLink="false">/wordpress/?p=148#comment-200</guid>

					<description><![CDATA[Interesting. We use code review in my organization and design review. We never have trouble getting people to actually *DO* design reviews and making them successful, but code reviews are harder to make happen.

They tend to happen late in the life of a largish block of code, which I know is part of our problem. Then everybody says &quot;more javadoc, please&quot; and sloughs off doing the real reading.

But if you *had* to check in, say on a feature by feature basis, and you had to do code review for each checkin, it would change the dynamic.

What&#039;s the size of a checkin for your team? How much is a developer asked to review at a sitting? Can you talk about that? Would you mind? I&#039;d love to see an analytical post about the cultural nuts and bolts of this and how you make it work, and I bet a lot of other people would too.

I think we have some good basics where I work for keeping code reviews from getting personal, but we&#039;re not good at making sure they actually happen and making them a necessary event.
]]></description>
			<content:encoded><![CDATA[<p>Interesting. We use code review in my organization and design review. We never have trouble getting people to actually *DO* design reviews and making them successful, but code reviews are harder to make happen.</p>
<p>They tend to happen late in the life of a largish block of code, which I know is part of our problem. Then everybody says &#8220;more javadoc, please&#8221; and sloughs off doing the real reading.</p>
<p>But if you *had* to check in, say on a feature by feature basis, and you had to do code review for each checkin, it would change the dynamic.</p>
<p>What&#8217;s the size of a checkin for your team? How much is a developer asked to review at a sitting? Can you talk about that? Would you mind? I&#8217;d love to see an analytical post about the cultural nuts and bolts of this and how you make it work, and I bet a lot of other people would too.</p>
<p>I think we have some good basics where I work for keeping code reviews from getting personal, but we&#8217;re not good at making sure they actually happen and making them a necessary event.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Sarah Allen		</title>
		<link>/2004/12/software-and-picture-hanging/#comment-199</link>

		<dc:creator><![CDATA[Sarah Allen]]></dc:creator>
		<pubDate>Sun, 23 Jan 2005 21:24:03 +0000</pubDate>
		<guid isPermaLink="false">/wordpress/?p=148#comment-199</guid>

					<description><![CDATA[It&#039;s true that Laszlo has a really good culture of striving for best practices and following reasonable guidelines.  I think the number one thing that keeps us headed in the right direction is frequent code reviews.

We have a policy that all code is reviewed before it gets checked in.  Sometimes, at crunch time, minor code changes don&#039;t get reviewed and some code is reviewed post-checkin, but it works well in general.  The code reviews accomplish a few very different goals (in order of importance, imho):

1 - Spread the knowledge of the code base.  If every check in has a code reviewer, there are always two people who have domain knowledge for fixing any bug.
2 - When you go over the code with someone else, you often see problems that you missed while coding.  A code review forces you to review your own code.
3 - The code reviewer can help remind you about coding guidelines and best practices.

It&#039;s easy to get code reviews started because of #1.  If someone else reviews your code than you aren&#039;t the only one responsible for it.  This aspect appeals to just about every programmer.  After people are used to doing code reviews, they usually start to see other benefits.
]]></description>
			<content:encoded><![CDATA[<p>It&#8217;s true that Laszlo has a really good culture of striving for best practices and following reasonable guidelines.  I think the number one thing that keeps us headed in the right direction is frequent code reviews.</p>
<p>We have a policy that all code is reviewed before it gets checked in.  Sometimes, at crunch time, minor code changes don&#8217;t get reviewed and some code is reviewed post-checkin, but it works well in general.  The code reviews accomplish a few very different goals (in order of importance, imho):</p>
<p>1 &#8211; Spread the knowledge of the code base.  If every check in has a code reviewer, there are always two people who have domain knowledge for fixing any bug.<br />
2 &#8211; When you go over the code with someone else, you often see problems that you missed while coding.  A code review forces you to review your own code.<br />
3 &#8211; The code reviewer can help remind you about coding guidelines and best practices.</p>
<p>It&#8217;s easy to get code reviews started because of #1.  If someone else reviews your code than you aren&#8217;t the only one responsible for it.  This aspect appeals to just about every programmer.  After people are used to doing code reviews, they usually start to see other benefits.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: Karen		</title>
		<link>/2004/12/software-and-picture-hanging/#comment-198</link>

		<dc:creator><![CDATA[Karen]]></dc:creator>
		<pubDate>Sun, 23 Jan 2005 02:29:05 +0000</pubDate>
		<guid isPermaLink="false">/wordpress/?p=148#comment-198</guid>

					<description><![CDATA[The sad part, as you try to make yourself go write stuff up is that even if you write up your best practices, you still also need to be working with a team that&#039;s mature enough in its sense of software engineering to remember to use the guidelines provided without being stood over. (I gather laszlo is such a place, which is great.)

If an institution has sloppy habits, documentation of proper behavior is just the tip of the iceberg in effecting real change.


]]></description>
			<content:encoded><![CDATA[<p>The sad part, as you try to make yourself go write stuff up is that even if you write up your best practices, you still also need to be working with a team that&#8217;s mature enough in its sense of software engineering to remember to use the guidelines provided without being stood over. (I gather laszlo is such a place, which is great.)</p>
<p>If an institution has sloppy habits, documentation of proper behavior is just the tip of the iceberg in effecting real change.</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: damo		</title>
		<link>/2004/12/software-and-picture-hanging/#comment-197</link>

		<dc:creator><![CDATA[damo]]></dc:creator>
		<pubDate>Thu, 09 Dec 2004 05:56:09 +0000</pubDate>
		<guid isPermaLink="false">/wordpress/?p=148#comment-197</guid>

					<description><![CDATA[well said!
]]></description>
			<content:encoded><![CDATA[<p>well said!</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>

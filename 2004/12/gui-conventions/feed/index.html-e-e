<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	
	>
<channel>
	<title>
	Comments on: GUI conventions	</title>
	<atom:link href="https://www.ultrasaurus.com/2004/12/gui-conventions/feed/" rel="self" type="application/rss+xml" />
	<link>https://www.ultrasaurus.com/2004/12/gui-conventions/</link>
	<description>Sarah Allen&#039;s reflections on internet software and other topics</description>
	<lastBuildDate>Sun, 02 Jan 2005 03:08:07 +0000</lastBuildDate>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.7.1</generator>
	<item>
		<title>
		By: Steve K		</title>
		<link>https://www.ultrasaurus.com/2004/12/gui-conventions/#comment-205</link>

		<dc:creator><![CDATA[Steve K]]></dc:creator>
		<pubDate>Sun, 02 Jan 2005 03:08:07 +0000</pubDate>
		<guid isPermaLink="false">https://www.ultrasaurus.com/wordpress/?p=150#comment-205</guid>

					<description><![CDATA[
I mostly agree, Sarah.  Unfortunately, most mortals (not the ones you or I would generally run into at work or in our field) don&#039;t know HTML, don&#039;t know how to make web sites, and even if they can pick up a WYSIWYG (sic) editor, don&#039;t generally understand the corrolation between what they are doing, the resulting HTML, and many problems, including layout and compatibility differences across browsers.

What Apple was doing with Newton when we met was right on.  I kinda got distracted by that stuff, because it was so much better than most of what we have today.  Yes, Laszlo is neat, but it&#039;s actually much harder for &quot;mere mortals&quot; to stomach XML (I consider myself one of those for the purpose of this case) instead of the JavaScript syntax.

An architecture like Newton, which is not so different in theory and many concepts from LZX, is better for UI design because you no longer have to do &quot;hard, mostly static work&quot; to implement UI controls.  You simple, a la HyperCard, override certain methods/hooks/handlers to implement functionality.  You can rapidly and interatively build, try, and inspect your creation &quot;from within&quot; instead of jumping contexts back and forth between an IDE/development environment and what you&#039;re working on, and UI programming no longer becomes an arduous task that you (sic) &quot;have to debug the same way you debug your other stuff.&quot;

Instead, you provide an environment where rapid iteration and experimentation are very simple.  This widens your audience and user base and overcomes many if not most of the problems inherent in web design and development.

What do you think?

Happy New Year.  I really like your articles, and try to check in frequently to read what you have to say.

Steve
]]></description>
			<content:encoded><![CDATA[<p>I mostly agree, Sarah.  Unfortunately, most mortals (not the ones you or I would generally run into at work or in our field) don&#8217;t know HTML, don&#8217;t know how to make web sites, and even if they can pick up a WYSIWYG (sic) editor, don&#8217;t generally understand the corrolation between what they are doing, the resulting HTML, and many problems, including layout and compatibility differences across browsers.</p>
<p>What Apple was doing with Newton when we met was right on.  I kinda got distracted by that stuff, because it was so much better than most of what we have today.  Yes, Laszlo is neat, but it&#8217;s actually much harder for &#8220;mere mortals&#8221; to stomach XML (I consider myself one of those for the purpose of this case) instead of the JavaScript syntax.</p>
<p>An architecture like Newton, which is not so different in theory and many concepts from LZX, is better for UI design because you no longer have to do &#8220;hard, mostly static work&#8221; to implement UI controls.  You simple, a la HyperCard, override certain methods/hooks/handlers to implement functionality.  You can rapidly and interatively build, try, and inspect your creation &#8220;from within&#8221; instead of jumping contexts back and forth between an IDE/development environment and what you&#8217;re working on, and UI programming no longer becomes an arduous task that you (sic) &#8220;have to debug the same way you debug your other stuff.&#8221;</p>
<p>Instead, you provide an environment where rapid iteration and experimentation are very simple.  This widens your audience and user base and overcomes many if not most of the problems inherent in web design and development.</p>
<p>What do you think?</p>
<p>Happy New Year.  I really like your articles, and try to check in frequently to read what you have to say.</p>
<p>Steve</p>
]]></content:encoded>
		
			</item>
		<item>
		<title>
		By: gse		</title>
		<link>https://www.ultrasaurus.com/2004/12/gui-conventions/#comment-204</link>

		<dc:creator><![CDATA[gse]]></dc:creator>
		<pubDate>Mon, 27 Dec 2004 19:13:32 +0000</pubDate>
		<guid isPermaLink="false">https://www.ultrasaurus.com/wordpress/?p=150#comment-204</guid>

					<description><![CDATA[My grandparents are in their mid-80&#039;s and have a computer.  My grandfather uses it the most, doing basic word processing and email.  And despite the fact that he was quite the technologist in his younger years, using &quot;the machine&quot; is always immensely frustrating for him.  I believe it&#039;s because most of the metaphors have never sunk in.

He gets the &quot;click the blue underlined text&quot; thing, and maybe even the &quot;the mouse cursor changes&quot; thing... but even the simple metaphors that go along with word processing, drawing, etc have never clicked.  So every time he&#039;s at the computer, he&#039;s relearning most everything from scratch.  I&#039;d have pitched the thing out the window already.
]]></description>
			<content:encoded><![CDATA[<p>My grandparents are in their mid-80&#8217;s and have a computer.  My grandfather uses it the most, doing basic word processing and email.  And despite the fact that he was quite the technologist in his younger years, using &#8220;the machine&#8221; is always immensely frustrating for him.  I believe it&#8217;s because most of the metaphors have never sunk in.</p>
<p>He gets the &#8220;click the blue underlined text&#8221; thing, and maybe even the &#8220;the mouse cursor changes&#8221; thing&#8230; but even the simple metaphors that go along with word processing, drawing, etc have never clicked.  So every time he&#8217;s at the computer, he&#8217;s relearning most everything from scratch.  I&#8217;d have pitched the thing out the window already.</p>
]]></content:encoded>
		
			</item>
	</channel>
</rss>
